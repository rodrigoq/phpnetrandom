<?php

use NetRandom\NetRandom;
use NetRandom\Tests\Helper;
use PHPUnit\Framework\TestCase;

/**
 * Tests a real world application use of .net Random class.
 * Comparing doubles between languages is hard.
 */
final class NetRandomRealDoubleTest extends TestCase
{
    public function testRealDouble() : void
    {
        $r = new NetRandom(3);
        $this->assertEquals('0011111111010010110010010000010011001110101001011001001000001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.293519212535359');
        $this->assertEquals('0011111111100110010100101001010111010101101011001010010100101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.697581212361148');
        $this->assertEquals(259, $r->Next(0, 300));
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals('0011111111100001111011111000100110000001111000111101111100010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.560490373317381');
        $this->assertEquals('0011111111000111000111010010111111011011001011100011101001100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.180578214666144');
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals(284, $r->Next(0, 300));
        $this->assertEquals('0011111111010110010100010001100100110001101011001010001000110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.348699854383571');
        $this->assertEquals('0011111111011000010100010011101001010000001100001010001001110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.379957750616576');
        $this->assertEquals(150, $r->Next(0, 300));
        $this->assertEquals(242, $r->Next(0, 300));
        $this->assertEquals('0011111111100110001111011000101001010100001011000111101100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.695012249376165');
        $this->assertEquals('0011111110011111000000010001110100100000001111100000001000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0302776862076845');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(271, $r->Next(0, 300));
        $this->assertEquals('0011111110111111100110100011111100011000001111110011010001111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.123447364253666');
        $this->assertEquals('0011111111101011010111101111110010011011101101101011110111111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.855345062378489');
        $this->assertEquals('0011111111101000010001001011111111110010001100001000100110000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.758392308260497');
        $this->assertEquals('0011111111011110011110100010101010010011101111001111010001010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.476206440234653');
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals('0011111111011111111011100100001001101111001111111101110010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.498917206422853');
        $this->assertEquals('0011111110110100101001100101000111010100001010010100110010100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0806628363582598');
        $this->assertEquals(298, $r->Next(0, 300));
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals('0011111111100000011011010001000010001001111000001101101000100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.513313550275431');
        $this->assertEquals('0011111111100001011111000111100001110111011000101111100011110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.546444161583876');
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals(149, $r->Next(0, 300));
        $this->assertEquals('0011111111010010110110111010110001100010101001011011011101011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.29465779908684');
        $this->assertEquals('0011111111001111001011001001000111000111001111100101100100100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.243547651564492');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(19, $r->Next(0, 300));
        $this->assertEquals('0011111111100110000101100110010000111100101011000010110011001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.690233343602267');
        $this->assertEquals('0011111111101100100100110100010111010110111110010010011010001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.892977638120287');
        $this->assertEquals('0011111111100000011111101000000010101010001000001111110100000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.515442211420947');
        $this->assertEquals('0011111111011011001110110110100001100001101101100111011011010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.425500960753067');
        $this->assertEquals(257, $r->Next(0, 300));
        $this->assertEquals(198, $r->Next(0, 300));
        $this->assertEquals('0011111111101001110111001110101000000000011100111011100111010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.808217049487036');
        $this->assertEquals('0011111111100001100101010000101110100010111000110010101000010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.549444025172593');
        $this->assertEquals(250, $r->Next(0, 300));
        $this->assertEquals(183, $r->Next(0, 300));
        $this->assertEquals('0011111111011111010010001001100001111000001111101001000100110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.48880588286035');
        $this->assertEquals('0011111111011011111100101010011101010100101101111110010101001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.436685402615315');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals('0011111111011100001001110110110000110011001110000100111011011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.439906168002592');
        $this->assertEquals('0011111111100011110001010011010001101110011001111000101001101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.61782285273905');
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals(21, $r->Next(0, 300));
        $this->assertEquals('0011111111101001100110100111000101010101001100110011010011100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.800102869421292');
        $this->assertEquals('0011111110111001011000011101000010100100001100101100001110100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0991487885355711');
        $this->assertEquals(238, $r->Next(0, 300));
        $this->assertEquals(212, $r->Next(0, 300));
        $this->assertEquals('0011111111001001011011011101001001111000001100101101101110100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.198664005938295');
        $this->assertEquals('0011111111101001000110010010111001000110111100100011001001011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.784323824469151');
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals(31, $r->Next(0, 300));
        $this->assertEquals('0011111111100101010110100011101101101100111010101011010001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.667264664390713');
        $this->assertEquals('0011111111100110100001010010010100000001011011010000101001001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.70375299719337');
        $this->assertEquals(171, $r->Next(0, 300));
        $this->assertEquals(255, $r->Next(0, 300));
        $this->assertEquals('0011111110110101110101100011011110110110001010111010110001101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0852999515297357');
        $this->assertEquals('0011111111010000100011000001011000110101101000010001100000101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.258550217029895');
        $this->assertEquals(91, $r->Next(0, 300));
        $this->assertEquals(189, $r->Next(0, 300));
        $this->assertEquals('0011111111010101110000110100100101011000101010111000011010010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.340044342605418');
        $this->assertEquals('0011111111001000001101000001001101000111001100000110100000100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.189089212189004');
        $this->assertEquals(116, $r->Next(0, 300));
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals('0011111111101111111100110100100000100110111111111110011010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.998447490855328');
        $this->assertEquals('0011111110111000111101111001011011000010001100011110111100101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0975279068097137');
        $this->assertEquals(200, $r->Next(0, 300));
        $this->assertEquals(199, $r->Next(0, 300));
        $this->assertEquals('0011111111100111111101010000111001001111101011111110101000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.748664050711628');
        $this->assertEquals('0011111111101100010110011110010110001111011110001011001111001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.88597372075821');
        $this->assertEquals('0011111111100010111100000111110111111110011001011110000011111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.591856953497909');
        $this->assertEquals('0011111111100001110101010010111110110011001000111010101001011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.557273721581918');
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals('0011111110111011010001100001001011101110001101101000110000100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.106537993581285');
        $this->assertEquals('0011111111101000001111101000010010001111101100000111110100001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.757631569522261');
        $this->assertEquals(221, $r->Next(0, 300));
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals('0011111111011100011000010110011000111001001110001100001011001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.4434447821432');
        $this->assertEquals('0011111111011001111000011001101101110111101100111100001100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.40439497651737');
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals('0011111111100110001101111101000100111000111011000110111110100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.694313632181992');
        $this->assertEquals('0011111111100111011001010101001001100011001011101100101010100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.731118386951796');
        $this->assertEquals(66, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110010111001000110101100111111111001011100100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.99359973706007');
        $this->assertEquals('0011111110111010101111100010011111111000001101010111110001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.104464052293666');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(295, $r->Next(0, 300));
        $this->assertEquals('0011111111100000111000100111010010110001011000011100010011101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.527643534134907');
        $this->assertEquals('0011111111001101011110010000010010000101001110101111001000001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.230255665830456');
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals('0011111111000101000000110100001111000001001010100000011010001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164162129705847');
        $this->assertEquals('0011111111010000000011010110001010001111101000000001101011000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.250816955813587');
        $this->assertEquals(68, $r->Next(0, 300));
        $this->assertEquals(18, $r->Next(0, 300));
        $this->assertEquals('0011111110110010100001111000101010110110001001010000111100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0723807043732985');
        $this->assertEquals('0011111111100110011110110111111001111100111011001111011011111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.702574962611578');
        $this->assertEquals(129, $r->Next(0, 300));
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals('0011111111101110101111101101000110001111101111010111110110100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.960793286078048');
        $this->assertEquals('0011111111010100000000110001111000011101001010000000011000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.312690285180085');
        $this->assertEquals(57, $r->Next(0, 300));
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals('0011111101111011001110110101000110100000001101100111011010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00664836773958447');
        $this->assertEquals('0011111111100101000011111010000001111111101010100001111101000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.658157586426548');
        $this->assertEquals(179, $r->Next(0, 300));
        $this->assertEquals(244, $r->Next(0, 300));
        $this->assertEquals('0011111110111100111010010011101010010110001110011101001001110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.112933789898145');
        $this->assertEquals('0011111111101011100100010010101001000011001101110010001001010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.861470347671523');
        $this->assertEquals('0011111111101010000101010101011111111110001101000010101010110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.815105434886695');
        $this->assertEquals('0011111111101100110110010011111011111101101110011011001001111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.901519294316657');
        $this->assertEquals('0011111111010111001111010001010111110001001011100111101000101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.363103375939235');
        $this->assertEquals('0011111111010110111111100100000010011110001011011111110010000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.359268335792827');
        $this->assertEquals(148, $r->Next(0, 300));
        $this->assertEquals(197, $r->Next(0, 300));
        $this->assertEquals('0011111111011110100001101100011110011100001111010000110110001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.476976301743172');
        $this->assertEquals('0011111111001111100000111011011100000001001111110000011101101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.246207118614673');
        $this->assertEquals(31, $r->Next(0, 300));
        $this->assertEquals(169, $r->Next(0, 300));
        $this->assertEquals('0011111111100110000001110111000001111101111011000000111011100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.688408132497411');
        $this->assertEquals('0011111111101000011110010000111001011101101100001111001000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.764777358046164');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals('0011111111011011010010111101000110000100101101101001011110100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.426502589800629');
        $this->assertEquals('0011111111010111110001011011000011011000001011111000101101100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.371441088789814');
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals('0011111111100000111001111100110101100110101000011100111110011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.528296184972067');
        $this->assertEquals('0011111111100101101100010111010101000110011010110110001011101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.677912366426509');
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals(222, $r->Next(0, 300));
        $this->assertEquals('0011111111101111001001001011111011110000101111100100100101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.973235578729415');
        $this->assertEquals('0011111111000001101111101000000110101000001000110111110100000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.138626296137751');
        $this->assertEquals(5, $r->Next(0, 300));
        $this->assertEquals(114, $r->Next(0, 300));
        $this->assertEquals('0011111111100001001111001010001000011010101000100111100101000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.538651515980555');
        $this->assertEquals('0011111111100010010110111101101101001010011001001011011110110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.573712964343705');
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001110110110001001011011011000000111011011000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.50724904868158');
        $this->assertEquals('0011111111000100111011100100110001000101001010011101110010011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.163522275706531');
        $this->assertEquals(261, $r->Next(0, 300));
        $this->assertEquals(199, $r->Next(0, 300));
        $this->assertEquals('0011111111011010100100011101001001000110001101010010001110100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.415150230943761');
        $this->assertEquals('0011111111001101010110000001111111001100001110101011000001000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.229251837464632');
        $this->assertEquals(109, $r->Next(0, 300));
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals('0011111111101000001100010111110110101110111100000110001011111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.756041375806574');
        $this->assertEquals('0011111111100010010011011000110001000110111001001001101100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.571966303313135');
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals(247, $r->Next(0, 300));
        $this->assertEquals('0011111111100011001010000001110101010001101001100101000000111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.598646792861934');
        $this->assertEquals('0011111111101011110000111010100010000000101101111000011101010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.867634059334003');
        $this->assertEquals('0011111111011100001110110100101001010011101110000111011010010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.44111879516445');
        $this->assertEquals('0011111111001001000101110000110011001000001100100010111000011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.196015928031884');
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals(249, $r->Next(0, 300));
        $this->assertEquals('0011111111001100010000011010111101011101001110001000001101011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.220754547613093');
        $this->assertEquals('0011111111100100010100111001111000110111001010001010011100111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.635207278949771');
        $this->assertEquals(243, $r->Next(0, 300));
        $this->assertEquals(222, $r->Next(0, 300));
        $this->assertEquals('0011111111010010010010110101100100110100101001001001011010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.285848904999834');
        $this->assertEquals('0011111111011011110101110110010000011000101101111010111011001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.435021423471636');
        $this->assertEquals(213, $r->Next(0, 300));
        $this->assertEquals(22, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101101001000000000001100111110110110100100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.928283715587241');
        $this->assertEquals('0011111111001100101110111010101000111010001110010111011101010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.224477079801484');
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111110111110011001000100011000111100001111001100100010001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.118717565256505');
        $this->assertEquals('0011111111101100111001111000100010000011101110011100111100010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.903263337399468');
        $this->assertEquals('0011111111100000000001010000100111111100111000000000101000010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.500615114113602');
        $this->assertEquals('0011111111101000100101110110111111111101111100010010111011100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.768486019116121');
        $this->assertEquals(16, $r->Next(0, 300));
        $this->assertEquals(157, $r->Next(0, 300));
        $this->assertEquals('0011111111101100100110100011010110111110011110010011010001101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.893824455278844');
        $this->assertEquals('0011111111100110001001100010011001101111111011000100110001001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.692157000159918');
        $this->assertEquals(283, $r->Next(0, 300));
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals('0011111110000000010101100001100110000000001000001010110000110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00797672197594155');
        $this->assertEquals('0011111110100100100000011001010110111100001010010000001100101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0400511543452978');
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111110111000000111110000101100111100001100000011111000010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.094223692125745');
        $this->assertEquals('0011111111010100110100010100111110001100101010011010001010011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.325275313726289');
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals(31, $r->Next(0, 300));
        $this->assertEquals('0011111111100110010100011111101101000000001011001010001111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.697507500973301');
        $this->assertEquals('0011111111101010010111011110111110011011011101001011101111011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.823966792702659');
        $this->assertEquals('0011111111011011010110000100011111110011101101101011000010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.427263248445123');
        $this->assertEquals('0011111111100110101001100010111010101111001011010100110001011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.707785932676767');
        $this->assertEquals(105, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111111100000101101100001101010101010101000010110110000110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.522229512465293');
        $this->assertEquals('0011111111101000100000010001000011001101101100010000001000100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.765755082837192');
        $this->assertEquals(263, $r->Next(0, 300));
        $this->assertEquals(130, $r->Next(0, 300));
        $this->assertEquals('0011111111101110100110001100101110000111101111010011000110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.956151738276776');
        $this->assertEquals('0011111111010101110100011000101110001001001010111010001100010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.340914615588689');
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals(41, $r->Next(0, 300));
        $this->assertEquals('0011111111011101110011001000011000111111001110111001100100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.465608178854737');
        $this->assertEquals('0011111111100100100100101000110001000000011010010010010100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.642889142801468');
        $this->assertEquals(135, $r->Next(0, 300));
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals('0011111111010100110101011111001100110011001010011010101111100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.325558471645023');
        $this->assertEquals('0011111111101010100100001010110101010011101101010010000101011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.830160773745813');
        $this->assertEquals('0011111111101001111101101010010010010001101100111110110101001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.811357769561632');
        $this->assertEquals('0011111111101101010100011100011110111101001110101010001110001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.91623293837357');
        $this->assertEquals('0011111111010011010101110001101011100111001001101010111000110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.30219147275304');
        $this->assertEquals('0011111111010000110001111110111110000001001000011000111111011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.262203098396865');
        $this->assertEquals(265, $r->Next(0, 300));
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals('0011111111100100000100100100010111010001001010000010010010001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.627230556973829');
        $this->assertEquals('0011111111101000101111011011110100100110111100010111101101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.773161483822931');
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals(98, $r->Next(0, 300));
        $this->assertEquals('0011111111010101110011111010000101001001101010111001111101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.340797731345891');
        $this->assertEquals('0011111111011000100111111010111001000000001100010011111101011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.38474613446032');
        $this->assertEquals(279, $r->Next(0, 300));
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals('0011111111100000110111001110111101001110011000011011100111011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.526969578828183');
        $this->assertEquals('0011111111100000011111010111110111100110001000001111101011111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.515318822355624');
        $this->assertEquals(205, $r->Next(0, 300));
        $this->assertEquals(123, $r->Next(0, 300));
        $this->assertEquals('0011111111100001100111000001100100010000101000110011100000110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.550304920668856');
        $this->assertEquals('0011111111011000111110011000100011100001001100011111001100010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.390230388562302');
        $this->assertEquals(73, $r->Next(0, 300));
        $this->assertEquals(87, $r->Next(0, 300));
        $this->assertEquals('0011111111100100101101011111011011110101101010010110101111101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.647212486084184');
        $this->assertEquals('0011111111011101010011100001111001010111001110101001110000111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.45789297598316');
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals(181, $r->Next(0, 300));
        $this->assertEquals('0011111111101100101011100101100011101001001110010101110010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.896282630458606');
        $this->assertEquals('0011111111101011110011101100001011101110011101111001110110000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.868989434963553');
        $this->assertEquals('0011111111100010011000011101011000111100001001001100001110101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.57444297549056');
        $this->assertEquals('0011111111011101001111000000111001001101001110100111100000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.456790519159655');
        $this->assertEquals(150, $r->Next(0, 300));
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals('0011111111101111111111011010111000101100101111111111101101011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.999716842081266');
        $this->assertEquals('0011111111010011111110001101001111110100101001111111000110101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.312062252923875');
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals('0011111111100000101100100110001000100111111000010110010011000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.521775319949619');
        $this->assertEquals('0011111111000101001000001011000011100101001010100100000101100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.165060150048258');
        $this->assertEquals(247, $r->Next(0, 300));
        $this->assertEquals(98, $r->Next(0, 300));
        $this->assertEquals('0011111111011110111010111111111101110110001111011101011111111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483154168577471');
        $this->assertEquals('0011111111100111111110000101110110000011101011111111000010111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.749068028642362');
        $this->assertEquals(37, $r->Next(0, 300));
        $this->assertEquals(164, $r->Next(0, 300));
        $this->assertEquals('0011111110111000010110101010111101110000001100001011010101011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0951337479497929');
        $this->assertEquals('0011111111100010010010001111010001100111101001001001000111101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.571405603816456');
        $this->assertEquals(122, $r->Next(0, 300));
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals('0011111111100011100101011010011000101001001001110010101101001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.612017708184206');
        $this->assertEquals('0011111111101110011010001100010100111001011111001101000110001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.950289356499114');
        $this->assertEquals('0011111111101110100111111011111011001011101111010011111101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.957000158241484');
        $this->assertEquals('0011111110100101101010101001011001110000001010110101010100101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0423171054768921');
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals('0011111111100010101011110101100000000000011001010101111010110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.583904267094985');
        $this->assertEquals('0011111111100000101010101011000101110000011000010101010101100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.520836562626453');
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111100000110101101001110011011000011000011010110100111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.526197836513723');
        $this->assertEquals('0011111111010001110110010010001101111000001000111011001001000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.27887808544509');
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals('0011111111001001011011111001101110101011001100101101111100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.198718508332371');
        $this->assertEquals('0011111111000111101011101101110000000000001011110101110110111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.18502378472361');
        $this->assertEquals(247, $r->Next(0, 300));
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals('0011111111011000101001000101000111100110101100010100100010100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.385029292379054');
        $this->assertEquals('0011111111100011110101101010001000010110001001111010110101000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.619950335761509');
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110010110001101110111110001111111001011000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.993543502406005');
        $this->assertEquals('0011111111100000101010101010000100111011011000010101010101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.520828834511726');
        $this->assertEquals(176, $r->Next(0, 300));
        $this->assertEquals(66, $r->Next(0, 300));
        $this->assertEquals('0011111111101101000001101100010010110101011110100000110110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.907076219984831');
        $this->assertEquals('0011111111011111110100011110111110011111001111111010001111011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.497188478008466');
        $this->assertEquals(49, $r->Next(0, 300));
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals('0011111111010111001101110111001001111011001011100110111011100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.362759228033367');
        $this->assertEquals('0011111111000101000100011001101000000010001010100010001100110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164599658066686');
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals('0011111111010000011100100011100110001010101000001110010001110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.256971726779347');
        $this->assertEquals('0011111111100011111110010001000100000010101001111111001000100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.624153618991447');
        $this->assertEquals(149, $r->Next(0, 300));
        $this->assertEquals(138, $r->Next(0, 300));
        $this->assertEquals('0011111111010010001001111100011110000011101001000100111110001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.283677938992008');
        $this->assertEquals('0011111110110000011110111100100000011110001000001111011110010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0643887589985452');
        $this->assertEquals(218, $r->Next(0, 300));
        $this->assertEquals(232, $r->Next(0, 300));
        $this->assertEquals('0011111111100000011001000110001010111011011000001100100011000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.512254110310345');
        $this->assertEquals('0011111111100101101011011110001111011111111010110101101111001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.677476823179739');
        $this->assertEquals(191, $r->Next(0, 300));
        $this->assertEquals(163, $r->Next(0, 300));
        $this->assertEquals('0011111111001001111000101100100100110001001100111100010110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.202233456635025');
        $this->assertEquals('0011111111100111001100100111110011011000011011100110010011111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.724913046567195');
        $this->assertEquals(165, $r->Next(0, 300));
        $this->assertEquals(281, $r->Next(0, 300));
        $this->assertEquals('0011111111100111000110000100110100100010001011100011000010011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.721716467627192');
        $this->assertEquals('0011111111000101100001010110110101010110001010110000101011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.16813437182835');
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals(236, $r->Next(0, 300));
        $this->assertEquals('0011111111101110011001010010011010001010011111001100101001001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.949847479327511');
        $this->assertEquals('0011111111101011101110001110101001011101101101110111000111010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.866322691955754');
        $this->assertEquals('0011111111101110100111011010100101111011001111010011101101010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.956745854093109');
        $this->assertEquals('0011111111011011111010100011101100100000101101111101010001110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.436171323729759');
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals('0011111110011100111011100000111001110000001110011101110000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0282518630978893');
        $this->assertEquals('0011111110110110001100110000000110000110001011000110011000000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0867157890865187');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(50, $r->Next(0, 300));
        $this->assertEquals('0011111111011110110100011000101000010100101111011010001100010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.481539268736513');
        $this->assertEquals('0011111111010111001001000110110010101111101011100100100011011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.361598178447037');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(212, $r->Next(0, 300));
        $this->assertEquals('0011111111100000000010100110011000011101011000000001010011001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.501269395230929');
        $this->assertEquals('0011111111100010011000101101010111101000001001001100010110101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.574564889340925');
        $this->assertEquals(205, $r->Next(0, 300));
        $this->assertEquals(109, $r->Next(0, 300));
        $this->assertEquals('0011111111100100100101100001011011010110101010010010110000101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.643321437129435');
        $this->assertEquals('0011111111010100100001010101111111011111001010010000101011000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.320640533380509');
        $this->assertEquals(267, $r->Next(0, 300));
        $this->assertEquals(226, $r->Next(0, 300));
        $this->assertEquals('0011111111001101111000010110010001000000001110111100001011001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.233440905918107');
        $this->assertEquals('0011111111010100001110100110111110111100101010000111010011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.316066679226266');
        $this->assertEquals(264, $r->Next(0, 300));
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals('0011111110010011000100000100101100101000001001100010000010010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0186168425803151');
        $this->assertEquals('0011111111000111010100010001111101110100001011101010001000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.182163173417637');
        $this->assertEquals(284, $r->Next(0, 300));
        $this->assertEquals(68, $r->Next(0, 300));
        $this->assertEquals('0011111111011000001001100101110110101110001100000100110010111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.377341671091198');
        $this->assertEquals('0011111111001000111010010111011110100000001100011101001011101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.194624856205017');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(122, $r->Next(0, 300));
        $this->assertEquals('0011111111011101111101100010100000101011001110111110110001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.468149225445534');
        $this->assertEquals('0011111111011001000000000110010011001111001100100000000011001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.390649034823593');
        $this->assertEquals(200, $r->Next(0, 300));
        $this->assertEquals(19, $r->Next(0, 300));
        $this->assertEquals('0011111101111000100110101111011010000000001100010011010111101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00600715913158243');
        $this->assertEquals('0011111111010111111101100100110000111001101011111110110010011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.374407821974907');
        $this->assertEquals(10, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111111011010110100110101111011101111101101011010011010111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.419151052562125');
        $this->assertEquals('0011111111010101111010000001101111011010001010111101000000111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.342291796739349');
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals('0011111111011101100101010111111110001101101110110010101011111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.462249649438192');
        $this->assertEquals('0011111111011111100011010111010110011011001111110001101011101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.493008996589579');
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals(292, $r->Next(0, 300));
        $this->assertEquals('0011111111010000001111000101101000000011101000000111100010110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.253683570424879');
        $this->assertEquals('0011111111010110110010010110011100000010101011011001001011001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.356042626013999');
        $this->assertEquals(157, $r->Next(0, 300));
        $this->assertEquals(259, $r->Next(0, 300));
        $this->assertEquals('0011111111101100101101011000011110000001101110010110101100001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.897159341209177');
        $this->assertEquals('0011111111001000111011111011110011100111001100011101111101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.194816220176786');
        $this->assertEquals(189, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111111100001101111000000101110110101111000110111100000010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.554204802752568');
        $this->assertEquals('0011111111011010010110010010000011100110101101001011001001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.411689973162343');
        $this->assertEquals(267, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111000001111001110111101111101000001000111100111011111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.139876831388044');
        $this->assertEquals('0011111111000000001101000011000010001011001000000110100001100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.126592700894267');
        $this->assertEquals(237, $r->Next(0, 300));
        $this->assertEquals(86, $r->Next(0, 300));
        $this->assertEquals('0011111111011000100010010011011010010111001100010001001001101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.383374831817753');
        $this->assertEquals('0011111111100101100101100000000011010111011010110010110000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.674560948123485');
        $this->assertEquals(72, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111111101101000001110110111001100000101110100000111011011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.907157124442587');
        $this->assertEquals('0011111111100011111001000100001111011010101001111100100010001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.621614386617027');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals('0011111111010010001101010100111010111110101001000110101010011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.284503637479853');
        $this->assertEquals('0011111111010000000001011011110010100110001000000000101101111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.250350153190247');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(267, $r->Next(0, 300));
        $this->assertEquals('0011111110111110110000001100100001000110001111011000000110010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.12012912478304');
        $this->assertEquals('0011111111100011010110011011100011010001011001101011001101110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.604702385889693');
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals(157, $r->Next(0, 300));
        $this->assertEquals('0011111111101110101011000011000100100001111111010101100001100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.958519522081371');
        $this->assertEquals('0011111111101111000100101110000010000101111111100010010111000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.971054326729409');
        $this->assertEquals('0011111111101111001010101101011111010001011111100101010110110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.973979863326056');
        $this->assertEquals('0011111110010101110011110110101010111000001010111001111011010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0212990450771987');
        $this->assertEquals(200, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111111100000010101100011010100100001101000001010110001101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.510523381880728');
        $this->assertEquals('0011111111010001011111100100100110110111101000101111110010010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.273333005268747');
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals('0011111111100000010011010001111100010100101000001001101000111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.509414234435844');
        $this->assertEquals('0011111111100011000001001010010101111001101001100000100101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.59431718596924');
        $this->assertEquals(145, $r->Next(0, 300));
        $this->assertEquals(57, $r->Next(0, 300));
        $this->assertEquals('0011111111100000000011001101001011001111001000000001100110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.501565365354328');
        $this->assertEquals('0011111111010010101110010100011010101010001001010111001010001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.292558351667858');
        $this->assertEquals(164, $r->Next(0, 300));
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals('0011111111101100100110101011110110111101011110010011010101111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.893889303269744');
        $this->assertEquals('0011111111101001001101001011111011101111011100100110100101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.787688701314707');
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111110110001100100011001001010000000001000110010001100100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0686275065264793');
        $this->assertEquals('0011111111100100001110011110100100100111001010000111001111010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.632069183807852');
        $this->assertEquals(298, $r->Next(0, 300));
        $this->assertEquals(76, $r->Next(0, 300));
        $this->assertEquals('0011111111100010100110010111010000100101011001010011001011101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.581232140577041');
        $this->assertEquals('0011111111100100101100101010100100101110101010010110010101010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.64680918801893');
        $this->assertEquals(257, $r->Next(0, 300));
        $this->assertEquals(222, $r->Next(0, 300));
        $this->assertEquals('0011111111100000101010000101100010010100001000010101000010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.520550050083804');
        $this->assertEquals('0011111111101110011000100101001011100100011111001100010010100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.949502416862875');
        $this->assertEquals('0011111111101010100101101000001001100001001101010010110100000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.830872716769051');
        $this->assertEquals('0011111111010111010111001110011110000000001011101011100111001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.36504542844605');
        $this->assertEquals(266, $r->Next(0, 300));
        $this->assertEquals(50, $r->Next(0, 300));
        $this->assertEquals('0011111111000011100010001101000101000101001001110001000110100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.152612837568211');
        $this->assertEquals('0011111111101000101011101010101010100001011100010101110101010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.771321597402599');
        $this->assertEquals(185, $r->Next(0, 300));
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals('0011111111000100111111110010111011010111001010011111111001011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164037566242757');
        $this->assertEquals('0011111111101110111101111011111010001101001111011110111101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.967742229331165');
        $this->assertEquals('0011111111010110100101010010010100110111101011010010101001001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.35285311162139');
        $this->assertEquals('0011111111101100001011000111100001110110001110000101100011110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.880428534411093');
        $this->assertEquals('0011111110111100101110010010011000110000001110010111001001001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.112200152181182');
        $this->assertEquals('0011111111101000011111011011111000111010001100001111101101111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.765349496512371');
        $this->assertEquals(235, $r->Next(0, 300));
        $this->assertEquals(28, $r->Next(0, 300));
        $this->assertEquals('0011111111100111111101100000101110000011111011111110110000010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.748784787835919');
        $this->assertEquals('0011111110100110001011100100100000111100001011000101110010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.043321854920742');
        $this->assertEquals(102, $r->Next(0, 300));
        $this->assertEquals(63, $r->Next(0, 300));
        $this->assertEquals('0011111111100110101111101111101100010011111011010111110111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.710813082619949');
        $this->assertEquals('0011111111101001011000010100111100100010101100101100001010011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.793128555078585');
        $this->assertEquals(82, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111101100111000001010111000110101111110011100000101011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.902426820202929');
        $this->assertEquals('0011111111010101111000011101110101010100101010111100001110111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.341910679518204');
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals('0011111111100001000000000000101101100010001000100000000000010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.53125542799535');
        $this->assertEquals('0011111111101011101000111000101111110010111101110100011100011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.863714193861798');
        $this->assertEquals('0011111111011010100001010111101011110101101101010000101011110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.414396991680561');
        $this->assertEquals('0011111110010000011010110101110111101000001000001101011010111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0160345719270569');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111101000011011100010001100011000011100001101110001000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.763444469200188');
        $this->assertEquals('0011111110111110011000111011100010001000001111001100011101110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.118709119092072');
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals(99, $r->Next(0, 300));
        $this->assertEquals('0011111111000001111010011011110000001111001000111101001101111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.139945514099647');
        $this->assertEquals('0011111111101000111010000011110101010100011100011101000001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.778349556856952');
        $this->assertEquals(87, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111100011111101001111001100111001101001111110100111100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.62365113507195');
        $this->assertEquals('0011111111010010001100000011000110101110101001000110000001100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.284191532658502');
        $this->assertEquals(228, $r->Next(0, 300));
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals('0011111111100000101000101100010001100001001000010100010110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.51986903162667');
        $this->assertEquals('0011111111001101100100100100011001001101001110110010010010001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.231026447020018');
        $this->assertEquals(141, $r->Next(0, 300));
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals('0011111111101100101111001001110110101010101110010111100100111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.898024400183011');
        $this->assertEquals('0011111111101010000110011000001011011101001101000011001100000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.815614158667444');
        $this->assertEquals('0011111111011001100111011100010111111011001100110011101110001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.400254721939682');
        $this->assertEquals('0011111111010011110011011110111001111101001001111001101111011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.309444067212494');
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals(11, $r->Next(0, 300));
        $this->assertEquals('0011111110110111011001000001110011001000001011101100100000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0913713444449805');
        $this->assertEquals('0011111110100101100010101001010101111100001010110001010100101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0420729364464399');
        $this->assertEquals(79, $r->Next(0, 300));
        $this->assertEquals(243, $r->Next(0, 300));
        $this->assertEquals('0011111111100111111000100111111100011001001011111100010011111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.746398495857789');
        $this->assertEquals('0011111111001010000000100010000001010100001101000000010001000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.203189889063681');
        $this->assertEquals(221, $r->Next(0, 300));
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals('0011111111100001101101010000000100010010011000110110101000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.553345237650604');
        $this->assertEquals('0011111111010101100011100110111101011001001010110001110011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.336818539694333');
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals(165, $r->Next(0, 300));
        $this->assertEquals('0011111101011111001101100100001110000000001111100110110010000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00190502731218237');
        $this->assertEquals('0011111111100101010100111000111011010111101010101010011100011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.666449948524334');
        $this->assertEquals(237, $r->Next(0, 300));
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals('0011111111101100111010000111010101111111111110011101000011101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.903376340821095');
        $this->assertEquals('0011111111100010000001010010010111011000101001000000101001001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.563128398062255');
        $this->assertEquals(275, $r->Next(0, 300));
        $this->assertEquals(26, $r->Next(0, 300));
        $this->assertEquals('0011111111000101101100010110111110100100001010110110001011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.169477420006635');
        $this->assertEquals('0011111111101111101010011101011101001111101111110101001110101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.989482551342567');
        $this->assertEquals('0011111110110101110101111110110110011010001010111010111111011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0853260518449014');
        $this->assertEquals('0011111111100110110110101111010001011100001011011011010111101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.714227848087544');
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals(238, $r->Next(0, 300));
        $this->assertEquals('0011111111101110001011100111011111000111101111000101110011110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.943172350033732');
        $this->assertEquals('0011111110100110110001011110101000100100001011011000101111010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0444787186777586');
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals(179, $r->Next(0, 300));
        $this->assertEquals('0011111111100011101101000111011111110001101001110110100011110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.615779849987375');
        $this->assertEquals('0011111111001001001011101001100001011111001100100101110100110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.196734472735196');
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals('0011111110011011111111100110111100000000001101111111110011011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0273377746470914');
        $this->assertEquals('0011111111010000101010100111111001011011001000010101010011111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.260406102175082');
        $this->assertEquals(19, $r->Next(0, 300));
        $this->assertEquals(98, $r->Next(0, 300));
        $this->assertEquals('0011111110100000010110111110001110110100001000001011011111000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0319510609991621');
        $this->assertEquals('0011111110110110101101110000111100101000001011010110111000011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0887307618226534');
        $this->assertEquals(265, $r->Next(0, 300));
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals('0011111111100111011000110001011111000100111011101100011000110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.730846295007899');
        $this->assertEquals('0011111111011011000110000011000101111001101101100011000001100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.423351639613207');
        $this->assertEquals(244, $r->Next(0, 300));
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals('0011111111001101010100111101100111000110001110101010011110110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.229121419707835');
        $this->assertEquals('0011111111101001101111001011111100000100101100110111100101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.804290303403647');
        $this->assertEquals('0011111111100110001110111100110111011111101011000111011110011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.694800316679664');
        $this->assertEquals('0011111111011110110110001100110100000011101111011011000110011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.481982473042785');
        $this->assertEquals(273, $r->Next(0, 300));
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals('0011111111011000111110011111111111000110001100011111010000000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.390258735227519');
        $this->assertEquals('0011111111000011010011111111101011011000001001101001111111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.150878291647359');
        $this->assertEquals(260, $r->Next(0, 300));
        $this->assertEquals(30, $r->Next(0, 300));
        $this->assertEquals('0011111111101110100111011010101110100100011111010011101101010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.956746884601538');
        $this->assertEquals('0011111111100001101010110101101111100001111000110101011010111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.552167836368162');
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111010000101001000010000010011010101000010100100001000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.260017539029949');
        $this->assertEquals('0011111111100110001111101011000110111111101011000111110101100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.695153116572254');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111111100111000100101011111110111010111011100010010101111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.721038689706958');
        $this->assertEquals('0011111111000110101110001101010000100000001011010111000110101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.177515521728208');
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals(82, $r->Next(0, 300));
        $this->assertEquals('0011111111100100011100111001101101011111101010001110011100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.639112173877243');
        $this->assertEquals('0011111111100001000000101001111110110010101000100000010100111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.531570290462845');
        $this->assertEquals(104, $r->Next(0, 300));
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals('0011111111100000111111110110011110011101011000011111111011001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.531177337063093');
        $this->assertEquals('0011111111101010100100110001010101110110011101010010011000101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.830454570162322');
        $this->assertEquals('0011111111001010001010110001111000001100001101000101011000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.204440837821197');
        $this->assertEquals('0011111111101011000100111010100001110010001101100010011101010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.846149657315644');
        $this->assertEquals('0011111111010000100011010111111100010101101000010001101011111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.258636256334668');
        $this->assertEquals('0011111111100101001011101110010011110110011010100101110111001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.661974412231694');
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals('0011111111100010000100101010001110000011011001000010010101000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.564775234816957');
        $this->assertEquals('0011111111000001110001101110001100001100001000111000110111000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.138882046630085');
        $this->assertEquals(104, $r->Next(0, 300));
        $this->assertEquals(145, $r->Next(0, 300));
        $this->assertEquals('0011111111100101111110000010110101000000011010111111000001011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.686545015166767');
        $this->assertEquals('0011111111101000111010101011101011001100101100011101010101110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.778653526109948');
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals(51, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011100000001100010000100011101101110000000110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.857433565825891');
        $this->assertEquals('0011111111101101100111010100011100101110101110110011101010001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.925448981544678');
        $this->assertEquals('0011111111010011011011110010011100010010001001101101111001001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.303659217573544');
        $this->assertEquals('0011111111100000011101000010100000111011001000001110100001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.514179339871825');
        $this->assertEquals(102, $r->Next(0, 300));
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals('0011111111101010100001001101000110010111101101010000100110100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.828713222792704');
        $this->assertEquals('0011111111001000000101110111111101011111001100000010111011111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.188217088202116');
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals(232, $r->Next(0, 300));
        $this->assertEquals('0011111111100110011110010101100100000001111011001111001010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.702312949906249');
        $this->assertEquals('0011111111100100010111011010100110110001111010001011101101010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.636433455923774');
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111000101001001001000111010010100001010100100100100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.165178129526404');
        $this->assertEquals('0011111111000100111001001011100010110100001010011100100101110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.163230026216819');
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals('0011111111010011100101001010101100001111001001110010100101010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.305948986814334');
        $this->assertEquals('0011111111100001111010011110101001101100101000111101001111010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.559804165065197');
        $this->assertEquals(283, $r->Next(0, 300));
        $this->assertEquals(6, $r->Next(0, 300));
        $this->assertEquals('0011111111101010111110111110110010111110011101011111011111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.843252536767746');
        $this->assertEquals('0011111111010010110111011000110101011100001001011011101100011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.294772472369844');
        $this->assertEquals(195, $r->Next(0, 300));
        $this->assertEquals(40, $r->Next(0, 300));
        $this->assertEquals('0011111111011000110100001000001101000001101100011010000100000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.38772660651604');
        $this->assertEquals('0011111110111111000000101011110001010010001111100000010101111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.121135492399864');
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals(255, $r->Next(0, 300));
        $this->assertEquals('0011111111010001001001110011001001101000101000100100111001100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.268017389470719');
        $this->assertEquals('0011111111101110001010000000010011101110001111000101000000001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.942385163597011');
        $this->assertEquals('0011111111010111101111110001110110100110101011110111111000111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.371039784220531');
        $this->assertEquals('0011111110101111000101101110100011001100001111100010110111010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0607216595954828');
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals(214, $r->Next(0, 300));
        $this->assertEquals('0011111111001101001011000011000010100110001110100101100001100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.227911072889301');
        $this->assertEquals('0011111111101010101111001000101011010000101101010111100100010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.835515411028413');
        $this->assertEquals('0011111111001101111001001111100010010000001110111100100111110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.233550138880289');
        $this->assertEquals('0011111111011100111010010001110100001100101110011101001000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.451728117396928');
        $this->assertEquals(0, $r->Next(0, 300));
        $this->assertEquals(4, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011100000100011001110101111101101110000010001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.857455473326824');
        $this->assertEquals('0011111111011110110111101101110001110101001111011011110110111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.482352365964256');
        $this->assertEquals(287, $r->Next(0, 300));
        $this->assertEquals(79, $r->Next(0, 300));
        $this->assertEquals('0011111110111110001100011011011101001000001111000110001101101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.117946105132786');
        $this->assertEquals('0011111111100011100101000101100001011001101001110010100010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.611858534911582');
        $this->assertEquals(292, $r->Next(0, 300));
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals('0011111111010110011111011010100010100000101011001111101101010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.351419598493455');
        $this->assertEquals('0011111111010110010011001101100000001100101011001001100110110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.348440182091873');
        $this->assertEquals(141, $r->Next(0, 300));
        $this->assertEquals(74, $r->Next(0, 300));
        $this->assertEquals('0011111111001100101010001111100111011010001110010101000111110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.223906737856523');
        $this->assertEquals('0011111111101010101110101110100110100001001101010111010111010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.835316481457705');
        $this->assertEquals('0011111110110101000010101101001110000010001010100001010110100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.082196444776932');
        $this->assertEquals('0011111110000010001100110011011011000000001001000110011001101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00888674520369933');
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals('0011111111100110001000101001011101110110001011000100010100101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.691722613150125');
        $this->assertEquals('0011111111100110101001000111101000001101011011010100100011110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.707577730392841');
        $this->assertEquals(252, $r->Next(0, 300));
        $this->assertEquals(41, $r->Next(0, 300));
        $this->assertEquals('0011111111100000010000111011100000011011111000001000011101110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.508266500899692');
        $this->assertEquals('0011111111101000010100010101010000010011101100001010001010101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.759927786309238');
        $this->assertEquals(79, $r->Next(0, 300));
        $this->assertEquals(202, $r->Next(0, 300));
        $this->assertEquals('0011111111100001000101111011100001100110011000100010111101110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.534145545928807');
        $this->assertEquals('0011111111011100111001011001111011101000001110011100101100111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.451514937193838');
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals(89, $r->Next(0, 300));
        $this->assertEquals('0011111110111010110001000001100010110000001101011000100000110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.104554694194605');
        $this->assertEquals('0011111111101011010101011100011100000001001101101010101110001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.854220869417405');
        $this->assertEquals('0011111111100001110110111010011010001101111000111011011101001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.55806281769558');
        $this->assertEquals('0011111111101101110001000100111110000111101110111000100010011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.93021370420708');
        $this->assertEquals('0011111111000101000100111010000110110101001010100010011101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164661611041362');
        $this->assertEquals('0011111111010111000110001111110100000111101011100011000111111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.360900170803489');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(116, $r->Next(0, 300));
        $this->assertEquals('0011111110010000101001001011111011011000001000010100100101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0162534541526127');
        $this->assertEquals('0011111111101000110100111110100101000111001100011010011111010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.775868071604459');
        $this->assertEquals(44, $r->Next(0, 300));
        $this->assertEquals(47, $r->Next(0, 300));
        $this->assertEquals('0011111111011111111101111110101011000111101111111110111111010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.499506659572714');
        $this->assertEquals('0011111111101101011011010010110100101101111110101101101001011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.919577207378846');
        $this->assertEquals('0011111111011110000011110011111101010010001111000001111001111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.469680624301397');
        $this->assertEquals('0011111110111111110101101001100001011010001111111010110100110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.124368211778052');
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals('0011111111100100001101001111100111000000101010000110100111110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.631466747555633');
        $this->assertEquals('0011111111001100000010001111110100111010001110000001000111111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.219024327685602');
        $this->assertEquals(291, $r->Next(0, 300));
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals('0011111111101000010100011111011100010000001100001010001111101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.760005504246804');
        $this->assertEquals('0011111111010010110100111001001110100010101001011010011100100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.294163616976777');
        $this->assertEquals(52, $r->Next(0, 300));
        $this->assertEquals(215, $r->Next(0, 300));
        $this->assertEquals('0011111111101111001010111011011000011110101111100101011101101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.974085865064564');
        $this->assertEquals('0011111111001001100100001101111110000011001100110010000110111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.199733676016207');
        $this->assertEquals(299, $r->Next(0, 300));
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals('0011111110110011111001001111111110011010001001111100100111111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0777129889827748');
        $this->assertEquals('0011111111100000101101011100010110101001111000010110101110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.522188979909843');
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals(16, $r->Next(0, 300));
        $this->assertEquals('0011111111001111001101111010001111000001001111100110111101001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.243885487897268');
        $this->assertEquals('0011111111100011110010101001111001000011111001111001010100111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.618483669878209');
        $this->assertEquals(206, $r->Next(0, 300));
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals('0011111111100101011101100000000100110011111010101110110000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.670654870416343');
        $this->assertEquals('0011111111100111000101001101101111101100011011100010100110111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.721296273973443');
        $this->assertEquals(202, $r->Next(0, 300));
        $this->assertEquals(142, $r->Next(0, 300));
        $this->assertEquals('0011111111001000010101100010110010100010001100001010110001011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.190129832453155');
        $this->assertEquals('0011111111101101010011101010111000101110111110101001110101011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.915854541545666');
        $this->assertEquals('0011111111100001111011001011011110100001001000111101100101101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.560146155096659');
        $this->assertEquals('0011111111100101111000010000000001110011001010111100001000000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.683716034835072');
        $this->assertEquals(191, $r->Next(0, 300));
        $this->assertEquals(176, $r->Next(0, 300));
        $this->assertEquals('0011111111010010100100110110100011010101001001010010011011010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.290247162007842');
        $this->assertEquals('0011111111000010000011010001111101001101001001000001101000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.14102545992519');
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111101010001111011101010110110011011101000111101110101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.820048189638205');
        $this->assertEquals('0011111111100110111010111110001010110100111011011101011111000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.716294625641915');
        $this->assertEquals(97, $r->Next(0, 300));
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals('0011111110111000000111100111111110001000001100000011110011111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0942153651706015');
        $this->assertEquals('0011111111010000111000111011100101111001001000011100011101110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.263899200718803');
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals('0011111111011000110000011001000011001010001100011000001100100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.386814305738925');
        $this->assertEquals('0011111111000001010101000000101101100011001000101010100000010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.135377334028192');
        $this->assertEquals(116, $r->Next(0, 300));
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals('0011111111100110010101110100100101010011111011001010111010010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.698155082621684');
        $this->assertEquals('0011111111100100000000011111110011000010011010000000001111111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.625242595386339');
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals('0011111111100101100111110100010000111101101010110011111010001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.675691719481578');
        $this->assertEquals('0011111111101011001111010000000101100101001101100111101000000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.851196954423188');
        $this->assertEquals('0011111111011011111000110111101110100010001101111100011011110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.435759457031153');
        $this->assertEquals('0011111111100001011000010100000100100111011000101100001010000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.543121888089516');
        $this->assertEquals(273, $r->Next(0, 300));
        $this->assertEquals(273, $r->Next(0, 300));
        $this->assertEquals('0011111111100001011100101010110100101101001000101110010101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.545248592526302');
        $this->assertEquals('0011111111011111111011110100001001010010001111111101111010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.498978214570777');
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111100111011111010001001000110000001011101111101000100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.734017461880118');
        $this->assertEquals('0011111111011111010110000101000010111010101111101011000010100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.489765341156053');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(115, $r->Next(0, 300));
        $this->assertEquals('0011111111101101000110101000001101110110001110100011010100000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.909486514008365');
        $this->assertEquals('0011111111101011011100000000100100111110011101101110000000010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.857426282883355');
        $this->assertEquals('0011111111100011010011010011010011101110111001101001101001101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.603174654582131');
        $this->assertEquals('0011111111000000010000100100001010111100001000001000010010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.127022115572832');
        $this->assertEquals(210, $r->Next(0, 300));
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals('0011111111100111011001010010101111011010111011101100101001011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.731100013354374');
        $this->assertEquals('0011111111000101010011111100101101111100001010101001111110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.166497645977185');
        $this->assertEquals(157, $r->Next(0, 300));
        $this->assertEquals(127, $r->Next(0, 300));
        $this->assertEquals('0011111111100001001011101100100000110111101000100101110110010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.536960705433488');
        $this->assertEquals('0011111111001100111000110001101111010010001110011100011000111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.225680806779154');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(161, $r->Next(0, 300));
        $this->assertEquals('0011111110110101101010111111001101110100001010110101011111100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0846550139061431');
        $this->assertEquals('0011111111100011101101101000001100010010101001110110110100000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.616029297288521');
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals('0011111111101000110100111000001010011101101100011010011100000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.775819118495946');
        $this->assertEquals('0011111111001000110000010110010010101101001100011000001011001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.193401894156543');
        $this->assertEquals(273, $r->Next(0, 300));
        $this->assertEquals(131, $r->Next(0, 300));
        $this->assertEquals('0011111111100110100100011000101000000010001011010010001100010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.705266002894037');
        $this->assertEquals('0011111111010010111011110100111110010101001001011101111010011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.295856376316331');
        $this->assertEquals(11, $r->Next(0, 300));
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals('0011111111000101111001001101011000011111001010111100100110101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.171046033115613');
        $this->assertEquals('0011111111101010011000101101111010100110111101001100010110111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.82456905945417');
        $this->assertEquals('0011111111001110110000111101000011010100001111011000011110100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.240350822098717');
        $this->assertEquals('0011111111010000000000010000111000011111101000000000001000011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.250064402469464');
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals('0011111111010111010001000101110111101011001011101000100010111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.363547782582952');
        $this->assertEquals('0011111101010111001110100110100010000000001011100111010011010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00141773419520712');
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals(159, $r->Next(0, 300));
        $this->assertEquals('0011111111101111000100011101001100100110111111100010001110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.970925880582503');
        $this->assertEquals('0011111111100010010001101011100010100100111001001000110101110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.571132967048852');
        $this->assertEquals(276, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111100110110101110001110111011101111011011010111000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.71375935883902');
        $this->assertEquals('0011111111100000010010110101000101011110101000001001011010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.509194073504393');
        $this->assertEquals(98, $r->Next(0, 300));
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals('0011111101111001001111000111011111100000001100100111100011110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00616118265602793');
        $this->assertEquals('0011111111100101111111001110000011111001101010111111100111000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.687118995323367');
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals('0011111111011010100001000100010101110101001101010000100010001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.414323200664634');
        $this->assertEquals('0011111111001100010010011111101100100110001110001001001111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.221007722532846');
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals(239, $r->Next(0, 300));
        $this->assertEquals('0011111111100110110110001010010110111111101011011011000101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.713946222660107');
        $this->assertEquals('0011111111101100011010101011001000011110011110001101010101100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.888024386897694');
        $this->assertEquals('0011111111011110001110111100100100000001001111000111011110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.47239899750445');
        $this->assertEquals('0011111111011110000110111010000011100001101111000011011101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.470436306423711');
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals(92, $r->Next(0, 300));
        $this->assertEquals('0011111110110110110100010100101011001000001011011010001010010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0891310442654095');
        $this->assertEquals('0011111111101001010110100011100000010111001100101011010001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.792263074215624');
        $this->assertEquals(109, $r->Next(0, 300));
        $this->assertEquals(271, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101000101111111010101001111110110100010111111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.926146823878468');
        $this->assertEquals('0011111111010001100011001000111010000110001000110001100100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.274203902238144');
        $this->assertEquals(268, $r->Next(0, 300));
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals('0011111111101011100101101001011111111110111101110010110100110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.862133024196202');
        $this->assertEquals('0011111111010101010100001110110010100110001010101010000111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.33306423403931');
        $this->assertEquals(93, $r->Next(0, 300));
        $this->assertEquals(165, $r->Next(0, 300));
        $this->assertEquals('0011111111100100101001001010111111101011101010010100100101100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.645103416706018');
        $this->assertEquals('0011111111100100101100001010110000110110001010010110000101011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.64656649187513');
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals('0011111111011110101100100111011010011010101111010110010011101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.479642535317523');
        $this->assertEquals('0011111111011001110101111110101010100011001100111010111111010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.403803500534875');
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals(208, $r->Next(0, 300));
        $this->assertEquals('0011111111010010100010100101110110110101101001010001010010111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.289695193660304');
        $this->assertEquals('0011111111010110011100110000110010111000101011001110011000011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.350772075984055');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(49, $r->Next(0, 300));
        $this->assertEquals('0011111111011010010000010111011111011000101101001000001011110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.410245858789536');
        $this->assertEquals('0011111110010011110011101010110101110000001001111001110101011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0193430995658706');
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals(219, $r->Next(0, 300));
        $this->assertEquals('0011111111100001101100100101100010011010001000110110010010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.553020764399795');
        $this->assertEquals('0011111111011110011011101111100110101110001111001101110111110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.475523395685257');
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals(226, $r->Next(0, 300));
        $this->assertEquals('0011111111011000010100100000000110000101101100001010010000000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.380005245739597');
        $this->assertEquals('0011111111100101001111000100011000000010101010100111100010001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.663607602316703');
        $this->assertEquals(144, $r->Next(0, 300));
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals('0011111110000010111111011110100011000000001001011111101111010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00927335583105374');
        $this->assertEquals('0011111111101001110101001101000010101001111100111010100110100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.807228404938815');
        $this->assertEquals('0011111111100010101010000101001010110100101001010101000010100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.583047249625925');
        $this->assertEquals('0011111110101010111111101011110011110100001101011111110101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0527247474774368');
        $this->assertEquals(34, $r->Next(0, 300));
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals('0011111111101010011001100100100011111010101101001100110010010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.824985971127165');
        $this->assertEquals('0011111111001111000011100100111111100111001111100001110010100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.242624271308363');
        $this->assertEquals(208, $r->Next(0, 300));
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011011011100111011011101111001001101101110011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.575904305826828');
        $this->assertEquals('0011111111101111010110110011011111001111111111101011011001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.979885011902025');
        $this->assertEquals('0011111111101001001100011010100100111110101100100110001101010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.787312147574179');
        $this->assertEquals('0011111111010011111010101000011000110100101001111101010100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.311189223691444');
        $this->assertEquals(122, $r->Next(0, 300));
        $this->assertEquals(20, $r->Next(0, 300));
        $this->assertEquals('0011111111010110111011101010000011111011101011011101110101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.358314748554637');
        $this->assertEquals('0011111111011101010011101111010100011011001110101001110111101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.457944180098336');
        $this->assertEquals(5, $r->Next(0, 300));
        $this->assertEquals(221, $r->Next(0, 300));
        $this->assertEquals('0011111111011101010100010001010100001001101110101010001000101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.458073863507283');
        $this->assertEquals('0011111111001001100011000100001011001000001100110001100010000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.199592921975811');
        $this->assertEquals(148, $r->Next(0, 300));
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals('0011111111100100110100011010010000111001011010011010001101001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.650591003545835');
        $this->assertEquals('0011111111000100111111111110101011011001001010011111111111010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164059978520526');
        $this->assertEquals(215, $r->Next(0, 300));
        $this->assertEquals(115, $r->Next(0, 300));
        $this->assertEquals('0011111111101001101110101011110110011111011100110111010101111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.804045497348553');
        $this->assertEquals('0011111111100001110100110110000011110100011000111010011011000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.557053067515163');
        $this->assertEquals(51, $r->Next(0, 300));
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals('0011111111000101000100000111001110101001001010100010000011100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164564569091687');
        $this->assertEquals('0011111111101100001100001101100101011101111110000110000110110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.880963023696543');
        $this->assertEquals('0011111111011001001011101101011000000100101100100101110110101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.393483643137609');
        $this->assertEquals('0011111111100101100001000110101010100011011010110000100011010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.672414130378707');
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals(17, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011111101110110101001100011001001111110111011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.577994012077336');
        $this->assertEquals('0011111111100001101101100111111111001000111000110110110100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.553527729377862');
        $this->assertEquals(157, $r->Next(0, 300));
        $this->assertEquals(27, $r->Next(0, 300));
        $this->assertEquals('0011111111011110000100100001001101001001101111000010010000100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.469853231436505');
        $this->assertEquals('0011111111100001100011001001011110100001001000110001100100101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.548412146302132');
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals(193, $r->Next(0, 300));
        $this->assertEquals('0011111111101110001100001100100111111100001111000110000110010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.943455689094707');
        $this->assertEquals('0011111111001110111101000101010111111111001111011110100010101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.241831540708352');
        $this->assertEquals(20, $r->Next(0, 300));
        $this->assertEquals(138, $r->Next(0, 300));
        $this->assertEquals('0011111111011001011010101011110011100111101100101101010101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.39713976504148');
        $this->assertEquals('0011111111101101100000011000011000110101001110110000001100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.92206106564126');
        $this->assertEquals('0011111111100100101010111110011110111001001010010101011111001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.645984517711207');
        $this->assertEquals('0011111111100111110010111110110001001111001011111001011111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.743642954502089');
        $this->assertEquals(201, $r->Next(0, 300));
        $this->assertEquals(242, $r->Next(0, 300));
        $this->assertEquals('0011111111010011111001100111111011000100101001111100110011111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.310943309828147');
        $this->assertEquals('0011111111100101101000111100100101110110001010110100011110010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.676243525313327');
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111110010011101001111011100111001000001001110100111101110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0191945103086506');
        $this->assertEquals('0011111111011100000011100101101110100101101110000001110010110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.438376342616219');
        $this->assertEquals(131, $r->Next(0, 300));
        $this->assertEquals(41, $r->Next(0, 300));
        $this->assertEquals('0011111111100110000011110010011010011110101011000001111001001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.689349470049771');
        $this->assertEquals('0011111111100011000001010110010011110100111001100000101011001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.594408491437514');
        $this->assertEquals(244, $r->Next(0, 300));
        $this->assertEquals(271, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010111011101100000010111111110101011101110110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.917705580553834');
        $this->assertEquals('0011111111100111100011010000110000101101101011110001101000011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.735967721201464');
        $this->assertEquals(74, $r->Next(0, 300));
        $this->assertEquals(89, $r->Next(0, 300));
        $this->assertEquals('0011111111101100001010001000110101000001001110000101000100011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.879950168021');
        $this->assertEquals('0011111111011101101100111011110100000001001110110110011101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.464095355227634');
        $this->assertEquals(63, $r->Next(0, 300));
        $this->assertEquals(109, $r->Next(0, 300));
        $this->assertEquals('0011111111100111010110100000011100001101001011101011010000001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.729739690539306');
        $this->assertEquals('0011111111101110010101001111100110100110011111001010100111110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.947872948808536');
        $this->assertEquals('0011111111011101101001111100010101100001101110110100111110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.463364930573555');
        $this->assertEquals('0011111101111100000111000111111111100000001110000011100100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00686311675555218');
        $this->assertEquals(66, $r->Next(0, 300));
        $this->assertEquals(142, $r->Next(0, 300));
        $this->assertEquals('0011111111010100011100100010101001000011101010001110010001010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.31946808440586');
        $this->assertEquals('0011111111010101111111011110100000110101101010111111101111010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.343622257627371');
        $this->assertEquals(47, $r->Next(0, 300));
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals('0011111111010101011110010000010001011111101010101111001000001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.335511296678107');
        $this->assertEquals('0011111111011010111100000110000100110110001101011110000011000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.420921614589599');
        $this->assertEquals(62, $r->Next(0, 300));
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals('0011111111010111001000100101011010000010001011100100010010101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.36147082055056');
        $this->assertEquals('0011111111000010011111110110010010011011001001001111111011001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.144512725595624');
        $this->assertEquals(197, $r->Next(0, 300));
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals('0011111111100001000110010100000111111010101000100011001010000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.534333219069211');
        $this->assertEquals('0011111110110110011000000111110001110110001011001100000011111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0874097622406714');
        $this->assertEquals(195, $r->Next(0, 300));
        $this->assertEquals(99, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011111010111000100000010011101101111101011100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.859062676252361');
        $this->assertEquals('0011111111101011001010110100000110011000101101100101011010000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.849030302301529');
        $this->assertEquals('0011111111101010100000100101000001010011111101010000010010100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.828407443979945');
        $this->assertEquals('0011111110100010111111111010000110111000001001011111111101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0371065652170715');
        $this->assertEquals(97, $r->Next(0, 300));
        $this->assertEquals(99, $r->Next(0, 300));
        $this->assertEquals('0011111111001011001101011111001111001010001101100110101111101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.212583993660558');
        $this->assertEquals('0011111110111001001001010001000011001110001100100100101000100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0982218268784796');
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals(54, $r->Next(0, 300));
        $this->assertEquals('0011111111100000111111101000011010110100001000011111110100001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.531070091077625');
        $this->assertEquals('0011111111010011100110011011001010000111001001110011001101100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.306255943284489');
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals('0011111111001011001111111001101100010101001101100111111100110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.212878594739772');
        $this->assertEquals('0011111111011001010011000001110100101100001100101001100000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.395270627176049');
        $this->assertEquals(219, $r->Next(0, 300));
        $this->assertEquals(163, $r->Next(0, 300));
        $this->assertEquals('0011111110111110011100001100010110001000001111001110000110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.118908258210359');
        $this->assertEquals('0011111110111000010011110001000111111100001100001001111000100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0949565163324385');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(131, $r->Next(0, 300));
        $this->assertEquals('0011111111010000100100011100010110001010001000010010001110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.258897194759407');
        $this->assertEquals('0011111111011001001111011101010010010101001100100111101110101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.394398828220739');
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111010111111101111100000111011001001011111110111110000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.374496900650904');
        $this->assertEquals('0011111110111010011100111001101101011010001101001110011100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.103326520465001');
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals(76, $r->Next(0, 300));
        $this->assertEquals('0011111111101101110000001001110010000101111110111000000100111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.929762136158423');
        $this->assertEquals('0011111111000000000001010101100000110001001000000000101010110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.125163101183792');
        $this->assertEquals(214, $r->Next(0, 300));
        $this->assertEquals(119, $r->Next(0, 300));
        $this->assertEquals('0011111110110110101111000100010100100000001011010111100010001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0888102725561756');
        $this->assertEquals('0011111111100011101010001010000100011000001001110101000101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.614334628272026');
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals('0011111111000011010101000111100101110000001001101010100011110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.151015453110922');
        $this->assertEquals('0011111111101111101000000001101101001001011111110100000000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.988294261502239');
        $this->assertEquals('0011111111000000110001011101110010100001001000011000101110111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.131038263966813');
        $this->assertEquals('0011111110101111100101100000011001101100001111110010110000001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0616914755952039');
        $this->assertEquals(62, $r->Next(0, 300));
        $this->assertEquals(46, $r->Next(0, 300));
        $this->assertEquals('0011111111101100011110011010100111100110111110001111001101010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.889851523511974');
        $this->assertEquals('0011111111101100110111001011010111101010011110011011100101101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.901942213020261');
        $this->assertEquals('0011111111100000000111111010010000101101101000000011111101001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.503862465966429');
        $this->assertEquals('0011111111101111111100101110010110000101001111111110010111001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.99840045953095');
        $this->assertEquals('0011111111101101110011111111001001100001011110111001111111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.931634130855852');
        $this->assertEquals('0011111111010000110001000111101111101111101000011000100011111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.261992439283986');
        $this->assertEquals(268, $r->Next(0, 300));
        $this->assertEquals(297, $r->Next(0, 300));
        $this->assertEquals('0011111111101110111111011111011011011101101111011111101111101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.968501504030312');
        $this->assertEquals('0011111111100001110110110110000011111110101000111011011011000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.558029649107731');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(126, $r->Next(0, 300));
        $this->assertEquals('0011111111100010111000100101111011010011101001011100010010111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.590133107542122');
        $this->assertEquals('0011111111011011110001101100110000010010101101111000110110011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.434008615759205');
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals(297, $r->Next(0, 300));
        $this->assertEquals('0011111111101110100111010001100011101011101111010011101000110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.956676922252717');
        $this->assertEquals('0011111110111011111110000100110000111010001101111111000010011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.109257473195557');
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals(236, $r->Next(0, 300));
        $this->assertEquals('0011111111010000001000101101100101100101001000000100010110110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.252127026325151');
        $this->assertEquals('0011111111011001111110100110000101001111101100111111010011000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.405906989893833');
        $this->assertEquals(177, $r->Next(0, 300));
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals('0011111111010001100011010111101000101111101000110001101011110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.274260088463435');
        $this->assertEquals('0011111111100011001001110100010110101101001001100100111010001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.598543966467746');
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals(164, $r->Next(0, 300));
        $this->assertEquals('0011111111011001001001111000011101011100101100100100111100001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.393037643932289');
        $this->assertEquals('0011111111000000101101111111010110011110001000010110111111101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.13061399670812');
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals('0011111111001101100001001100001010010000001110110000100110000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.230614014077286');
        $this->assertEquals('0011111110111010111100110100111001101110001101011110011010011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.105275060564873');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(238, $r->Next(0, 300));
        $this->assertEquals('0011111111101010100011111010111111011000111101010001111101100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.830039905305039');
        $this->assertEquals('0011111111011000000100011111011011001110101100000010001111101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.376096441119954');
        $this->assertEquals(51, $r->Next(0, 300));
        $this->assertEquals(113, $r->Next(0, 300));
        $this->assertEquals('0011111111010111000001111010111111100100101011100000111101100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.359844182319867');
        $this->assertEquals('0011111111101110000100000011110010010101101111000010000001111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.939482014132422');
        $this->assertEquals('0011111111000100000011010111110010111010001010000001101011111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.15666159715348');
        $this->assertEquals('0011111111000011111001110011001010111110001001111100111001100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.155493109559404');
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals(200, $r->Next(0, 300));
        $this->assertEquals('0011111110011000110010000100100010010000001100011001000010010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0242015207299038');
        $this->assertEquals('0011111111100111110100101000001010100010011011111010010100000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.744447057016402');
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals(48, $r->Next(0, 300));
        $this->assertEquals('0011111110100000001100000010010111011100001000000110000001001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0316173392495221');
        $this->assertEquals('0011111110010110010011011011010000100000001011001001101101101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0217807907712556');
        $this->assertEquals(181, $r->Next(0, 300));
        $this->assertEquals(126, $r->Next(0, 300));
        $this->assertEquals('0011111111101100110110010000110001000100101110011011001000011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.901495107869383');
        $this->assertEquals('0011111111011110111110001111001001111110001111011111000111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483944533618141');
        $this->assertEquals(92, $r->Next(0, 300));
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals('0011111111100111001011000010100001101101011011100101100001010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.724140371067515');
        $this->assertEquals('0011111111010101010100010101100101101000101010101010001010110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.333090164388106');
        $this->assertEquals(13, $r->Next(0, 300));
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals('0011111111100011000111001001110001000001111001100011100100111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.597242478093711');
        $this->assertEquals('0011111111101010110011111111100101110110001101011001111111110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.837887507322192');
        $this->assertEquals('0011111111100011000000101111010111100111011001100000010111101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.594111396742105');
        $this->assertEquals('0011111111011100001000001100111111011101001110000100000110100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.439502683672822');
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals(145, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101111100010010110100101101110110111110001001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.92946131105044');
        $this->assertEquals('0011111111100001010111100010111010100000101000101011110001011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.54274684309156');
        $this->assertEquals(48, $r->Next(0, 300));
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals('0011111111101110000000001000100001111101011111000000000100010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.937565083586408');
        $this->assertEquals('0011111110110011101100000000001111001010001001110110000000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0769045227565358');
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals(93, $r->Next(0, 300));
        $this->assertEquals('0011111111001111111001110100010111100101001111111100111010001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.249245392740353');
        $this->assertEquals('0011111111011011111110111011110111001011101101111111011101111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.43724007505795');
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals(181, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011000010000001101101000101001001100001000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.574342445737842');
        $this->assertEquals('0011111111011110001110110100011010001111101111000111011010001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.47236789738404');
        $this->assertEquals(211, $r->Next(0, 300));
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals('0011111110111001010101111101100001001110001100101010111110110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0989966574585981');
        $this->assertEquals('0011111111101110001001011111110101110110001111000100101111111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.94213746159437');
        $this->assertEquals('0011111111010011111000000011100000010011001001111100000001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.310560244280174');
        $this->assertEquals('0011111111101001111011011110111001110011111100111101101111011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.810294367284651');
        $this->assertEquals('0011111111001010000101010111011000100100001101000010101011101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.203779952695491');
        $this->assertEquals('0011111110010101000110001110010010010000001010100011000111001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0206027710906243');
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals('0011111111100100110111001101001011111001111010011011100110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.651956070052439');
        $this->assertEquals('0011111111101010110101011101010001010101011101011010101110101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.838602225221043');
        $this->assertEquals('0011111111010101011010000011001110001101101010101101000001100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.334484947535435');
        $this->assertEquals('0011111110001011111010100010010111010000001101111101010001001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.013630195061504');
        $this->assertEquals(102, $r->Next(0, 300));
        $this->assertEquals(95, $r->Next(0, 300));
        $this->assertEquals('0011111111100001111101101101011011001000001000111110110110101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.561381712817299');
        $this->assertEquals('0011111111100011010001111001000001110010011001101000111100100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.602485869826044');
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals(161, $r->Next(0, 300));
        $this->assertEquals('0011111111101010000101000101110011111100101101000010100010111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.814985745965962');
        $this->assertEquals('0011111111010011010100001001110100101010001001101010000100111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.301795283473001');
        $this->assertEquals(0, $r->Next(0, 300));
        $this->assertEquals(135, $r->Next(0, 300));
        $this->assertEquals('0011111110110101100011110010100100011100001010110001111001010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0842157071848473');
        $this->assertEquals('0011111111100000111001110010110110011111111000011100111001011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.528219997663153');
        $this->assertEquals(297, $r->Next(0, 300));
        $this->assertEquals(176, $r->Next(0, 300));
        $this->assertEquals('0011111111001110000010101001111100010111001111000001010100111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.234699140877788');
        $this->assertEquals('0011111111101011111001110010101101101111001101111100111001010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.871968953344957');
        $this->assertEquals('0011111111000111000101001100011010101111001011100010100110001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.180321536576525');
        $this->assertEquals('0011111110111110010110011001000011110100001111001011001100100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.118554172161293');
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals(171, $r->Next(0, 300));
        $this->assertEquals('0011111111100100100100001111011100111101011010010010000111101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.64269601816437');
        $this->assertEquals('0011111111010111010111000001101100011100101011101011100000110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.364996698389294');
        $this->assertEquals(221, $r->Next(0, 300));
        $this->assertEquals(195, $r->Next(0, 300));
        $this->assertEquals('0011111111000000100000010010111110010100001000010000001001011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.128942439392648');
        $this->assertEquals('0011111111011000010001010100010110000110001100001000101010001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.379228001637025');
        $this->assertEquals(84, $r->Next(0, 300));
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals('0011111110101100100010101110001011011000001110010001010111000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0557471169418409');
        $this->assertEquals('0011111111000011010110111110000110101110001001101011011111000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.151241502795015');
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals('0011111111100111110000011110011010110010011011111000001111001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.742419575221101');
        $this->assertEquals('0011111111011010100001110111011110010011001101010000111011101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.414518255002107');
        $this->assertEquals(291, $r->Next(0, 300));
        $this->assertEquals(279, $r->Next(0, 300));
        $this->assertEquals('0011111111101100000001110000100000011101101110000000111000010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.875858362240651');
        $this->assertEquals('0011111110100011100110101100100111100000001001110011010110010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0382903181194748');
        $this->assertEquals(37, $r->Next(0, 300));
        $this->assertEquals(10, $r->Next(0, 300));
        $this->assertEquals('0011111111100101000010010100011001001011001010100001001010001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.657382151418078');
        $this->assertEquals('0011111111011001101101011101001100010001001100110110101110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.401722685620991');
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011101000001100001010010101101101110100000110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.857921754409523');
        $this->assertEquals('0011111111101001000010001110111001101001101100100001000111011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.782340246617021');
        $this->assertEquals(245, $r->Next(0, 300));
        $this->assertEquals(184, $r->Next(0, 300));
        $this->assertEquals('0011111111101001001001100001111101011110101100100100110000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.785903630212836');
        $this->assertEquals('0011111111100011101011100101010100000011111001110101110010101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.615030772804763');
        $this->assertEquals(248, $r->Next(0, 300));
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals('0011111110110100011100010101100001001110001010001110001010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0798545065707781');
        $this->assertEquals('0011111111101000010111111010010100000001001100001011111101001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.761675360035931');
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals('0011111111100010100011100110011101001011111001010001110011001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.579883239967694');
        $this->assertEquals('0011111111101101000110011101111001010110111110100011001110111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.909407777669564');
        $this->assertEquals('0011111111011110010011101000100100011010101111001001110100010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.473543430433396');
        $this->assertEquals('0011111110111001100101001001011001110110001100110010100100101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0999235189985128');
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals(271, $r->Next(0, 300));
        $this->assertEquals('0011111111001111011111101000000110011110001111101111110100000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.246048166531161');
        $this->assertEquals('0011111111101011001011100000001100000110111101100101110000000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.849366677854847');
        $this->assertEquals('0011111111100000101101111001101001001110111000010110111100110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.522412447036436');
        $this->assertEquals('0011111111101111100001110011000011111011011111110000111001100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.985252848819482');
        $this->assertEquals('0011111111101001001001010100011011101101011100100100101010001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.785800422442053');
        $this->assertEquals('0011111111100010011111000010001000000101101001001111100001000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.577652941726918');
        $this->assertEquals(185, $r->Next(0, 300));
        $this->assertEquals(91, $r->Next(0, 300));
        $this->assertEquals('0011111111101111111000000010001101010001011111111100000001000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.996110591104306');
        $this->assertEquals('0011111111000010001011100001010000110111001001000101110000101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.14203121845705');
        $this->assertEquals(297, $r->Next(0, 300));
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010010110010111001111010011110101001011001011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.915427436081426');
        $this->assertEquals('0011111111001110110110000011011011010011001111011011000001101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.240973332543379');
        $this->assertEquals(40, $r->Next(0, 300));
        $this->assertEquals(27, $r->Next(0, 300));
        $this->assertEquals('0011111111101001011010001110000000011110011100101101000111000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.794052180738213');
        $this->assertEquals('0011111111010110001011101011101011110110101011000101110101110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.346602192775627');
        $this->assertEquals(168, $r->Next(0, 300));
        $this->assertEquals(199, $r->Next(0, 300));
        $this->assertEquals('0011111110111111011110011111100100010100001111101111001111110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.12295490974698');
        $this->assertEquals('0011111111011100001101001011001001010011001110000110100101100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.440716344137078');
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals(118, $r->Next(0, 300));
        $this->assertEquals('0011111110010011100100010010001111001000001001110010001001001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0191083517945876');
        $this->assertEquals('0011111111101111011000100100000110110001001111101100010010000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.980744215185169');
        $this->assertEquals('0011111110100110010100001010011011111100001011001010000101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0435840781049729');
        $this->assertEquals('0011111111101111110001111111110100000011011111111000111111111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.9931626385046');
        $this->assertEquals('0011111111010110011100000000100011101010001011001110000000010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.350588062941371');
        $this->assertEquals('0011111111101110111011010010100111000110101111011101101001010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.966450584571087');
        $this->assertEquals('0011111111100010000100100110100000010000101001000010010011010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.564746887686079');
        $this->assertEquals('0011111110011011001001011011110111001000001101100100101101111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0265111592721712');
        $this->assertEquals(233, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111000011111011010010010010000100001001111101101001001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.15567451908983');
        $this->assertEquals('0011111111011000011101110010000001110100001100001110111001000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.382270921199709');
        $this->assertEquals(37, $r->Next(0, 300));
        $this->assertEquals(261, $r->Next(0, 300));
        $this->assertEquals('0011111111101111111000111010011101111100001111111100011101001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.996539824174968');
        $this->assertEquals('0011111111001110110001111011101001111100001111011000111101110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.240470228828709');
        $this->assertEquals(298, $r->Next(0, 300));
        $this->assertEquals(144, $r->Next(0, 300));
        $this->assertEquals('0011111111100011110011100011000110110010011001111001110001100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.618920181700457');
        $this->assertEquals('0011111111100101111110001000101001100011001010111111000100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.68658942574942');
        $this->assertEquals(162, $r->Next(0, 300));
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals('0011111111101011000101000111011010000110101101100010100011101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.846247923954505');
        $this->assertEquals('0011111111000000101000101000111010010100001000010100010100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.129960844353754');
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals('0011111110111101100001111111000111000100001110110000111111100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.115355596931351');
        $this->assertEquals('0011111111000000001111111001110001001000001000000111111100111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.126941237657769');
        $this->assertEquals(161, $r->Next(0, 300));
        $this->assertEquals(177, $r->Next(0, 300));
        $this->assertEquals('0011111111101001000011111011111101011000111100100001111101111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.783172296259167');
        $this->assertEquals('0011111111101001110001010100011100111101111100111000101010001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.805331822394082');
        $this->assertEquals('0011111111100000110110110001101000001100011000011011011000110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.526745819266301');
        $this->assertEquals('0011111111000000010001111100001001111111001000001000111110000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.127189933847259');
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals('0011111111100001000101110001011110010101111000100010111000101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.534068863621945');
        $this->assertEquals('0011111111100100000000100100111101011011011010000000010010011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.625281981018038');
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011110010001110011111101001001001111001000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.577284330770971');
        $this->assertEquals('0011111111101110111001100100001101110011001111011100110010000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.965608334618438');
        $this->assertEquals('0011111111101110010011011111001010111001011111001001101111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.947015154150787');
        $this->assertEquals('0011111111000101000000111001101010101011001010100000011100110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164172490669495');
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111101110111001000110110001011010011111011100100011011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.965383698216353');
        $this->assertEquals('0011111111101101011110111111100011000111001110101111011111110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.921383275148172');
        $this->assertEquals('0011111111010110011001110110101111111110001011001100111011011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.350062368600658');
        $this->assertEquals('0011111111010100100001010100011011111110101010010000101010001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.320634602252689');
        $this->assertEquals(200, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111111101010010011000010011101110111001101001001100001001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.821796162436621');
        $this->assertEquals('0011111111100100010110100101111010010111011010001011010010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.636031432839125');
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals(198, $r->Next(0, 300));
        $this->assertEquals('0011111111000001001101110010110010101010001000100110111001011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.134496291230664');
        $this->assertEquals('0011111111101101001111000110011011001010101110100111100011001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.913623233751218');
        $this->assertEquals('0011111111000011000110111001001000101101001001100011011100100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.149278900189921');
        $this->assertEquals('0011111111101011100100101000010101100101001101110010010100001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.861635873495432');
        $this->assertEquals('0011111111101011001111000010101110001110001101100111100001010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.851094987639736');
        $this->assertEquals('0011111111011100000001010000000111111101001110000000101000000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.43780565002831');
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals('0011111111101110111110101000100001110110101111011111010100010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.968082649152764');
        $this->assertEquals('0011111111010110011011000000001111000110001011001101100000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.350342696695748');
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals(299, $r->Next(0, 300));
        $this->assertEquals('0011111111101101000000100011111101111001111110100000010001111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.906524408565147');
        $this->assertEquals('0011111111001000100000101000100100000000001100010000010100010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.191483616918085');
        $this->assertEquals(211, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111100000111001011010101111001010001000011100101101011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.528036017216759');
        $this->assertEquals('0011111111100010110110110011100000100111101001011011011001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.589260175167238');
        $this->assertEquals(32, $r->Next(0, 300));
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals('0011111111011010001011101000101001011101001101000101110100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.409090605754913');
        $this->assertEquals('0011111111100101110100111000111111011011111010111010011100100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.682075433285011');
        $this->assertEquals(13, $r->Next(0, 300));
        $this->assertEquals(27, $r->Next(0, 300));
        $this->assertEquals('0011111111100000110000010001001010110101011000011000001000100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.523568491229586');
        $this->assertEquals('0011111111001000110101000001010111000101001100011010100000101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.19397232178318');
        $this->assertEquals(233, $r->Next(0, 300));
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals('0011111111101101100001001011111010001100101110110000100101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.922454142441253');
        $this->assertEquals('0011111111000010001010011000111001000001001001000101001100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.141893178756299');
        $this->assertEquals(295, $r->Next(0, 300));
        $this->assertEquals(267, $r->Next(0, 300));
        $this->assertEquals('0011111111010001011111001110110011010101001000101111100111011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.273249824658618');
        $this->assertEquals('0011111111010011011001101010110101001110001001101100110101011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.303141905136007');
        $this->assertEquals(201, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111011110011101101101010110100000001111001110110110101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.476003080828117');
        $this->assertEquals('0011111110110111100011011001000101010100001011110001101100100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0920039015319217');
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals(41, $r->Next(0, 300));
        $this->assertEquals('0011111111011110100101100010110001101010101111010010110001011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.477915863263382');
        $this->assertEquals('0011111111101000011001011001000111110111011100001100101100100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.762398703844472');
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals('0011111111101100101010000111001111100101011110010101000011101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.895563076201623');
        $this->assertEquals('0011111111101110111100011110000100011000101111011110001111000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.967026279758209');
        $this->assertEquals('0011111110001110011011100101001101010000001111001101110010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0148588665830246');
        $this->assertEquals('0011111111000100010011000100111011111100001010001001100010011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.158578751682573');
        $this->assertEquals(184, $r->Next(0, 300));
        $this->assertEquals(89, $r->Next(0, 300));
        $this->assertEquals('0011111110111100111111010111111111110100001110011111101100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.113243100286109');
        $this->assertEquals('0011111111001101110000111011110100111110001110111000011101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.232535987269383');
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals('0011111111010000010000000001100000001111001000001000000000110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.253911986133974');
        $this->assertEquals('0011111111011100111101000111011010011101001110011110100011101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.452420857945653');
        $this->assertEquals(260, $r->Next(0, 300));
        $this->assertEquals(16, $r->Next(0, 300));
        $this->assertEquals('0011111111010101101000101110010101011111101010110100010111001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.338067382265845');
        $this->assertEquals('0011111111100101000001110010011000011100111010100000111001001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.657122665856556');
        $this->assertEquals(198, $r->Next(0, 300));
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals('0011111111010000110001110100010001101010101000011000111010001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.262162307865062');
        $this->assertEquals('0011111111101010011100000010010011100110011101001110000001001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.826189470396465');
        $this->assertEquals('0011111111010111011110011100010000111000101011101111001110001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.366807036738287');
        $this->assertEquals('0011111111101110110111111011101010111000101111011011111101110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.964810715506231');
        $this->assertEquals('0011111111100111001101000001010011010111001011100110100000101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.725107593799526');
        $this->assertEquals('0011111111100011010011101110100011010010111001101001110111010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.60338250342914');
        $this->assertEquals(156, $r->Next(0, 300));
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals('0011111111101100101001010111101011010110101110010100101011110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.895200175650045');
        $this->assertEquals('0011111111011011111001111111001100111111001101111100111111100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.436032115684837');
        $this->assertEquals(123, $r->Next(0, 300));
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals('0011111110111001000001101010111010001010001100100000110101011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.097758206118717');
        $this->assertEquals('0011111111100100101100011011001100110111001010010110001101100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.646691901910441');
        $this->assertEquals(145, $r->Next(0, 300));
        $this->assertEquals(92, $r->Next(0, 300));
        $this->assertEquals('0011111111001001001111101110100111111110001100100111110111010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.197232483978026');
        $this->assertEquals('0011111111100001110011110011000110011100101000111001111001100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.556542211471378');
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals(185, $r->Next(0, 300));
        $this->assertEquals('0011111111100011010100111001000010111010111001101010011100100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.603950848618499');
        $this->assertEquals('0011111111100011111101111100001100011010001001111110111110000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.623994399152694');
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111010111010010111001010010000111001011101001011100101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.3639880485665');
        $this->assertEquals('0011111111101111110101101110100000111011111111111010110111010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.994983784852076');
        $this->assertEquals('0011111110101001001101001010100111111000001100100110100101010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0492299190020328');
        $this->assertEquals('0011111111001011111010111111101100001100001101111101011111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.218139058080567');
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals('0011111111101000001000000011111101111010101100000100000001111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.753936519266077');
        $this->assertEquals('0011111111100000101011111010011111011111101000010101111101010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.521442353036926');
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals(62, $r->Next(0, 300));
        $this->assertEquals('0011111111100000000000011110111111000010001000000000001111100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.50023639597941');
        $this->assertEquals('0011111111010111101011000111001010011011001011110101100011100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.369900371120265');
        $this->assertEquals(110, $r->Next(0, 300));
        $this->assertEquals(279, $r->Next(0, 300));
        $this->assertEquals('0011111111001110111101110011000100000110001111011110111001100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.241918685958683');
        $this->assertEquals('0011111111011010010101011010000011110100101101001010101101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.411476363153884');
        $this->assertEquals(191, $r->Next(0, 300));
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals('0011111111011001110011110000000100110111101100111001111000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.403259567638514');
        $this->assertEquals('0011111111100101101010111011011001011110111010110101011101101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.677210984601272');
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111000111000110101110000101110101001011100011010111000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.180507833687825');
        $this->assertEquals('0011111111100011011011100101100011010000011001101101110010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.607220084223533');
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011111101111101110100110101101101111110111110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.859250856032246');
        $this->assertEquals('0011111111101001000000100100000100010011001100100000010010000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.781525170794467');
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals('0011111111100101010011000011111101010001111010101001100001111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.665557537072132');
        $this->assertEquals('0011111111100100011010111101111100011011001010001101011110111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.638167908712368');
        $this->assertEquals(239, $r->Next(0, 300));
        $this->assertEquals(184, $r->Next(0, 300));
        $this->assertEquals('0011111111100011001110011111000001110101001001100111001111100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.600822666939731');
        $this->assertEquals('0011111111100111010111010010110010011011001011101011101001011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.730123808947449');
        $this->assertEquals(166, $r->Next(0, 300));
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals('0011111111010101011001111111101001011000101010101100111111110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.334471308316324');
        $this->assertEquals('0011111111011110011100011000110001011001101111001110001100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.475680434832201');
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals(266, $r->Next(0, 300));
        $this->assertEquals('0011111111011111011100010000101010101001001111101110001000010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.491274514464324');
        $this->assertEquals('0011111111101100011101011000111110101000101110001110101100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.889350728545967');
        $this->assertEquals('0011111111000010101111110000110111010100001001010111111000011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.146455505931031');
        $this->assertEquals('0011111110111101101101111100001011010010001110110110111110000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.116085220648015');
        $this->assertEquals(282, $r->Next(0, 300));
        $this->assertEquals(79, $r->Next(0, 300));
        $this->assertEquals('0011111111010100001000101100101010110110001010000100010110010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.314623525512695');
        $this->assertEquals('0011111111101000100100000111101110101001101100010010000011110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.767637092046271');
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals(22, $r->Next(0, 300));
        $this->assertEquals('0011111111001100010000010000100111111001001110001000001000010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.220734831514179');
        $this->assertEquals('0011111111010110011111011111101001100101101011001111101111110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.351439093868918');
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals(242, $r->Next(0, 300));
        $this->assertEquals('0011111111101010000100000010111111011110101101000010000001100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.814475951164251');
        $this->assertEquals('0011111111011100010010011110001110011110001110001001001111000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.4420098347785');
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals(57, $r->Next(0, 300));
        $this->assertEquals('0011111111100001111011011011100100000011001000111101101101110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.560268884785599');
        $this->assertEquals('0011111111101111000111011111111001100111011111100011101111111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.97241134847161');
        $this->assertEquals('0011111110100110001111001101111001101100001011000111100110111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.043433142380525');
        $this->assertEquals('0011111111011011111001100011001011110110001101111100110001100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.435925236174802');
        $this->assertEquals(162, $r->Next(0, 300));
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals('0011111111100010010100001100011111111000111001001010000110010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.57236097919399');
        $this->assertEquals('0011111111101000000100110010111011101111001100000010011001011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.752341715969304');
        $this->assertEquals(98, $r->Next(0, 300));
        $this->assertEquals(153, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011011110011001001000110111101101101111001100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.857323778726777');
        $this->assertEquals('0011111111010101011011101000010001001010101010101101110100001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.334870407979409');
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110101111111110000111001111111111010111111111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.995115388182511');
        $this->assertEquals('0011111111101101110101111100001011011000111110111010111110000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.932588027758798');
        $this->assertEquals('0011111110110000110011001101001110101010001000011001100110100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0656254091605662');
        $this->assertEquals('0011111111010010101000100101000101101001001001010100010010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.291157105141858');
        $this->assertEquals(138, $r->Next(0, 300));
        $this->assertEquals(255, $r->Next(0, 300));
        $this->assertEquals('0011111111100011110001000010111110001100101001111000100001011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.617698454585717');
        $this->assertEquals('0011111111100010111101111111101001010011111001011110111111110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.592770732749612');
        $this->assertEquals(140, $r->Next(0, 300));
        $this->assertEquals(213, $r->Next(0, 300));
        $this->assertEquals('0011111110101111101111000000110101001000001111110111100000011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0619815970128316');
        $this->assertEquals('0011111111100010111000000101010011001111001001011100000010101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.589884190163521');
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals('0011111111100101111110010000011001010010011010111111001000001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.686648522357758');
        $this->assertEquals('0011111111101001011001100100010111111011011100101100110010001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.793734541998121');
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111110101010001001110100010011110000001101000100111010001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0510808509081047');
        $this->assertEquals('0011111111000010001101001111110111001110001001000110100111111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.142242170005218');
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals(212, $r->Next(0, 300));
        $this->assertEquals('0011111111101011000100001111010001100100101101100010000111101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.845819660856305');
        $this->assertEquals('0011111110101100010101101011110110011000001110001010110101111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0553492782895217');
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals(85, $r->Next(0, 300));
        $this->assertEquals('0011111111100001011001100011000001100001011000101100110001100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.543724241454026');
        $this->assertEquals('0011111111001000001110000011001101110100001100000111000001100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.189215118153587');
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals(240, $r->Next(0, 300));
        $this->assertEquals('0011111111101101001000010100100101100010101110100100001010010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.910313313319494');
        $this->assertEquals('0011111111100100101010100010111110011101111010010101010001011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.64577465860442');
        $this->assertEquals(264, $r->Next(0, 300));
        $this->assertEquals(87, $r->Next(0, 300));
        $this->assertEquals('0011111111010110110011100000000111110001101011011001110000000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.356323705686407');
        $this->assertEquals('0011111111101111111000111110100001111001101111111100011111010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.996570813933653');
        $this->assertEquals('0011111111100111101110100001000000000100011011110111010000100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.741462715781044');
        $this->assertEquals('0011111111100000101111110000011100101010001000010111111000001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.523318846022393');
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011000101000111000101100001001001100010100011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.574530683725388');
        $this->assertEquals('0011111111101110111101011011111010101111001111011110101101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.967498152035986');
        $this->assertEquals('0011111111100000001011010010001010101111011000000101101001000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.505509703189838');
        $this->assertEquals('0011111111010101010100001101111100101111001010101010000110111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.333061023770394');
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111011100011101001110100000010100001110001110100111010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.444635410068853');
        $this->assertEquals('0011111111000000001010010100111101011100001000000101001010011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.126260681136633');
        $this->assertEquals(19, $r->Next(0, 300));
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals('0011111111100011000100111010001011101001111001100010011101000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.596147019228035');
        $this->assertEquals('0011111111100111110110001000010111100010101011111011000100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.745181029078169');
        $this->assertEquals(85, $r->Next(0, 300));
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals('0011111110001000111010110101000101010000001100011101011010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0121675827597117');
        $this->assertEquals('0011111111010010010001001000000011111001001001001000100100000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.28543114023536');
        $this->assertEquals(26, $r->Next(0, 300));
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals('0011111111101110001110101001111111100010011111000111010101000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.944656317096509');
        $this->assertEquals('0011111111000110100100111000101000110101001011010010011100010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.176377559628513');
        $this->assertEquals(91, $r->Next(0, 300));
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals('0011111111100100111111111100000110111000101010011111111110000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.65622030322264');
        $this->assertEquals('0011111111100101010000000001011000000011011010101000000000101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.66407299678031');
        $this->assertEquals(240, $r->Next(0, 300));
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals('0011111111100110101010000001001101011000001011010101000000100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.708017036648475');
        $this->assertEquals('0011111110111111110100001010010001101100001111111010000101001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.124277378490324');
        $this->assertEquals(26, $r->Next(0, 300));
        $this->assertEquals(207, $r->Next(0, 300));
        $this->assertEquals('0011111110101010110000110101111101110000001101011000011010111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0522718262170776');
        $this->assertEquals('0011111111011001000110111110101100100100101100100011011111010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.392329011760805');
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals('0011111111100010001010101011000101000111011001000101010101100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.56771148627983');
        $this->assertEquals('0011111111101110010101010100111001111010011111001010101010011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.947913398010616');
        $this->assertEquals('0011111111001010001000100110010000111000001101000100010011001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.204174544757313');
        $this->assertEquals('0011111111100000011010001000010011001101001000001101000100001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.51275863708591');
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals(118, $r->Next(0, 300));
        $this->assertEquals('0011111111101010110111110011111011000011111101011011111001111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.839751608595136');
        $this->assertEquals('0011111111011010101101111011100100010100101101010110111101110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.417463560317393');
        $this->assertEquals(37, $r->Next(0, 300));
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals('0011111111001010011101001000101100101011001101001110100100010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.206681629273427');
        $this->assertEquals('0011111111000101001000110000111000000000001010100100011000011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.165132284241324');
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals(249, $r->Next(0, 300));
        $this->assertEquals('0011111111010001111110111011010110010100001000111111011101101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.280988115948154');
        $this->assertEquals('0011111110110010001001100000001111100010001001000100110000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0708925654510467');
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals(219, $r->Next(0, 300));
        $this->assertEquals('0011111111100010100001000110011101000111101001010000100011001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.578662528925884');
        $this->assertEquals('0011111111101001110000010111100111100110011100111000001011110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.804867696857484');
        $this->assertEquals('0011111110111000010000000001011100100110001100001000000000101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0947279422985054');
        $this->assertEquals('0011111111000010101100011010110111110010001001010110001101011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.146047347293257');
        $this->assertEquals(93, $r->Next(0, 300));
        $this->assertEquals(252, $r->Next(0, 300));
        $this->assertEquals('0011111111100001000011100101101010101011001000100001110010110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.533002218479757');
        $this->assertEquals('0011111111101110101001011100011101101111111111010100101110001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.957736700753559');
        $this->assertEquals('0011111111001111010110100111101010111101001111101011010011110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.244948713688622');
        $this->assertEquals('0011111111010100100000001011111011111001001010010000000101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.320358031578529');
        $this->assertEquals(10, $r->Next(0, 300));
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals('0011111111011110111110001001100110001010001111011111000100110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483923325540462');
        $this->assertEquals('0011111111001010000101101011010101011110001101000010110101101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.20381800746723');
        $this->assertEquals(184, $r->Next(0, 300));
        $this->assertEquals(190, $r->Next(0, 300));
        $this->assertEquals('0011111111011110111101110111000010100001101111011110111011100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483852537108517');
        $this->assertEquals('0011111110110000011100101111011001010110001000001110010111101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0642541847490958');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals('0011111111010101000011000011011011010001101010100001100001101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.328870491743493');
        $this->assertEquals('0011111111100001101000101100100100010111111000110100010110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.551121279388257');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(266, $r->Next(0, 300));
        $this->assertEquals('0011111111010011100001000111110011011110101001110000100011111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.30496141189009');
        $this->assertEquals('0011111111010000011000000001011110110011001000001100000000101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.255865025453207');
        $this->assertEquals(137, $r->Next(0, 300));
        $this->assertEquals(190, $r->Next(0, 300));
        $this->assertEquals('0011111110101011110000101111011011110000001101111000010111101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0542218368752961');
        $this->assertEquals('0011111111101100000101100011101101111001011110000010110001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.877713906521776');
        $this->assertEquals('0011111111101010111111000011100111000011011101011111100001110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.84328926254217');
        $this->assertEquals('0011111110010011010101100101010110011000001001101010110010101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0188840269199032');
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals('0011111111101010000010011000111001001010101101000001001100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.813666482834921');
        $this->assertEquals('0011111111010100110111011010110000010100001010011011101101011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.326029796305126');
        $this->assertEquals(166, $r->Next(0, 300));
        $this->assertEquals(126, $r->Next(0, 300));
        $this->assertEquals('0011111111100100010111110101000110000011111010001011111010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.636635549197269');
        $this->assertEquals('0011111111010111001101110001100011000100001011100110111000110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.362737838347786');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals('0011111111000011000001001110000001101101001001100000100111000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.148586324019631');
        $this->assertEquals('0011111111100000100111101101111101000111011000010011110110111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.519393577016608');
        $this->assertEquals(114, $r->Next(0, 300));
        $this->assertEquals(224, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010100110110100100011001111110101010011011010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.916431952228971');
        $this->assertEquals('0011111101100111011101010111001101000000001011101110101011100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00286362180619669');
        $this->assertEquals(165, $r->Next(0, 300));
        $this->assertEquals(218, $r->Next(0, 300));
        $this->assertEquals('0011111111010110001011000011111100011011101011000101100001111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.346450593018183');
        $this->assertEquals('0011111111001011101111011110111111111101001101110111101111100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.216733931199058');
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111011001101111111000101111111111101100110111111100011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.402316093166506');
        $this->assertEquals('0011111110011100001100111100010111111000001110000110011110001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0275412495376269');
        $this->assertEquals(140, $r->Next(0, 300));
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals('0011111111101010111010100010110100001101001101011101010001011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.841085935403167');
        $this->assertEquals('0011111110101100010111110001000111010000001110001011111000100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0554128233601399');
        $this->assertEquals(115, $r->Next(0, 300));
        $this->assertEquals(269, $r->Next(0, 300));
        $this->assertEquals('0011111111101100111010011001100000000000111110011101001100110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.903514863878263');
        $this->assertEquals('0011111111010111100000001100011001101011101011110000000110001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.367234807166846');
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals(5, $r->Next(0, 300));
        $this->assertEquals('0011111111100011000011010000011011110000111001100001101000001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.595340223794496');
        $this->assertEquals('0011111111000100110101111110000011011011001010011010111111000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.162838084233384');
        $this->assertEquals(117, $r->Next(0, 300));
        $this->assertEquals(86, $r->Next(0, 300));
        $this->assertEquals('0011111110110100001111010111110111100110001010000111101011111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0790632903012742');
        $this->assertEquals('0011111110101111110101110010100001100000001111111010111001010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0621883981219439');
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals(215, $r->Next(0, 300));
        $this->assertEquals('0011111111100011000001000001111110000101001001100000100000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.59425331121043');
        $this->assertEquals('0011111111100011010111011100111110100101111001101011101110011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.6052015533695');
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals(245, $r->Next(0, 300));
        $this->assertEquals('0011111111100000010000110000100010000100011000001000011000010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.508182772206228');
        $this->assertEquals('0011111111100001110100110110010011110011001000111010011011001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.557054972535491');
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals('0011111110110101100001100001111011110100001010110000110000111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0840777727235471');
        $this->assertEquals('0011111111010100111000100001010111111101001010011100010000101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.326299187879217');
        $this->assertEquals(159, $r->Next(0, 300));
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals('0011111110011101111100110011001111100000001110111110011001101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0292480569469035');
        $this->assertEquals('0011111111011100011100100110011011101001101110001110010011001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.444482544178368');
        $this->assertEquals(275, $r->Next(0, 300));
        $this->assertEquals(235, $r->Next(0, 300));
        $this->assertEquals('0011111111101011011100101111111111101100111101101110011000000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.85778805048102');
        $this->assertEquals('0011111111010110010111010001111000101100101011001011101000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.349433463695195');
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals('0011111111101111010100010111001011101110101111101010001011100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.978692499445142');
        $this->assertEquals('0011111110110100111010010000011100011010001010011101001000001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0816807211757082');
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals('0011111110100101101010111001100011100100001010110101011100110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0423248079802491');
        $this->assertEquals('0011111111010111010000011001101110110110001011101000001100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.363379409705931');
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals(226, $r->Next(0, 300));
        $this->assertEquals('0011111111100011100110110101011001100110011001110011011010101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.612712097173888');
        $this->assertEquals('0011111111010000110011100101101101001011101000011001110010110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.262595008715333');
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals(85, $r->Next(0, 300));
        $this->assertEquals('0011111111101001010000000110111010111000011100101000000011011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.789115295647231');
        $this->assertEquals('0011111111010001010110011111110000000010101000101011001111111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.271117212842739');
        $this->assertEquals(222, $r->Next(0, 300));
        $this->assertEquals(239, $r->Next(0, 300));
        $this->assertEquals('0011111111100100000000000000110100110011001010000000000000011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.625006294169');
        $this->assertEquals('0011111111100100110101010001000110011011001010011010101000100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.651009371807337');
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals(85, $r->Next(0, 300));
        $this->assertEquals('0011111111100110111010010100111001011101011011011101001010011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.715979750135904');
        $this->assertEquals('0011111111101101101111101001101110101101111110110111110100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.929517593201956');
        $this->assertEquals('0011111111101010000011000100010101100000001101000001100010001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.813997924706898');
        $this->assertEquals('0011111111100010011110001000110100000010011001001111000100011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.577215675999045');
        $this->assertEquals(250, $r->Next(0, 300));
        $this->assertEquals(255, $r->Next(0, 300));
        $this->assertEquals('0011111111101111101000001001010001100010001111110100000100101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.988352004898876');
        $this->assertEquals('0011111111000011010011110100110111110000001001101001111010011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.150857679616128');
        $this->assertEquals(73, $r->Next(0, 300));
        $this->assertEquals(181, $r->Next(0, 300));
        $this->assertEquals('0011111111011011100011001011111111110110001101110001100110000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.430465689129413');
        $this->assertEquals('0011111111100111010110010010000010100110011011101011001001000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.729629826606079');
        $this->assertEquals(144, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111100111101011001010100000011101101011110101100101010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.739826257685118');
        $this->assertEquals('0011111111100000011001101111111010100001111000001100110111111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.512572590034722');
        $this->assertEquals(235, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111101000110011000000101011110011101100011001100000010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.77490756603652');
        $this->assertEquals('0011111111000010100010001110101010100101001001010001000111010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.144803362500297');
        $this->assertEquals(121, $r->Next(0, 300));
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals('0011111111101010111100000010011101011110111101011110000001001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.841815648526799');
        $this->assertEquals('0011111111101010010010011001011000111000101101001001001100101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.821482764008214');
        $this->assertEquals('0011111111100101101011011001011001001010111010110101101100101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.677439829184413');
        $this->assertEquals('0011111111001111100111011011101110001111001111110011101101110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.247001118607354');
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals('0011111111100110011111101000001010011011101011001111110100000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.70294313817422');
        $this->assertEquals('0011111110111111001001001100000110100100001111100100100110000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.121654608343567');
        $this->assertEquals(48, $r->Next(0, 300));
        $this->assertEquals(62, $r->Next(0, 300));
        $this->assertEquals('0011111111100100110111011001100100010110101010011011101100110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.652050537360856');
        $this->assertEquals('0011111111010010111110101010000101000111001001011111010101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.296547240715729');
        $this->assertEquals(259, $r->Next(0, 300));
        $this->assertEquals(14, $r->Next(0, 300));
        $this->assertEquals('0011111111010001001000011011011100000110001000100100001101101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.267682796468811');
        $this->assertEquals('0011111111001111000110001001101011111110001111100011000100110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.242938398496685');
        $this->assertEquals(283, $r->Next(0, 300));
        $this->assertEquals(57, $r->Next(0, 300));
        $this->assertEquals('0011111111011000000000000111001011110001101100000000000011100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.375027404807055');
        $this->assertEquals('0011111101011011111111100001111010000000001101111111110000111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00170853594397592');
        $this->assertEquals(152, $r->Next(0, 300));
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals('0011111111101010101000001100110110101010101101010100000110011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.83212931958592');
        $this->assertEquals('0011111111101101011010100101010000001101001110101101010010101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.919229532088726');
        $this->assertEquals('0011111111101001101011110101001100111111011100110101111010100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.8026520003577');
        $this->assertEquals('0011111111101110001010101100000111011000011111000101010110000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.942719385932535');
        $this->assertEquals('0011111111100001000000000101010111100011101000100000000010101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.53129095515762');
        $this->assertEquals('0011111111001101010011101100100011011101001110101001110110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.228966815969426');
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals(1, $r->Next(0, 300));
        $this->assertEquals('0011111111101100000010010000011010100111011110000001001000001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.876101805770817');
        $this->assertEquals('0011111111100001101011101011101101010110011000110101110101110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.552579563834043');
        $this->assertEquals(263, $r->Next(0, 300));
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals('0011111110110110011100111010001001111000001011001110011101000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0877019446751578');
        $this->assertEquals('0011111111101111110000101010111100100111011111111000010101011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.992515160698684');
        $this->assertEquals('0011111111101100110010101111011010110111011110011001010111101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.899775846814632');
        $this->assertEquals('0011111111100010110110001101100001100110011001011011000110110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.588970375055899');
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals('0011111111011100101010101010000111000000101110010101010101000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.447914541441907');
        $this->assertEquals('0011111110111111010101101000101110011110001111101010110100010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.122414327749244');
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals('0011111110110011110111000011110001111110001001111011100001111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0775792892452233');
        $this->assertEquals('0011111111000111101100000010010010010011001011110110000001001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.18506295382281');
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals(207, $r->Next(0, 300));
        $this->assertEquals('0011111111001111010110001000110001111011001111101011000100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.244889793565911');
        $this->assertEquals('0011111111100001010110001111010100100100011000101011000111101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.542109080377086');
        $this->assertEquals(202, $r->Next(0, 300));
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals('0011111111101000101000100000000100110000011100010100010000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.769775957693241');
        $this->assertEquals('0011111111011001110001110010011010110001001100111000111001001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.402780221031411');
        $this->assertEquals(22, $r->Next(0, 300));
        $this->assertEquals(249, $r->Next(0, 300));
        $this->assertEquals('0011111111101111101010001100100010001101111111110101000110010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.989353444422294');
        $this->assertEquals('0011111111101000010000110100001000111101101100001000011010000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.758210297095687');
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals(268, $r->Next(0, 300));
        $this->assertEquals('0011111111001101000010010001011011101000001110100001001000101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.226839888946544');
        $this->assertEquals('0011111111011110010101011010000011001000101111001010101101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.473976322204795');
        $this->assertEquals(32, $r->Next(0, 300));
        $this->assertEquals(47, $r->Next(0, 300));
        $this->assertEquals('0011111111010101001010011100111101010100101010100101001110011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.330676872902865');
        $this->assertEquals('0011111110111001011101101110111000000010001100101110110111011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0994709735268126');
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals('0011111111101110110001000110001011110001101111011000100011000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.961472961568028');
        $this->assertEquals('0011111111010001100111000101100010110111001000110011100010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.275167635770127');
        $this->assertEquals(102, $r->Next(0, 300));
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals('0011111111000110111000001110001011000000001011011100000111000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.178737968289637');
        $this->assertEquals('0011111111000010100010010000001011010001001001010001001000000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.144806244012344');
        $this->assertEquals(166, $r->Next(0, 300));
        $this->assertEquals(116, $r->Next(0, 300));
        $this->assertEquals('0011111111100010000110101101101101101010011001000011010110110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.565778453632155');
        $this->assertEquals('0011111111100011011110000101110000000001011001101111000010111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.608442309130189');
        $this->assertEquals(252, $r->Next(0, 300));
        $this->assertEquals(185, $r->Next(0, 300));
        $this->assertEquals('0011111111101110110001010010011100000001111111011000101001001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.961566451919063');
        $this->assertEquals('0011111111101010111001101000010100000110101101011100110100001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.840639603715688');
        $this->assertEquals('0011111111101111011111011000111100011000011111101111101100011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.984077022403514');
        $this->assertEquals('0011111111011110000100111100101010100011001111000010011110010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.469957980546149');
        $this->assertEquals(98, $r->Next(0, 300));
        $this->assertEquals(87, $r->Next(0, 300));
        $this->assertEquals('0011111111101001000011001011101000100101111100100001100101110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.782803606140801');
        $this->assertEquals('0011111111011110100000110100010010110011001111010000011010001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.476761984860879');
        $this->assertEquals(16, $r->Next(0, 300));
        $this->assertEquals(76, $r->Next(0, 300));
        $this->assertEquals('0011111101101001111001101001100110000000001100111100110100110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00316171627638941');
        $this->assertEquals('0011111111000010000111101101000111100111001001000011110110100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.141565549718945');
        $this->assertEquals(43, $r->Next(0, 300));
        $this->assertEquals(35, $r->Next(0, 300));
        $this->assertEquals('0011111101101011101100110000101010000000001101110110011000010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00338127184816695');
        $this->assertEquals('0011111111101111001010101000000001111011111111100101010100000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.973938219237113');
        $this->assertEquals('0011111110001010010001001110110101010000001101001000100111011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0128267803289121');
        $this->assertEquals('0011111111010010010001110111010001111100101001001000111011101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.285611268731584');
        $this->assertEquals(267, $r->Next(0, 300));
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals('0011111111101000100100111110111000110011011100010010011111011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.768057918999371');
        $this->assertEquals('0011111111001111011111101001010100111000001111101111110100101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.246050503219501');
        $this->assertEquals(218, $r->Next(0, 300));
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals('0011111111001001011101110001010001110001001100101110111000101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.198946528695033');
        $this->assertEquals('0011111111010100011100001111001010001110001010001110000111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.319393767192677');
        $this->assertEquals(121, $r->Next(0, 300));
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001010101110010100101001101101100101010111001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.848986226529342');
        $this->assertEquals('0011111111100110000011011111010011011010011011000001101111101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.689203669172341');
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals(114, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010101000111010111000000001110101010100011101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.916560054252185');
        $this->assertEquals('0011111111101010011101001101000110001001101101001110100110100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.826760071714763');
        $this->assertEquals('0011111111101101110111000110011000110001001110111011100011001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.933154197844283');
        $this->assertEquals('0011111111011000101101111000000101100110101100010110111100000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.386200285230857');
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals(191, $r->Next(0, 300));
        $this->assertEquals('0011111111101010100010010110111100101011101101010001001011011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.829276643148287');
        $this->assertEquals('0011111110100011010010011010010111010100001001101001001101001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0376712628815655');
        $this->assertEquals(95, $r->Next(0, 300));
        $this->assertEquals(282, $r->Next(0, 300));
        $this->assertEquals('0011111111100101110011010000001110101000111010111001101000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.681276159212587');
        $this->assertEquals('0011111111100110100111101110111010001101001011010011110111011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.706900859580795');
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals(60, $r->Next(0, 300));
        $this->assertEquals('0011111111001011000110111110000111001011001101100011011111000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.211788391327387');
        $this->assertEquals('0011111110101110111010101100111110100000001111011101010110011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0603852160556173');
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals(173, $r->Next(0, 300));
        $this->assertEquals('0011111111010111111101000100010000100011101011111110100010001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.37428382382462');
        $this->assertEquals('0011111111010001111011100100001001011000001000111101110010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.28016718490057');
        $this->assertEquals(214, $r->Next(0, 300));
        $this->assertEquals(259, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001011110101101111100111001101100101111010111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.84953112753552');
        $this->assertEquals('0011111111100110111001011000000110110011111011011100101100000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.715515948699562');
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals(4, $r->Next(0, 300));
        $this->assertEquals('0011111111010001010110000100000001101010101000101011000010000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.271011451851116');
        $this->assertEquals('0011111110000001101010100101011001000000001000110101010010101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00862567313417125');
        $this->assertEquals(266, $r->Next(0, 300));
        $this->assertEquals(47, $r->Next(0, 300));
        $this->assertEquals('0011111111100100000101101011110100101111111010000010110101111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.627775758331537');
        $this->assertEquals('0011111111010111010101011111101000001010001011101010101111110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.364622602409042');
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111001100110011001111101011100110001110011001100111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.22500549546676');
        $this->assertEquals('0011111111010100010101111101011001110000101010001010111110101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.317861185091483');
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals(185, $r->Next(0, 300));
        $this->assertEquals('0011111111011110111110100111111001100000001111011111010011111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.484038919435832');
        $this->assertEquals('0011111111010111111000100111011010010000101011111100010011101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.37319721345473');
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals('0011111111100101001010101000011000110101001010100101010100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.6614409483324');
        $this->assertEquals('0011111111101010011111010111010110011011101101001111101011101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.827814869036812');
        $this->assertEquals('0011111111100010000100101010000110100101001001000010010101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.564774344006914');
        $this->assertEquals('0011111110010110110011111110101111000000001011011001111111011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0222775302931096');
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals(299, $r->Next(0, 300));
        $this->assertEquals('0011111110111011100011000000011010100010001101110001100000001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.107605375865291');
        $this->assertEquals('0011111111010110000000111010011101100000101011000000011101001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.343973011404263');
        $this->assertEquals(145, $r->Next(0, 300));
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals('0011111111010100001001111010010110010001001010000100111101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.314919845347721');
        $this->assertEquals('0011111111101111100101110000001101010011111111110010111000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.987184204155199');
        $this->assertEquals('0011111111100101010010111001101010001010001010101001011100110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.665478963714782');
        $this->assertEquals('0011111110101011001001010011000100100100001101100100101001100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0530181271270933');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals('0011111111010001100101010101001100101111101000110010101010100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.274739071389073');
        $this->assertEquals('0011111111011110011011110101000111101101001111001101111010100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.47554443519355');
        $this->assertEquals(110, $r->Next(0, 300));
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals('0011111111000011000100110011011011101010001001100010011001101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.149023880320147');
        $this->assertEquals('0011111111000100010101001010011111000010001010001010100101010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.158833474926107');
        $this->assertEquals(93, $r->Next(0, 300));
        $this->assertEquals(94, $r->Next(0, 300));
        $this->assertEquals('0011111111100111000001111001111010101000101011100000111100111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.719680146649331');
        $this->assertEquals('0011111111100100110010101100101110110101001010011001010110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.649755338509453');
        $this->assertEquals(292, $r->Next(0, 300));
        $this->assertEquals(268, $r->Next(0, 300));
        $this->assertEquals('0011111111101100000000011000011101110101001110000000001100001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.87518666166588');
        $this->assertEquals('0011111111100000110001101001101101010010101000011000110100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.524243985546866');
        $this->assertEquals(28, $r->Next(0, 300));
        $this->assertEquals(0, $r->Next(0, 300));
        $this->assertEquals('0011111111101010010111001101011000011001011101001011100110101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.823832559317272');
        $this->assertEquals('0011111111101011100001011110001001100000101101110000101111000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.860093296906023');
        $this->assertEquals('0011111111001001110111100111000111100011001100111011110011100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.202100978792692');
        $this->assertEquals('0011111110010110001111001100100101110000001011000111100110010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0217162584987079');
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals(26, $r->Next(0, 300));
        $this->assertEquals('0011111111010100010000111100111010101000001010001000011110011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.316638626305684');
        $this->assertEquals('0011111111010001100000111010110101001110101000110000011101011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.27366192511919');
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals(163, $r->Next(0, 300));
        $this->assertEquals('0011111111100101100100111100011011010111011010110010011110001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.674289150943183');
        $this->assertEquals('0011111111010110111101000000101101110010001011011110100000010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.358645307067151');
        $this->assertEquals(14, $r->Next(0, 300));
        $this->assertEquals(0, $r->Next(0, 300));
        $this->assertEquals('0011111111101110100111011101111110000010101111010011101110111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.956771617269503');
        $this->assertEquals('0011111111000110000000111010111010011101001011000000011101011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.171987368339667');
        $this->assertEquals(102, $r->Next(0, 300));
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals('0011111111010101111010101001000101111110101010111101010100100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.342441915228237');
        $this->assertEquals('0011111110000001011001011000111001100000001000101100101100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0084944842422821');
        $this->assertEquals(1, $r->Next(0, 300));
        $this->assertEquals(190, $r->Next(0, 300));
        $this->assertEquals('0011111111100110100110100010000111100111001011010011010001000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.706314994351154');
        $this->assertEquals('0011111111100000000101010101110001000100101000000010101010111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.502607473406292');
        $this->assertEquals(154, $r->Next(0, 300));
        $this->assertEquals(74, $r->Next(0, 300));
        $this->assertEquals('0011111111010011010111011100000101101010101001101011101110000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.302597383643779');
        $this->assertEquals('0011111110101000100011100101010011000000001100010001110010101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0479608997925934');
        $this->assertEquals(6, $r->Next(0, 300));
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals('0011111111011110000000001001100001110110001111000000000100110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.468786349738383');
        $this->assertEquals('0011111111101110101100101001011101111111101111010110010100101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.959300755969854');
        $this->assertEquals('0011111111000110001011110010001111010000001011000101111001001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.173313595435262');
        $this->assertEquals('0011111111010100000101011101011111111110001010000010101110110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.313833234977831');
        $this->assertEquals(49, $r->Next(0, 300));
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001110101011011010011001011101100111010101101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.850917148334401');
        $this->assertEquals('0011111111101110100100111000111101010110111111010010011100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.955512685680535');
        $this->assertEquals('0011111110110001001000000010001101110100001000100100000001000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.066896644452073');
        $this->assertEquals('0011111111000111110000000100011101101001001011111000000010001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.185555387840399');
        $this->assertEquals(47, $r->Next(0, 300));
        $this->assertEquals(28, $r->Next(0, 300));
        $this->assertEquals('0011111111101101011011011001110101001101111110101101101100111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.919630672745235');
        $this->assertEquals('0011111111100011010101101101010011001000001001101010110110101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.604349509162991');
        $this->assertEquals(145, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111111010001000101011011100011001110101000100010101101110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.266950799742225');
        $this->assertEquals('0011111111100111000001110101001000011000001011100000111010100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.719643637873066');
        $this->assertEquals(207, $r->Next(0, 300));
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals('0011111111100001101101001001011110100100101000110110100100101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.553294965323664');
        $this->assertEquals('0011111111101101000010110100011001101101101110100001011010001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.907626356420865');
        $this->assertEquals('0011111111000111010001010100101001001101001011101000101010010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.181802070318629');
        $this->assertEquals('0011111110110110010110101100001001001010001011001011010110000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0873223715868417');
        $this->assertEquals(298, $r->Next(0, 300));
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals('0011111111000011101011110000000111100110001001110101111000000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.153778302554869');
        $this->assertEquals('0011111111100110011000100100000000110100001011001100010010000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.6994935053864');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals('0011111111101001001010111011011100001000001100100101011101101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.786586299904895');
        $this->assertEquals('0011111111010001001100100000010000010000001000100110010000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.26867772651309');
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals(206, $r->Next(0, 300));
        $this->assertEquals('0011111110110011011011010110010110111010001001101101101011001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0758880214187726');
        $this->assertEquals('0011111111100110111000010010111101010111101011011100001001011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.714988394973329');
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals('0011111111101010110001100001111101010101111101011000110000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.836684863938338');
        $this->assertEquals('0011111111000011011000001001110101100101001001101100000100111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.151385950460744');
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals(115, $r->Next(0, 300));
        $this->assertEquals('0011111111101100110100100011110010011000111110011010010001111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.900663660792943');
        $this->assertEquals('0011111111000100000101001101101110010100001010000010100110110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.156886527387838');
        $this->assertEquals(254, $r->Next(0, 300));
        $this->assertEquals(272, $r->Next(0, 300));
        $this->assertEquals('0011111111100110111010011110011111110001111011011101001111010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.716052982823948');
        $this->assertEquals('0011111110111010000110100110100011111000001101000011010011010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.101965485188163');
        $this->assertEquals(5, $r->Next(0, 300));
        $this->assertEquals(168, $r->Next(0, 300));
        $this->assertEquals('0011111111101111011001011011111010011001111111101100101101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.981169987461143');
        $this->assertEquals('0011111111100010101001111000111010011101001001010100111100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.582953745770712');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals('0011111111100101001000011101101111110101001010100100001110111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.660383204305723');
        $this->assertEquals('0011111111100001111101010000010111001101011000111110101000001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.561159993317518');
        $this->assertEquals(233, $r->Next(0, 300));
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals('0011111111010100010011110001000010001100101010001001111000100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.317325723039604');
        $this->assertEquals('0011111111101111001101001101110001100000111111100110100110111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.975202741089837');
        $this->assertEquals('0011111111100100110110011111011110101111111010011011001111101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.651607364253889');
        $this->assertEquals('0011111111000011011000011101100110010101001001101100001110110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.151423642948001');
        $this->assertEquals(134, $r->Next(0, 300));
        $this->assertEquals(49, $r->Next(0, 300));
        $this->assertEquals('0011111111011001100010001011010110100100001100110001000101101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.398969087935504');
        $this->assertEquals('0011111111101100011111001011111110011010011110001111100101111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.890228082374776');
        $this->assertEquals('0011111111101010111100100001011110100010001101011110010000101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.842052285020264');
        $this->assertEquals('0011111111001101101110111010000110001100001110110111011101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.232288545105741');
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals(230, $r->Next(0, 300));
        $this->assertEquals('0011111111101000100101110111100011101001101100010010111011110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.768490272931983');
        $this->assertEquals('0011111111100000111111101001111000101001111000011111110100111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.531081277658735');
        $this->assertEquals(264, $r->Next(0, 300));
        $this->assertEquals(162, $r->Next(0, 300));
        $this->assertEquals('0011111111011110111100100011100000111111001111011110010001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483533918151415');
        $this->assertEquals('0011111111000101100001101100010110010111001010110000110110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.168175410091959');
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals('0011111111001110011011100000111011001001001111001101110000011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.237733696232426');
        $this->assertEquals('0011111110110110001111100001000111000010001011000111110000100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0868846034104399');
        $this->assertEquals(141, $r->Next(0, 300));
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals('0011111111100101110011100100011100001000101010111001110010001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.681430355963032');
        $this->assertEquals('0011111111101110001111000010011110010010011111000111100001001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.944843088251');
        $this->assertEquals('0011111111101101011111001000011001110011011110101111100100001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.921450830028137');
        $this->assertEquals('0011111111001010000100001010000110101100001101000010000101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.203632554134183');
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals(11, $r->Next(0, 300));
        $this->assertEquals('0011111110011011100110110001111010111000001101110011011000111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.026958923333771');
        $this->assertEquals('0011111111100000011110001010011011101001111000001111000101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.514728028101254');
        $this->assertEquals(281, $r->Next(0, 300));
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals('0011111111011010110010010110101111101110001101011001001011011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.418543799043886');
        $this->assertEquals('0011111111101011100100010100001011110100111101110010001010000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.861482122848501');
        $this->assertEquals('0011111111011111111111000101111101010010101111111111100010111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.499778586206855');
        $this->assertEquals('0011111111000101101101101111101010100010001010110110110111110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.169646577057264');
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals('0011111111101000010000001101110000010010111100001000000110111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.757917439452334');
        $this->assertEquals('0011111111101110101100110001010011111100011111010110011000101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.95936059297964');
        $this->assertEquals('0011111110110001010011000100111011110010001000101001100010011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0675706235075233');
        $this->assertEquals('0011111111011110111101011111111100011101101111011110101111111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483764437718207');
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals(74, $r->Next(0, 300));
        $this->assertEquals('0011111111101001011000001000101110011011011100101100000100010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.793035319909935');
        $this->assertEquals('0011111111011100110011100100000011100000001110011001110010000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.450088709802408');
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals(244, $r->Next(0, 300));
        $this->assertEquals('0011111111100111011100011001111101101100001011101110001100111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.732619963927483');
        $this->assertEquals('0011111111011111100000000101010100011110101111110000000010101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.492207794213764');
        $this->assertEquals(166, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001001001110110011111000011101100100100111011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.848257527615995');
        $this->assertEquals('0011111111001101011111110001100000111000001110101111111000110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.230441119629164');
        $this->assertEquals(150, $r->Next(0, 300));
        $this->assertEquals(179, $r->Next(0, 300));
        $this->assertEquals('0011111111011110000101000101111010111001001111000010100010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.46999328698497');
        $this->assertEquals('0011111111100000001000110011101110101100111000000100011001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.504300916336617');
        $this->assertEquals(72, $r->Next(0, 300));
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals('0011111111101111001111111011011010101011111111100111111101101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.976527534414328');
        $this->assertEquals('0011111111101001110001010000100100111111111100111000101000010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.80530226221555');
        $this->assertEquals('0011111111001010010010000011110110110101001101001001000001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.20532962177197');
        $this->assertEquals('0011111110001100001000000100100111000000001110000100000010010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0137334596429642');
        $this->assertEquals(249, $r->Next(0, 300));
        $this->assertEquals(200, $r->Next(0, 300));
        $this->assertEquals('0011111110111100110011110100000110010110001110011001111010000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.112537478614849');
        $this->assertEquals('0011111110010101111111011111100110101000001010111111101111110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0214766510862283');
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals(94, $r->Next(0, 300));
        $this->assertEquals('0011111111001101101110001011100110011001001110110111000101110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.23219985944787');
        $this->assertEquals('0011111111010001010100010001100100111001101000101010001000110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.270574861797772');
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals('0011111110010011110001110000101101000000001001111000111000010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0193139799029166');
        $this->assertEquals('0011111111101111101000000110100101011000101111110100000011010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.988331483205935');
        $this->assertEquals('0011111111011110100111001001110010011000101111010011100100111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.478308819922762');
        $this->assertEquals('0011111111011011101101010000001100111101001101110110101000000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.43292313554926');
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals(141, $r->Next(0, 300));
        $this->assertEquals('0011111111100000000111011100110010010000001000000011101110011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.503637582298199');
        $this->assertEquals('0011111110111001101011101010010101110000001100110101110101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.100321140187011');
        $this->assertEquals(91, $r->Next(0, 300));
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals('0011111111101110101111001010101011110001001111010111100101010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.960530730411657');
        $this->assertEquals('0011111111000111101010110000010010110100001011110101011000001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.184906566601669');
        $this->assertEquals(75, $r->Next(0, 300));
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals('0011111111010110111011111001111011110111001011011101111100111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.358375302682805');
        $this->assertEquals('0011111111101100110011001010101101010011111110011001100101010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.899984039319672');
        $this->assertEquals('0011111111100110011000111000111101001011111011001100011100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.699653290072295');
        $this->assertEquals('0011111111011011101000001000111010100101001101110100000100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.431674634307471');
        $this->assertEquals(148, $r->Next(0, 300));
        $this->assertEquals(168, $r->Next(0, 300));
        $this->assertEquals('0011111111101111011100110101111001010000011111101110011010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.982833058565312');
        $this->assertEquals('0011111111010000110010010000000100111100101000011001001000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.262268361291973');
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111011010101001101111100000100111101101010100110111110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.416441000726279');
        $this->assertEquals('0011111110111111101101101111011001100000001111110110110111101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.12388553476142');
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals(203, $r->Next(0, 300));
        $this->assertEquals('0011111111101000101100001001111100010000101100010110000100111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.771560223201085');
        $this->assertEquals('0011111111011010110011001000001111101010001101011001100100001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.418732622833332');
        $this->assertEquals(78, $r->Next(0, 300));
        $this->assertEquals(85, $r->Next(0, 300));
        $this->assertEquals('0011111111011111000100111101001101000101101111100010011110100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.485585039241978');
        $this->assertEquals('0011111111100010001111000111111001000010101001000111100011111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.569884424363209');
        $this->assertEquals(63, $r->Next(0, 300));
        $this->assertEquals(154, $r->Next(0, 300));
        $this->assertEquals('0011111110111111000110011011000001001000001111100011001101100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.121485726964421');
        $this->assertEquals('0011111110100010111110101101101111100000001001011111010110111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0370701514357096');
        $this->assertEquals(105, $r->Next(0, 300));
        $this->assertEquals(231, $r->Next(0, 300));
        $this->assertEquals('0011111111100110001000100110010111010110111011000100010011001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.691698951503122');
        $this->assertEquals('0011111111101100000010011110000111111101111110000001001111000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.876206394227318');
        $this->assertEquals('0011111111100000000010011001101001001001111000000001001100110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.50117220333832');
        $this->assertEquals('0011111111100101011101010110000100000110111010101110101011000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.670578492651963');
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals('0011111111011010110000011001101101011011001101011000001100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.418066824981043');
        $this->assertEquals('0011111111101101100101001111100001001001101110110010100111110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.924434799200126');
        $this->assertEquals('0011111111100101001110000010000001010001101010100111000001000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.663101348403423');
        $this->assertEquals('0011111111000010001001111010011101101111001001000100111101001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.14183514525268');
        $this->assertEquals(184, $r->Next(0, 300));
        $this->assertEquals(240, $r->Next(0, 300));
        $this->assertEquals('0011111111101000110111010100100001010010011100011011101010010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.777012024902279');
        $this->assertEquals('0011111111100110100010101001010111101111011011010001010100101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.704417197827444');
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals('0011111111100110101101110111100100110111001011010110111011110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.709896667259697');
        $this->assertEquals('0011111111101101011001001010101001100101001110101100100101010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.918538282121782');
        $this->assertEquals('0011111110010000111000001011000101011000001000011100000101100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0164821348229806');
        $this->assertEquals('0011111110011100100101111010010101100000001110010010111101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0279222335796441');
        $this->assertEquals(40, $r->Next(0, 300));
        $this->assertEquals(247, $r->Next(0, 300));
        $this->assertEquals('0011111111010101000010100110101100111010101010100001010011010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.328760916985926');
        $this->assertEquals('0011111111101100010101010010110100000000111110001010101001011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.885397436043898');
        $this->assertEquals('0011111111010001100101010110010001111010101000110010101011001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.274743194354113');
        $this->assertEquals('0011111111100101101010010011101110010101011010110101001001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.676908294519832');
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals('0011111111101111010000110110001000110100111111101000011011000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.976975539688475');
        $this->assertEquals('0011111111101010111111101100010101011010111101011111110110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.843599965723045');
        $this->assertEquals('0011111111101000111010010111010101001010111100011101001011101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.778498312355251');
        $this->assertEquals('0011111111100101001100111110000110001101111010100110011111000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.662583138636585');
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals(216, $r->Next(0, 300));
        $this->assertEquals('0011111111101011110111100100001111010100111101111011110010001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.870881954147891');
        $this->assertEquals('0011111110111011010010111110001010010100001101101001011111000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.106626664337994');
        $this->assertEquals(228, $r->Next(0, 300));
        $this->assertEquals(182, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001101011100110110110001011000000110101110011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.506567808569673');
        $this->assertEquals('0011111111101000100111011111001111101010101100010011101111101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.769281347640455');
        $this->assertEquals(211, $r->Next(0, 300));
        $this->assertEquals(123, $r->Next(0, 300));
        $this->assertEquals('0011111110001111100100101110111100000000001111110010010111011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0154169723463324');
        $this->assertEquals('0011111111100100001001101011010100110100111010000100110101101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.629725077948405');
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals(137, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001101100010011100001001011000000110110001001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.506610410989546');
        $this->assertEquals('0011111111101000111111110101001110110011011100011111111010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.781167841414533');
        $this->assertEquals(82, $r->Next(0, 300));
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals('0011111111101001110000011001000011101001011100111000001100100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.804878669700063');
        $this->assertEquals('0011111111001001111110100010111010001111001100111111010001011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.202947444842638');
        $this->assertEquals(6, $r->Next(0, 300));
        $this->assertEquals(97, $r->Next(0, 300));
        $this->assertEquals('0011111111100100011001111010010100100100001010001100111101001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.637651987670759');
        $this->assertEquals('0011111111101011101110110000010101010100011101110111011000001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.866579689954677');
        $this->assertEquals('0011111111100001100001001010110001100000101000110000100101011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.547445477241392');
        $this->assertEquals('0011111111100011101101000110110101001000111001110110100011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.615774767294421');
        $this->assertEquals(118, $r->Next(0, 300));
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals('0011111111101110010101001011000010011110111111001010100101100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.947838125726133');
        $this->assertEquals('0011111111100111100101000110110011001110011011110010100011011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.736868289176779');
        $this->assertEquals(284, $r->Next(0, 300));
        $this->assertEquals(245, $r->Next(0, 300));
        $this->assertEquals('0011111111010111010000001110100100100001101011101000000111010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.363336832897429');
        $this->assertEquals('0011111111101110011100111110110010011101001111001110011111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.951650912385271');
        $this->assertEquals('0011111111100111000101010011111101110110111011100010101001111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.72134373882848');
        $this->assertEquals('0011111110101100000111010110111100100100001110000011101011011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0549120647157133');
        $this->assertEquals(250, $r->Next(0, 300));
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110111101101000101100111001111111011110110100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.99594946065729');
        $this->assertEquals('0011111110111010000111110101000011100100001101000011111010100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.102040343965423');
        $this->assertEquals(123, $r->Next(0, 300));
        $this->assertEquals(74, $r->Next(0, 300));
        $this->assertEquals('0011111111010100100111010101100000011001001010010011101010110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.322103523799266');
        $this->assertEquals('0011111111100111000011111110110111010010011011100001111111011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.720694457050736');
        $this->assertEquals(242, $r->Next(0, 300));
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals('0011111110110100101101011100100110111000001010010110101110010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0808988642324222');
        $this->assertEquals('0011111111101010000101101001110100100111111101000010110100111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.815260484728618');
        $this->assertEquals('0011111111000101110011000101001000110000001010111001100010100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.170297883530286');
        $this->assertEquals('0011111111101101011000011000001111010110101110101100001100001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.918153685945158');
        $this->assertEquals('0011111111011010000010011110011000000011101101000001001111001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.406854156128529');
        $this->assertEquals('0011111111100000101110111000110000111100101000010111011100011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.522894018573171');
        $this->assertEquals(11, $r->Next(0, 300));
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals('0011111111100100100010110011100101011010101010010001011001110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.641995122023856');
        $this->assertEquals('0011111111101000001001011100010100010001111100000100101110001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.75461057189601');
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals(1, $r->Next(0, 300));
        $this->assertEquals('0011111111100001111001001100111111110001111000111100100110100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.559181187096602');
        $this->assertEquals('0011111111000010100110011110010000101110001001010011001111001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.145321390659232');
        $this->assertEquals(63, $r->Next(0, 300));
        $this->assertEquals(39, $r->Next(0, 300));
        $this->assertEquals('0011111111101010010010010100001101001011101101001001001010000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.821443221914323');
        $this->assertEquals('0011111111101111000000011010010001001111111111100000001101001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.968950420603599');
        $this->assertEquals('0011111111011101110011010101001110111101101110111001101010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.465657172475782');
        $this->assertEquals('0011111111001001000100111100001100010101001100100010011110000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.195915589665955');
        $this->assertEquals(79, $r->Next(0, 300));
        $this->assertEquals(255, $r->Next(0, 300));
        $this->assertEquals('0011111111100111100111101101010110011110011011110011110110101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.738138970797015');
        $this->assertEquals('0011111111011100111010001010000000101110001110011101000101000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.451698346273833');
        $this->assertEquals(284, $r->Next(0, 300));
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals('0011111111011101010100100000100100100010001110101010010000010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.458132060458014');
        $this->assertEquals('0011111111100110011111011010011011001100111011001111101101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.702838325734641');
        $this->assertEquals(237, $r->Next(0, 300));
        $this->assertEquals(232, $r->Next(0, 300));
        $this->assertEquals('0011111101100100001101100111111001000000001010000110110011111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00246739061664203');
        $this->assertEquals('0011111111101101010101111011011101010001101110101010111101101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.916957530620023');
        $this->assertEquals('0011111110101101000111110000100011100000001110100011111000010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0568774007525655');
        $this->assertEquals('0011111111101011001001100010101111111000001101100100110001011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.848409638203871');
        $this->assertEquals('0011111111100001000111011011010000010001111000100011101101101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.534875903061999');
        $this->assertEquals('0011111111100010100101000001000110100001101001010010100000100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.580574813569232');
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals('0011111111010101000111101111001110011001001010100011110111100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.33001413304825');
        $this->assertEquals('0011111111011011001011000001001110110000001101100101100000100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.42456524093848');
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals(236, $r->Next(0, 300));
        $this->assertEquals('0011111111010011110100010110011010000101001001111010001011001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.309655790361415');
        $this->assertEquals('0011111111101110111011110111101001100100111111011101111011110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.96673316693247');
        $this->assertEquals('0011111111101111000011100000101010110110001111100001110000010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.970464092199907');
        $this->assertEquals('0011111111101010100010010001001110011001111101010001001000100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.829232979486339');
        $this->assertEquals('0011111111100100001001101100010000100000111010000100110110001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.629732193252878');
        $this->assertEquals('0011111111101011001110000101100001011011101101100111000010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.850628069998058');
        $this->assertEquals('0011111111101100011110110000100111001011011110001111011000010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.890019318968998');
        $this->assertEquals('0011111111010010000001110101001101000101101001000000111010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.28169709969391');
        $this->assertEquals(127, $r->Next(0, 300));
        $this->assertEquals(105, $r->Next(0, 300));
        $this->assertEquals('0011111111010000010100101000011111100111001000001010010100010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.255037284574954');
        $this->assertEquals('0011111111100011101001000010010000000001001001110100100001001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.613786699536157');
        $this->assertEquals(129, $r->Next(0, 300));
        $this->assertEquals(68, $r->Next(0, 300));
        $this->assertEquals('0011111110110011101111100011110001001100001001110111110001111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.077121513931603');
        $this->assertEquals('0011111111100110111111101100010001110100111011011111110110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.718599537256453');
        $this->assertEquals(291, $r->Next(0, 300));
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals('0011111110110000100101000011110101011100001000010010100001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0647619581151577');
        $this->assertEquals('0011111111010101011111110001101101001001001010101111111000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.335882970288341');
        $this->assertEquals(235, $r->Next(0, 300));
        $this->assertEquals(260, $r->Next(0, 300));
        $this->assertEquals('0011111111101000000100011000111010010011101100000010001100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.752143181279368');
        $this->assertEquals('0011111111000101011100000101001110101001001010101110000010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.167490441895784');
        $this->assertEquals(284, $r->Next(0, 300));
        $this->assertEquals(213, $r->Next(0, 300));
        $this->assertEquals('0011111111100011100010001100010011111001101001110001000110001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.610445487597233');
        $this->assertEquals('0011111111100100001101001100111010101111011010000110100110011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.631446211427192');
        $this->assertEquals(277, $r->Next(0, 300));
        $this->assertEquals(237, $r->Next(0, 300));
        $this->assertEquals('0011111111100100011100100010101010000011011010001110010001010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.638936287555348');
        $this->assertEquals('0011111110100101000010100000000001101100001010100001010000000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0410919315373022');
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals('0011111111100001011000011101001111101010001000101100001110101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.543191869064789');
        $this->assertEquals('0011111111101000101011110101101100111001011100010101111010110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.771405803864545');
        $this->assertEquals(144, $r->Next(0, 300));
        $this->assertEquals(35, $r->Next(0, 300));
        $this->assertEquals('0011111111011101001010100010101101010011001110100101010001010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.455698806073376');
        $this->assertEquals('0011111111100011011100001010110000110101011001101110000101011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.607503990459956');
        $this->assertEquals(243, $r->Next(0, 300));
        $this->assertEquals(152, $r->Next(0, 300));
        $this->assertEquals('0011111111010110001111111001000001111101101011000111111100100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.347629664162001');
        $this->assertEquals('0011111111100100110001110010111011000001101010011000111001011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.649314287420974');
        $this->assertEquals(198, $r->Next(0, 300));
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals('0011111111011010100110111101100001100111101101010011011110110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.415762044217327');
        $this->assertEquals('0011111111010011101000110000010000001111001001110100011000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.306824698255781');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals('0011111110101110010010101010100010101000001111001001010101010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0591633515707978');
        $this->assertEquals('0011111110000001100110000010010101010000001000110011000001001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00859097624597651');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals('0011111101101010010100000011001010000000001101001010000001100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00321206916273202');
        $this->assertEquals('0011111111011100001110100010000011110110001110000111010001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.441047897767764');
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals(240, $r->Next(0, 300));
        $this->assertEquals('0011111111101100001101111100010110100111011110000110111110001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.881808116045691');
        $this->assertEquals('0011111111101101011010000010000000100111001110101101000001000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.918960644360148');
        $this->assertEquals('0011111111001110101111100100110110001000001111010111110010011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.240182582400824');
        $this->assertEquals('0011111111010000100011000111011000111000001000010001100011101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.258573107541806');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(190, $r->Next(0, 300));
        $this->assertEquals('0011111111100110110110101101110100111001001011011011010110111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.714216815640319');
        $this->assertEquals('0011111111001011011000101000111110110011001101101100010100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.213945353037652');
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111111100101111010100101111000100000001010111101010010111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.684859335741428');
        $this->assertEquals('0011111111010011100100001101100010100000001001110010000110110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.305715710067058');
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals(255, $r->Next(0, 300));
        $this->assertEquals('0011111111101011101101000000001110001101101101110110100000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.865724350728898');
        $this->assertEquals('0011111111011101010000111011011011101100001110101000011101101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.457257967655201');
        $this->assertEquals(156, $r->Next(0, 300));
        $this->assertEquals(82, $r->Next(0, 300));
        $this->assertEquals('0011111111100000101010111101101010001000101000010101011110110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.520978228431651');
        $this->assertEquals('0011111110111010010100101111111010010000001101001010010111111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.102828893858394');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals('0011111111010010111000010110111110001011101001011100001011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.295009504675404');
        $this->assertEquals('0011111111010011011011101000010111100100001001101101110100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.303620789341452');
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals(131, $r->Next(0, 300));
        $this->assertEquals('0011111111100111011100010110101111111000111011101110001011011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.73259543056255');
        $this->assertEquals('0011111111100100001010111100100111101110001010000101011110010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.630345311309372');
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals(291, $r->Next(0, 300));
        $this->assertEquals('0011111111011110011011001100101100001111101111001101100110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.475390210503428');
        $this->assertEquals('0011111110111010001001100001101101111000001101000100110000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.102143971297026');
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals(203, $r->Next(0, 300));
        $this->assertEquals('0011111111001110010010001010000101011110001111001001000101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.23659150220295');
        $this->assertEquals('0011111111100001001011001111010110000010011000100101100111101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.536738161713229');
        $this->assertEquals(110, $r->Next(0, 300));
        $this->assertEquals(166, $r->Next(0, 300));
        $this->assertEquals('0011111111000011011100000010001010011100001001101110000001000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.151859594579721');
        $this->assertEquals('0011111111100110110101100001000001101101111011011010110000100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.713630881027147');
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals(134, $r->Next(0, 300));
        $this->assertEquals('0011111111001111010010011100101100101111001111101001001110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.24443950468881');
        $this->assertEquals('0011111111011101100011001100010001010011101110110001100110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.461716729896943');
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals('0011111111010000000000001000010100010110101000000000000100001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.250031730742209');
        $this->assertEquals('0011111111001010100000000101100100101111001101010000000010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.207041881609262');
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals('0011111111101101011111111010100000111101011110101111111101010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.921833152846355');
        $this->assertEquals('0011111111100111010010110001101011001000011011101001011000110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.727918044537268');
        $this->assertEquals(276, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111111010011000010001010100001111111101001100001000101010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.297403454453407');
        $this->assertEquals('0011111111011000001010001000100010000011101100000101000100010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.377473953821451');
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals('0011111111000000101101101101101000010011001000010110110110110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.130580195752243');
        $this->assertEquals('0011111111101101011101010001000101001000101110101110101000100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.920540468264623');
        $this->assertEquals('0011111111101100110110000100101111010111111110011011000010011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.901403352572305');
        $this->assertEquals('0011111110110101011110001001101001011000001010101111000100110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0838715043309478');
        $this->assertEquals(159, $r->Next(0, 300));
        $this->assertEquals(68, $r->Next(0, 300));
        $this->assertEquals('0011111111011110101000100100100100000100001111010100010010010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.478655103816956');
        $this->assertEquals('0011111111100010101001011001101010110001001001010100101100110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.582715364444403');
        $this->assertEquals(224, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111100011101100100110101111100111001001110110010011011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.615529967758586');
        $this->assertEquals('0011111111010101000011100001110000010110101010100001110000111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.328986189015669');
        $this->assertEquals(26, $r->Next(0, 300));
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals('0011111110111111100110010110011000011000001111110011001011001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.123434430045744');
        $this->assertEquals('0011111111101001110101011100101000011010101100111010101110010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.807347347404504');
        $this->assertEquals('0011111111000101011110000011100100100110001010101111000001110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.167731422077739');
        $this->assertEquals('0011111110101101011111010010000110101100001110101111101001000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0575953028433003');
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals(249, $r->Next(0, 300));
        $this->assertEquals('0011111111100101110100000001111100001010101010111010000000111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.681655426827099');
        $this->assertEquals('0011111111101101110001001010011011001111001110111000100101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.930255322218992');
        $this->assertEquals('0011111111000111111010101010001101001000001011111101010101000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.186848078010067');
        $this->assertEquals('0011111111100000110100010101010110101101001000011010001010101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.525553548953288');
        $this->assertEquals(146, $r->Next(0, 300));
        $this->assertEquals(233, $r->Next(0, 300));
        $this->assertEquals('0011111110101000110010001001001000100000001100011001000100100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0484052337931493');
        $this->assertEquals('0011111111100111111010110100101010111111011011111101011010010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.747472165966161');
        $this->assertEquals(54, $r->Next(0, 300));
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals('0011111111011000010111111111011010101010001100001011111111101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.380857149316397');
        $this->assertEquals('0011111111101011011111011110010000010101101101101111101111001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.859117548381499');
        $this->assertEquals('0011111111101101001101011000110100100000111110100110101100011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.912787022028485');
        $this->assertEquals('0011111111011011100100011001000011000110101101110010001100100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.43075961499976');
        $this->assertEquals(127, $r->Next(0, 300));
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals('0011111111101001111111011100010010010101111100111111101110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.812227528454842');
        $this->assertEquals('0011111111101011001111010011111000111101011101100111101001111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.851225967449707');
        $this->assertEquals('0011111111101101010010100100100101011110101110101001010010010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.915318188683744');
        $this->assertEquals('0011111110010000011010010100110101001000001000001101001010011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0160266948007172');
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals(11, $r->Next(0, 300));
        $this->assertEquals('0011111111011100101110011100000111000000001110010111001110000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.448837697714957');
        $this->assertEquals('0011111111100110000111000001001100001100001011000011100000100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.690927051329486');
        $this->assertEquals(177, $r->Next(0, 300));
        $this->assertEquals(244, $r->Next(0, 300));
        $this->assertEquals('0011111111101010000000001110010000010011101101000000000111001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.812608755572051');
        $this->assertEquals('0011111111101110011111110001100101111111101111001111111000110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.953015088547494');
        $this->assertEquals('0011111111100011010101111110111000000101011001101010111111011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.604483614491524');
        $this->assertEquals('0011111110111100110110110101111010111110001110011011011010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.112722321931609');
        $this->assertEquals(283, $r->Next(0, 300));
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals('0011111110111110000110011010110101000000001111000011001101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.117579296286022');
        $this->assertEquals('0011111111101001010011010001001011000101011100101001101000100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.790658364906282');
        $this->assertEquals(76, $r->Next(0, 300));
        $this->assertEquals(60, $r->Next(0, 300));
        $this->assertEquals('0011111111100111011110100110100001110110101011101111010011010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.733692390254555');
        $this->assertEquals('0011111111011000000011011110110001010101101100000001101111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.375849803619017');
        $this->assertEquals(178, $r->Next(0, 300));
        $this->assertEquals(226, $r->Next(0, 300));
        $this->assertEquals('0011111111000111000010100111110011111110001011100001010011111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.180007576094944');
        $this->assertEquals('0011111111100111011001011101100111000010101011101100101110110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.731182937850795');
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals(91, $r->Next(0, 300));
        $this->assertEquals('0011111111000110110100001101000010101000001011011010000110100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.178247530096326');
        $this->assertEquals('0011111111101000001101001000011111010001011100000110100100010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.756412419377087');
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals(197, $r->Next(0, 300));
        $this->assertEquals('0011111111100001011100011110001101011101001000101110001111000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.545152360827267');
        $this->assertEquals('0011111111101100100011000011010101100100101110010001100001101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.892115303730646');
        $this->assertEquals('0011111111101111110110000000010110000100101111111011000000001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.995119818949662');
        $this->assertEquals('0011111111010100010000011010000000011000001010001000001101000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.316505454628032');
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals(73, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001101010001011111110100001101100110101000110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.850231148698475');
        $this->assertEquals('0011111111100100100011101001010111010100011010010001110100101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.642405428757149');
        $this->assertEquals(144, $r->Next(0, 300));
        $this->assertEquals(148, $r->Next(0, 300));
        $this->assertEquals('0011111111101101111000111010101101001000011110111100011101010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.934041635102612');
        $this->assertEquals('0011111111100101100011100001110111101010011010110001110000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.673598249290883');
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals(28, $r->Next(0, 300));
        $this->assertEquals('0011111111000010010011010111001011101000001001001001101011100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.142988551474637');
        $this->assertEquals('0011111110110001110000010000110100100110001000111000001000011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0693519800293036');
        $this->assertEquals(150, $r->Next(0, 300));
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals('0011111111100111101110101010111001101101101011110111010101011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.741538252095477');
        $this->assertEquals('0011111110111111010000111101001011011100001111101000011110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.122128657122203');
        $this->assertEquals(52, $r->Next(0, 300));
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals('0011111111011111110110010001110111001111001111111011001000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.497626736060542');
        $this->assertEquals('0011111111011011111011011001110011010110001101111101101100111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.436377724835825');
        $this->assertEquals(76, $r->Next(0, 300));
        $this->assertEquals(48, $r->Next(0, 300));
        $this->assertEquals('0011111111101010110000001010101100101010101101011000000101010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.836019118705773');
        $this->assertEquals('0011111111010000000111101100011111001010001000000011110110010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.251878688229191');
        $this->assertEquals(191, $r->Next(0, 300));
        $this->assertEquals(43, $r->Next(0, 300));
        $this->assertEquals('0011111111100000011001111101111011100010001000001100111110111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.51267952123316');
        $this->assertEquals('0011111111101010101110010010001010010011001101010111001001000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.835099494473589');
        $this->assertEquals('0011111111011001011100111001110000100011101100101110011100111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.397681269514226');
        $this->assertEquals('0011111111000011101000111010011101010001001001110100011101001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.153431810975742');
        $this->assertEquals(122, $r->Next(0, 300));
        $this->assertEquals(213, $r->Next(0, 300));
        $this->assertEquals('0011111110111110000110110011001010011000001111000011011001100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.117602502981947');
        $this->assertEquals('0011111111100100000101001010110110101001101010000010100101011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.627524215088936');
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals(262, $r->Next(0, 300));
        $this->assertEquals('0011111111101110000101111111101011010001001111000010111111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.940427216207808');
        $this->assertEquals('0011111111100011100110011001101110010000111001110011001100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.612500937475125');
        $this->assertEquals(215, $r->Next(0, 300));
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals('0011111111011100010001101001010111000100101110001000110100101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.441808168516405');
        $this->assertEquals('0011111111101101100001111000100001111001111110110000111100010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.922794569247772');
        $this->assertEquals('0011111111101001001101010111101111011110111100100110101011111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.787778792804004');
        $this->assertEquals('0011111110110101101010010111110011101010001010110101001011111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0846174308492883');
        $this->assertEquals(176, $r->Next(0, 300));
        $this->assertEquals(99, $r->Next(0, 300));
        $this->assertEquals('0011111111101001101100001011001111001011111100110110000101101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.80282010873911');
        $this->assertEquals('0011111110100011000010111010111110100000001001100001011101011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.037198532390035');
        $this->assertEquals(4, $r->Next(0, 300));
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals('0011111111011110111011101100011010000010101111011101110110001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.483323695828823');
        $this->assertEquals('0011111111010100100110001000111101100100001010010011000100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.321811530888924');
        $this->assertEquals(118, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111110101111100100111000001100110000001111110010011100000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0616723057169804');
        $this->assertEquals('0011111111101111011000110100111001001100001111101100011010011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.980872296253625');
        $this->assertEquals('0011111111011010000110100011001000001001101101000011010001100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.407848844028939');
        $this->assertEquals('0011111111100011001001011011010000001111001001100100101101101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.598352460469283');
        $this->assertEquals(1, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111101111011101101011011011100011101111101110110101101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.983241505447422');
        $this->assertEquals('0011111110111001010101000100010110101010001100101010100010001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0989421406290224');
        $this->assertEquals(82, $r->Next(0, 300));
        $this->assertEquals(243, $r->Next(0, 300));
        $this->assertEquals('0011111111100110000000000011100101111111101011000000000001110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.687527417525429');
        $this->assertEquals('0011111111011011100011110100100000110010101101110001111010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.430620240713758');
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals(262, $r->Next(0, 300));
        $this->assertEquals('0011111110100110010001111111110001110000001011001000111111111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0435179602557411');
        $this->assertEquals('0011111111101011110001010011110011110101001101111000101001111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.867826918544167');
        $this->assertEquals('0011111111000111010000011111111000101001001011101000001111111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.181701440914395');
        $this->assertEquals('0011111111100010000001101111101101101101001001000000110111110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.563352311292362');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110100111000001110001000101111111010011100000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.99456955631942');
        $this->assertEquals('0011111111010101010000000001111010111110001010101000000000111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.33203857966328');
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111100101001111001110011011011100011010100111100111001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.663684301853033');
        $this->assertEquals('0011111111010011101010110010000011100011101001110101011001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.307319853132274');
        $this->assertEquals(102, $r->Next(0, 300));
        $this->assertEquals(142, $r->Next(0, 300));
        $this->assertEquals('0011111111101010001111110100100100101111011101000111111010010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.820225327191979');
        $this->assertEquals('0011111110111010100001100011110000011000001101010000110001111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.103610759649244');
        $this->assertEquals(201, $r->Next(0, 300));
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals('0011111111010100010110000010010001000111001010001011000001001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.317879743090775');
        $this->assertEquals('0011111111100001111000100010111100111001011000111100010001011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.55886040886811');
        $this->assertEquals(169, $r->Next(0, 300));
        $this->assertEquals(34, $r->Next(0, 300));
        $this->assertEquals('0011111111011101110100001011000011100111001110111010000101100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.465862489522371');
        $this->assertEquals('0011111111010101111001001000110110000100001010111100100100011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.342074755738524');
        $this->assertEquals(182, $r->Next(0, 300));
        $this->assertEquals(114, $r->Next(0, 300));
        $this->assertEquals('0011111111010000010010100011011110011010001000001001010001101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.254529858126552');
        $this->assertEquals('0011111111010101111100011000010001011010001010111110001100001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.342866027887383');
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals(292, $r->Next(0, 300));
        $this->assertEquals('0011111111011001011010011110110000111011001100101101001111011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.397090013323859');
        $this->assertEquals('0011111111000100001010110110001110111101001010000101011011000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.1575741456624');
        $this->assertEquals(113, $r->Next(0, 300));
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110011000011101100110010111111111001100001110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.993680572134294');
        $this->assertEquals('0011111111000010110100100111000110111010001001011010010011100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.147047248737443');
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals(275, $r->Next(0, 300));
        $this->assertEquals('0011111111101010001001111111010111001101011101000100111111101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.817377949979798');
        $this->assertEquals('0011111111000001001110111010100100011001001000100111011101010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.134633195183535');
        $this->assertEquals(169, $r->Next(0, 300));
        $this->assertEquals(218, $r->Next(0, 300));
        $this->assertEquals('0011111111100011011011101000111110111011011001101101110100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.607246271151698');
        $this->assertEquals('0011111111100101000000011001110101110111011010100000001100111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.656447156172454');
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals(208, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110100001110101011111000111111111010000111010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.994252668690985');
        $this->assertEquals('0011111111100000001111111001001011111011101000000111111100100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.507760516604297');
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals(51, $r->Next(0, 300));
        $this->assertEquals('0011111111000010010000001000101010100011001001001000000100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.142594651851149');
        $this->assertEquals('0011111111100011001111110100101100001111001001100111111010010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.601476220694127');
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals(117, $r->Next(0, 300));
        $this->assertEquals('0011111111010011101100001000010100100101101001110110000100001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.307648932238877');
        $this->assertEquals('0011111111101101101010001101010010101010001110110101000110101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.926859219058817');
        $this->assertEquals('0011111111011001101110011100100100000011001100110111001110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.401964429021796');
        $this->assertEquals('0011111111101010110111100011100011001000001101011011110001110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.839626685175871');
        $this->assertEquals('0011111111101110100011000111100110101110111111010001100011110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.954647866987925');
        $this->assertEquals('0011111110111111001110000011010101100010001111100111000001101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.121951424107864');
        $this->assertEquals(1, $r->Next(0, 300));
        $this->assertEquals(195, $r->Next(0, 300));
        $this->assertEquals('0011111111100101111011001101011010111101101010111101100110101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.685160990192164');
        $this->assertEquals('0011111111011001100000011101011111011011001100110000001110110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.39854999929599');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101100000110000000110011101110110110000011000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.927780247725444');
        $this->assertEquals('0011111111011010011011000010111110100101001101001101100001011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.412853156408692');
        $this->assertEquals(144, $r->Next(0, 300));
        $this->assertEquals(201, $r->Next(0, 300));
        $this->assertEquals('0011111111101111101110000100000001111110011111110111000010000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.991241690698658');
        $this->assertEquals('0011111111101000000000010001111010111110101100000000001000111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.750136730610457');
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals(54, $r->Next(0, 300));
        $this->assertEquals('0011111111101111110101000111101110101000011111111010100011110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.994687871073693');
        $this->assertEquals('0011111111101010110000100100110010100010101101011000010010011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.836218183318255');
        $this->assertEquals('0011111111100000010011010001101101100001011000001001101000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.509412470045226');
        $this->assertEquals('0011111111101001111001101011101011111100001100111100110101110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.809415333349917');
        $this->assertEquals('0011111111011010000100101111001100011110101101000010010111100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.407406597122274');
        $this->assertEquals('0011111111101101001100001111100001011101001110100110000111110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.912227804266022');
        $this->assertEquals('0011111111011000110110001100000001111110101100011011000110000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.388229488110277');
        $this->assertEquals('0011111111100111111001011000100011010001011011111100101100010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.746769341522255');
        $this->assertEquals(19, $r->Next(0, 300));
        $this->assertEquals(142, $r->Next(0, 300));
        $this->assertEquals('0011111111101010101000111010111111111010011101010100011101100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.832481373954788');
        $this->assertEquals('0011111111101001011101011010101100001110011100101110101101010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.795613792629733');
        $this->assertEquals(13, $r->Next(0, 300));
        $this->assertEquals(295, $r->Next(0, 300));
        $this->assertEquals('0011111111100011111001001011100100101111101001111100100101110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.6216703348894');
        $this->assertEquals('0011111110110001000110110011010001000110001000100011011001101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.066821353075477');
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals('0011111111101110111000111110111000100101001111011100011111011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.965323517548537');
        $this->assertEquals('0011111111100110010000001110111100100001001011001000000111011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.695426525871934');
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals(273, $r->Next(0, 300));
        $this->assertEquals('0011111110100110110001010010000101100100001011011000101001000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0444727358615365');
        $this->assertEquals('0011111111001010101101101000111100110111001101010110110100011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.208696271855708');
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals('0011111111101000100110010010100100101101001100010011001001010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.76869639231297');
        $this->assertEquals('0011111111100010100110101101001100100110011001010011010110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.581399512282293');
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals(181, $r->Next(0, 300));
        $this->assertEquals('0011111111000111001011010001111101011100001011100101101000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.181064529428754');
        $this->assertEquals('0011111111011001000111100000011111010100001100100011110000010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.392457921240692');
        $this->assertEquals(99, $r->Next(0, 300));
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals('0011111111011001011111000010000011011111101100101111100001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.398201197105554');
        $this->assertEquals('0011111111011110001010111110101111100000001111000101011111011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.471430748920623');
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals(177, $r->Next(0, 300));
        $this->assertEquals('0011111111011011101010010111111001110001101101110101001011111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.432220088053597');
        $this->assertEquals('0011111110100101101110000001010100011100001010110111000000101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0424200627219025');
        $this->assertEquals(220, $r->Next(0, 300));
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals('0011111111100010110011010011111010110100011001011001101001111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.587554313981698');
        $this->assertEquals('0011111111001010111101001001100111000111001101011110100100110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.210589620848461');
        $this->assertEquals(169, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111011101100001011000110111100111001110110000101100011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.461276508151217');
        $this->assertEquals('0011111111101110000111011011110000001101111111000011101101111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.941129710497861');
        $this->assertEquals('0011111111101001010100010101111010100010111100101010001010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.791182821519292');
        $this->assertEquals('0011111111011010100011110000010001011000101101010001111000001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.414979063633354');
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals(215, $r->Next(0, 300));
        $this->assertEquals('0011111111101001000111010011000010011001011100100011101001100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.78481321306192');
        $this->assertEquals('0011111111100010010110000000100110000001111001001011000000010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.573246720979571');
        $this->assertEquals(16, $r->Next(0, 300));
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals('0011111111101001010101011111101010001100011100101010101111110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.791745447456718');
        $this->assertEquals('0011111111010011001111101110111100100111001001100111110111011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.300716198189518');
        $this->assertEquals(152, $r->Next(0, 300));
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals('0011111111000010010111110011110011000000001001001011111001111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.143531411953052');
        $this->assertEquals('0011111111101001110100011000110100011000111100111010001100011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.806829975827984');
        $this->assertEquals('0011111111100111000100001101111010001010111011100010000110111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.720809241626789');
        $this->assertEquals('0011111111011101010110011101111111000100101110101011001111000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.458610479467833');
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals('0011111111011101100111101011000101000100101110110011110101100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.46281081878711');
        $this->assertEquals('0011111110111101100001101110011100001000001110110000110111001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.115339698323673');
        $this->assertEquals(176, $r->Next(0, 300));
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals('0011111111100100110001111010110100111111111010011000111101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.649374604061886');
        $this->assertEquals('0011111111000011100001100011100110011110001001110000110001110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.152533724043767');
        $this->assertEquals(252, $r->Next(0, 300));
        $this->assertEquals(276, $r->Next(0, 300));
        $this->assertEquals('0011111111101110110001100100100010110100001111011000110010010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.961704589874346');
        $this->assertEquals('0011111111101011110111010011001001000100001101111011101001100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.870751507985756');
        $this->assertEquals('0011111111010100110010110110011100000001101010011001011011001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.324914695380682');
        $this->assertEquals('0011111111101010101011110010101110100100011101010101111001010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.833883115013076');
        $this->assertEquals('0011111111100100100100000110011111011010101010010010000011010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.642627646514507');
        $this->assertEquals('0011111111100111110010100011110110100110001011111001010001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.743437599736935');
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals(248, $r->Next(0, 300));
        $this->assertEquals('0011111111101001010010010111010010000011011100101001001011101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.790216690763001');
        $this->assertEquals('0011111111100011100011010010100000011010001001110001101001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.610981036262112');
        $this->assertEquals(203, $r->Next(0, 300));
        $this->assertEquals(138, $r->Next(0, 300));
        $this->assertEquals('0011111111100011011100011101001101010000101001101110001110100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.607644708178772');
        $this->assertEquals('0011111111101000010011100100100011101010001100001001110010010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.759556252863052');
        $this->assertEquals(262, $r->Next(0, 300));
        $this->assertEquals(94, $r->Next(0, 300));
        $this->assertEquals('0011111111100101101111111111101101100011101010110111111111110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.679685301463904');
        $this->assertEquals('0011111110111101111000100000110110101010001110111100010000011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.116730550824073');
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals('0011111111101100110000111011001000100001101110011000011101100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.89888865076885');
        $this->assertEquals('0011111111101101101010010001100101010011111110110101001000110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.926891960169604');
        $this->assertEquals('0011111111100001001101010011100100001101011000100110101001110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.537746931210974');
        $this->assertEquals('0011111111000000100000010011101101001000001000010000001001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.128943834513865');
        $this->assertEquals(275, $r->Next(0, 300));
        $this->assertEquals(37, $r->Next(0, 300));
        $this->assertEquals('0011111110111000100011000000110111111000001100010001100000011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0958870631157826');
        $this->assertEquals('0011111111010110001000111101010000100101001011000100011110101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.345936809827544');
        $this->assertEquals(105, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111111101000011111111101010011101100011100001111111110101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.765604459571468');
        $this->assertEquals('0011111111101000110100010110011001101100011100011010001011001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.775561534695123');
        $this->assertEquals(263, $r->Next(0, 300));
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals('0011111111100011100100011100000011001101101001110010001110000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.611542131105225');
        $this->assertEquals('0011111111000111011100101010111011110010001011101110010101011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.183187359097967');
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals(287, $r->Next(0, 300));
        $this->assertEquals('0011111111100101000011110000111110111000111010100001111000011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.658088551675011');
        $this->assertEquals('0011111111101000011100010110010101001110011100001110001011001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.763842251973153');
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals(94, $r->Next(0, 300));
        $this->assertEquals('0011111110010001000000110001001010110000001000100000011000100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0166132850649828');
        $this->assertEquals('0011111110111100000111011011001110000110001110000011101101100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.109828205364676');
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals(249, $r->Next(0, 300));
        $this->assertEquals('0011111111101010101000101101100010111111101101010100010110110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.832378744535324');
        $this->assertEquals('0011111111100110100000010000111110111000001011010000001000011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.703254565924059');
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals('0011111111011110000111011000111110110111101111000011101100011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.470554284504873');
        $this->assertEquals('0011111111100001000010110110101110001010101000100001011011010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.532644053237813');
        $this->assertEquals(20, $r->Next(0, 300));
        $this->assertEquals(116, $r->Next(0, 300));
        $this->assertEquals('0011111110011000100101110101011000111000001100010010111010101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0240148040577838');
        $this->assertEquals('0011111110100001110100101111011000000100001000111010010111101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0348126297047421');
        $this->assertEquals(99, $r->Next(0, 300));
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010101100110110110100111011110101010110011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.916800334079564');
        $this->assertEquals('0011111111100000100001111101011111110111111000010000111110110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.516582473887402');
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111011110011001001000100110001110001111001100100100010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.474886311439279');
        $this->assertEquals('0011111111000011000110110110010010000000001001100011011011001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.149273455212486');
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals('0011111111100010101101001111001001010110001001010110100111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.584588211301988');
        $this->assertEquals('0011111111100111110111010000111110001010101011111011101000011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.745734949943486');
        $this->assertEquals(44, $r->Next(0, 300));
        $this->assertEquals(207, $r->Next(0, 300));
        $this->assertEquals('0011111111100001111000001011000100001010001000111100000101100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.558678169063608');
        $this->assertEquals('0011111111100111000110010010110001111011101011100011001001011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.721822969020262');
        $this->assertEquals(137, $r->Next(0, 300));
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals('0011111111011100010001101000010111101110101110001000110100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.441804392934686');
        $this->assertEquals('0011111111100010101001110101000000010000111001010100111010100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.582923920630908');
        $this->assertEquals(273, $r->Next(0, 300));
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals('0011111111010110010000011111100111000001001011001000001111110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.347776831289649');
        $this->assertEquals('0011111110110110000011010101100011101000001011000001101010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0861411635233747');
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals(117, $r->Next(0, 300));
        $this->assertEquals('0011111110111011001011001100101001001010001101100101100110010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.106152194135893');
        $this->assertEquals('0011111110110100100010001101110011110110001010010001000110111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0802133656480412');
        $this->assertEquals(51, $r->Next(0, 300));
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals('0011111111100110101010100101111010010101101011010101010010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.708297054613147');
        $this->assertEquals('0011111111011111011010011011001001010100101111101101001101100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.490826208838646');
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals(173, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001101001011001010000101101101100110100101100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.850182782323185');
        $this->assertEquals('0011111111100001111101100111000101000011101000111110110011100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.561333305463816');
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals('0011111110111101110001010100101100111010001110111000101010010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.116291715352001');
        $this->assertEquals('0011111111011000111110010110011101110000101100011111001011001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.390222415975399');
        $this->assertEquals(252, $r->Next(0, 300));
        $this->assertEquals(260, $r->Next(0, 300));
        $this->assertEquals('0011111111010000111011001100011010000110001000011101100110001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.264451628674032');
        $this->assertEquals('0011111111101100001000110001101001101100111110000100011000110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.879285061675722');
        $this->assertEquals('0011111111001111100010001000001000100111001111110001000100000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.246353406108149');
        $this->assertEquals('0011111110110110001011100100100110101000001011000101110010010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0866437945918384');
        $this->assertEquals(166, $r->Next(0, 300));
        $this->assertEquals(164, $r->Next(0, 300));
        $this->assertEquals('0011111111100110110101110101101110101111001011011010111010110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.713788835664181');
        $this->assertEquals('0011111111100111111101011001101101100000001011111110101100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.748731315484611');
        $this->assertEquals(22, $r->Next(0, 300));
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals('0011111111101110010000000100011100011100111111001000000010001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.945346409429492');
        $this->assertEquals('0011111111011100001110101101010101000001101110000111010110101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.441090883426876');
        $this->assertEquals(37, $r->Next(0, 300));
        $this->assertEquals(271, $r->Next(0, 300));
        $this->assertEquals('0011111111101011001001000110011111001110001101100100100011010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.848194029577167');
        $this->assertEquals('0011111111101010100101001100001010001010011101010010100110000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.830659170556189');
        $this->assertEquals('0011111111001100100010001000001101010011001110010001000100000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.222916045795621');
        $this->assertEquals('0011111111010000010100001001001111000000101000001010000100101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.254918039429429');
        $this->assertEquals(154, $r->Next(0, 300));
        $this->assertEquals(118, $r->Next(0, 300));
        $this->assertEquals('0011111111101111010100110000010110011000011111101010011000001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.978884504166844');
        $this->assertEquals('0011111111100011100110001110100111001011111001110011000111010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.612416170356989');
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals(28, $r->Next(0, 300));
        $this->assertEquals('0011111111101101000011010000011001110110011110100001101000001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.907839995765984');
        $this->assertEquals('0011111111100010010001111111011010101111001001001000111111101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.571284620357344');
        $this->assertEquals(252, $r->Next(0, 300));
        $this->assertEquals(299, $r->Next(0, 300));
        $this->assertEquals('0011111111100101110010001100101100111011001010111001000110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.680760970656183');
        $this->assertEquals('0011111111010100010010111111010001110110101010001001011111101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.317135921361454');
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals('0011111111100111101111010011001011000111001011110111101001100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.741845501932244');
        $this->assertEquals('0011111110100101111111000001010010010000001010111111100000101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0429388452521241');
        $this->assertEquals(49, $r->Next(0, 300));
        $this->assertEquals(140, $r->Next(0, 300));
        $this->assertEquals('0011111111101010110111111000101010010011001101011011111100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.839787757415226');
        $this->assertEquals('0011111111001010011111111011011110111000001101001111111101101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.207022633499942');
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals(167, $r->Next(0, 300));
        $this->assertEquals('0011111111010111011100110111111111011111001011101110011100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.36642452998386');
        $this->assertEquals('0011111111011010111111000111000001001110101101011111100011100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.421657635561031');
        $this->assertEquals(47, $r->Next(0, 300));
        $this->assertEquals(288, $r->Next(0, 300));
        $this->assertEquals('0011111111100001011101001001001000001101011000101110100100100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.545479799409155');
        $this->assertEquals('0011111111011001011001010011110011100110101100101100101001111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.396804070750626');
        $this->assertEquals(135, $r->Next(0, 300));
        $this->assertEquals(283, $r->Next(0, 300));
        $this->assertEquals('0011111111100110110100100000100101110101011011011010010000010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.713139275886649');
        $this->assertEquals('0011111111001010111011100111101011011000001101011101110011110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.21040282780789');
        $this->assertEquals(275, $r->Next(0, 300));
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals('0011111111101100000000000011111011000010001110000000000001111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.875029925664435');
        $this->assertEquals('0011111111011100100100011110100001000010101110010010001111010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.446405472907427');
        $this->assertEquals(266, $r->Next(0, 300));
        $this->assertEquals(195, $r->Next(0, 300));
        $this->assertEquals('0011111111100101111100010100000101111110001010111110001010000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.685700174740376');
        $this->assertEquals('0011111111000011100010000001110101111000001001110001000000111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.152591403644807');
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals(295, $r->Next(0, 300));
        $this->assertEquals('0011111111100110100100010100001010011000101011010010001010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.705231950946726');
        $this->assertEquals('0011111111100110111011010001101111101000101011011101101000111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.716443972064389');
        $this->assertEquals(20, $r->Next(0, 300));
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals('0011111111100001010011010110111010111001011000101001101011011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.5407022114567');
        $this->assertEquals('0011111111101100100110011011011111011101111110010011001101110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.893764432470205');
        $this->assertEquals('0011111111100110011000000011011111011001101011001100000001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.699245381494633');
        $this->assertEquals('0011111110110100111000110110101011000110001010011100011011010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0815951093479968');
        $this->assertEquals(222, $r->Next(0, 300));
        $this->assertEquals(113, $r->Next(0, 300));
        $this->assertEquals('0011111111101111101101010011011111110111001111110110101001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.990871413140964');
        $this->assertEquals('0011111110010000010001100101110011011000001000001000110010111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0158934122956793');
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111110011100111011010010011100011000001110011101101001001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0282484158073777');
        $this->assertEquals('0011111111100001110101001100110101110001001000111010100110011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.557226868605813');
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals('0011111111100001100010111000011100011110011000110001011100001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.548282203054187');
        $this->assertEquals('0011111111100000010110100110100000000011001000001011010011010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.511035925015358');
        $this->assertEquals(35, $r->Next(0, 300));
        $this->assertEquals(269, $r->Next(0, 300));
        $this->assertEquals('0011111111010010001100000110110010100010001001000110000011011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.284205587713144');
        $this->assertEquals('0011111111011110000110100101100100001010001111000011010010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.470358142848293');
        $this->assertEquals(119, $r->Next(0, 300));
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals('0011111111000110100110010100000111110011001011010011001010000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.176552051294852');
        $this->assertEquals('0011111111010010111010000111110101001011101001011101000011111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.295440029024817');
        $this->assertEquals(46, $r->Next(0, 300));
        $this->assertEquals(153, $r->Next(0, 300));
        $this->assertEquals('0011111111101001000011001010000011110101011100100001100101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.782791594873551');
        $this->assertEquals('0011111111100101111111011000001100110101001010111111101100000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.687196353770418');
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals('0011111111101011010011111110011001000010011101101001111111001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.853503351031571');
        $this->assertEquals('0011111111100100110011001010010000000110111010011001100101001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.649980557919471');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals('0011111111011010111111100001001010001111101101011111110000100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.421757355063109');
        $this->assertEquals('0011111111100100110110101101101000101111011010011011010110110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.65171536693895');
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111001010000010111001001010101011001101000001011100100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.203478177638481');
        $this->assertEquals('0011111111010101010101110000100000110101101010101010111000010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.333437015923409');
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals('0011111111011100011010000000000000100011101110001101000000000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.443847689518634');
        $this->assertEquals('0011111111101101011001001111001010100111001110101100100111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.918572737331769');
        $this->assertEquals('0011111111011010110000110001010111010001001101011000011000101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.418157057100049');
        $this->assertEquals('0011111111010101001100101101100011010111101010100110010110110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.331228457079841');
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals('0011111111100011010101101000000000111111101001101010110100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.60430920059062');
        $this->assertEquals('0011111111100101010111100101101010111011011010101011110010110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.667767873810496');
        $this->assertEquals(259, $r->Next(0, 300));
        $this->assertEquals(242, $r->Next(0, 300));
        $this->assertEquals('0011111111011011101010011100101100101111001101110101001110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.432238384351245');
        $this->assertEquals('0011111111100011000111111010001110011111111001100011111101000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.597612201980135');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals('0011111111100110111100110110011101100001001011011110011011001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.717212381175352');
        $this->assertEquals('0011111111011001110101111111001001100111101100111010111111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.403805352469816');
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals('0011111111100011000110011110010001100101001001100011001111001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.596910665089689');
        $this->assertEquals('0011111111010011011011110110100110000100001001101101111011010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.303675059370545');
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals(169, $r->Next(0, 300));
        $this->assertEquals('0011111110111010010110110010111011000100001101001011011001011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.102953837301095');
        $this->assertEquals('0011111111011000001101011000101001100011101100000110101100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.378267857887907');
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals('0011111111101001111001100101011110100101101100111100110010101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.809367965352427');
        $this->assertEquals('0011111111101100101100001010110011101110111110010110000101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.896566836115237');
        $this->assertEquals('0011111111101010000010000000000101101001011101000001000000000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.813477235759365');
        $this->assertEquals('0011111111100111111100111001111001110000101011111110011100111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.748488636104618');
        $this->assertEquals(208, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111010000000011011000101110001100101000000001101100010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.250826728181367');
        $this->assertEquals('0011111111011111101110111111111010010011001111110111011111111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.495849269673158');
        $this->assertEquals(269, $r->Next(0, 300));
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals('0011111111101100000100101011001110111101001110000010010101100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.877282971924768');
        $this->assertEquals('0011111111101010010110000001101100000000001101001011000000110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.82325506248663');
        $this->assertEquals('0011111111010100000001011100110011000111001010000000101110011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.312853998650263');
        $this->assertEquals('0011111111010101000000011000000011001001101010100000001100000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.328216740548712');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals('0011111111101111101000100101110001110101101111110100010010111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.988569478964698');
        $this->assertEquals('0011111110100111001110010101100100111100001011100111001010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0453594099010152');
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals(226, $r->Next(0, 300));
        $this->assertEquals('0011111110100110011010010100011111001100001011001101001010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0437719761597793');
        $this->assertEquals('0011111111001100110001101100101110001010001110011000110110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.224816744320475');
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals(88, $r->Next(0, 300));
        $this->assertEquals('0011111111011100011000100001111100001100001110001100010000111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.443488847670839');
        $this->assertEquals('0011111111101111001001010011001101001100011111100100101001100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.973291062737485');
        $this->assertEquals('0011111111100111100100011001111110110101101011110010001100111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.736526350833721');
        $this->assertEquals('0011111111101101010011101011000111111100101110101001110101100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.915856355296381');
        $this->assertEquals('0011111111101101010001111101110001001110001110101000111110111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.915022042074717');
        $this->assertEquals('0011111111101100001001101111101000011011011110000100110111110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.8797579323313');
        $this->assertEquals('0011111111101010000110011000110011001110101101000011001100011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.815618900030674');
        $this->assertEquals('0011111110100100011011000101101101101100001010001101100010110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0398891992121419');
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals(44, $r->Next(0, 300));
        $this->assertEquals('0011111111100100101001011000100011101010111010010100101100010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.645206888972412');
        $this->assertEquals('0011111111100110101001011101001101010000101011010100101110100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.707742364475384');
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals(34, $r->Next(0, 300));
        $this->assertEquals('0011111110111101010100100001101101111100001110101010010000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.114534108952868');
        $this->assertEquals('0011111111011110110100000110011011000010101111011010000011001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.481469812561511');
        $this->assertEquals(104, $r->Next(0, 300));
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals('0011111111010011000000100111110001000110001001100000010011111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.297026699547203');
        $this->assertEquals('0011111111011101011001000001001100010111001110101100100000100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.459233067212269');
        $this->assertEquals(157, $r->Next(0, 300));
        $this->assertEquals(31, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010110101100101011111010101110101011010110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.917333116250733');
        $this->assertEquals('0011111111010001001100100100100000000000101000100110010010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.268693924540977');
        $this->assertEquals(66, $r->Next(0, 300));
        $this->assertEquals(188, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011010101010100110000000101001001101010101010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.575520278222636');
        $this->assertEquals('0011111110101101011111010000010001001100001110101111101000001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0575944274000798');
        $this->assertEquals(48, $r->Next(0, 300));
        $this->assertEquals(134, $r->Next(0, 300));
        $this->assertEquals('0011111101111111000110100111110110000000001111100011010011111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00759362243469508');
        $this->assertEquals('0011111111100010101101001010010011000011001001010110100101001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.584551221031952');
        $this->assertEquals(288, $r->Next(0, 300));
        $this->assertEquals(155, $r->Next(0, 300));
        $this->assertEquals('0011111111010011100001010001110111010101001001110000101000111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.304999788433779');
        $this->assertEquals('0011111111100111000011001101100111110010101011100001100110110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.720318769440203');
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111100010100101100010001011111011011001010010110001000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.580827227598441');
        $this->assertEquals('0011111110010100101000111100010011011000001010010100011110001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0201559788641315');
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals(251, $r->Next(0, 300));
        $this->assertEquals('0011111111100110010000100001010000000011001011001000010000101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.695566183279998');
        $this->assertEquals('0011111111000101001100111100000101110010001010100110011110000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.165641957039778');
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001100100111011100100010001000000110010011101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.50616032281246');
        $this->assertEquals('0011111111101011111010001111110111011101011101111101000111111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.87219136481741');
        $this->assertEquals('0011111111101101110010010101001000100100001110111001001010100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.930825300948147');
        $this->assertEquals('0011111111100111100011111000101100001101111011110001111100010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.736272361006715');
        $this->assertEquals(122, $r->Next(0, 300));
        $this->assertEquals(54, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101100000111010010111111011110110110000011101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.927790044773272');
        $this->assertEquals('0011111111011110011010101101001010000101001111001101010110100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.475269918551329');
        $this->assertEquals(230, $r->Next(0, 300));
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals('0011111110101100101001101000010100011100001110010100110100001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0559579464867515');
        $this->assertEquals('0011111111011101111100001111011101101010101110111110000111101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.467832426292744');
        $this->assertEquals(208, $r->Next(0, 300));
        $this->assertEquals(86, $r->Next(0, 300));
        $this->assertEquals('0011111111010011011110001010000100110101101001101111000101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.304237654108665');
        $this->assertEquals('0011111111101000010000011011110010001001111100001000001101111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.758024472630594');
        $this->assertEquals(263, $r->Next(0, 300));
        $this->assertEquals(204, $r->Next(0, 300));
        $this->assertEquals('0011111111000001110111110000010000110000001000111011111000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.13961841917579');
        $this->assertEquals('0011111110101111000011100100001001111100001111100001110010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.06065566794046');
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111101001111101101100111110101101101100111110110110011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.811378325713509');
        $this->assertEquals('0011111111011001001110101101001011111001101100100111010110100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.394215339512665');
        $this->assertEquals(80, $r->Next(0, 300));
        $this->assertEquals(3, $r->Next(0, 300));
        $this->assertEquals('0011111111010010000001100111001101111101101001000000110011100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.28164374608623');
        $this->assertEquals('0011111111010001101110000011111111111000101000110111000010000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.276870720683071');
        $this->assertEquals(5, $r->Next(0, 300));
        $this->assertEquals(206, $r->Next(0, 300));
        $this->assertEquals('0011111111011010001000010110110111010010101101000100001011011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.408290344014899');
        $this->assertEquals('0011111111101000000011011101101010011110001100000001101110110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.751691159210955');
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111110111110111111100000000100001000001111011111110000000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.121063293945539');
        $this->assertEquals('0011111111100110100000011010101110100011001011010000001101010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.703328913405225');
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals(127, $r->Next(0, 300));
        $this->assertEquals('0011111110100011100010111010100000111000001001110001011101010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0381748741670395');
        $this->assertEquals('0011111111101010011100001111110100111000011101001110000111111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.826292619959587');
        $this->assertEquals('0011111111100101000001000011000000000011101010100000100001100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.65676117625868');
        $this->assertEquals('0011111111011111001001111010000110111100001111100100111101000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.48679393180031');
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals('0011111111100101010000100111000110100000111010101000010011100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.664360822953452');
        $this->assertEquals('0011111111100111111000101001011011001011001011111100010100101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.74640979466327');
        $this->assertEquals(191, $r->Next(0, 300));
        $this->assertEquals(87, $r->Next(0, 300));
        $this->assertEquals('0011111111100110111010001100110110001011111011011101000110011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.715918324755467');
        $this->assertEquals('0011111111100101111001100001010001111100111010111100110000101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.684335941301815');
        $this->assertEquals(287, $r->Next(0, 300));
        $this->assertEquals(4, $r->Next(0, 300));
        $this->assertEquals('0011111110011010101001011110101000010000001101010100101111010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0260235378639882');
        $this->assertEquals('0011111111100011111010100101001101010010001001111101010010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.622354183635839');
        $this->assertEquals(188, $r->Next(0, 300));
        $this->assertEquals(51, $r->Next(0, 300));
        $this->assertEquals('0011111110101111001000101110001011111100001111100100010111000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0608130391039015');
        $this->assertEquals('0011111111100001001010111110100010100111011000100101011111010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.536609961435483');
        $this->assertEquals(140, $r->Next(0, 300));
        $this->assertEquals(119, $r->Next(0, 300));
        $this->assertEquals('0011111111101100110010011111111000000011101110011001001111111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.899657256388877');
        $this->assertEquals('0011111111100100110101000101010011000011001010011010100010101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.650919324090201');
        $this->assertEquals(137, $r->Next(0, 300));
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals('0011111111101101110011011000110110110000001110111001101100011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.931341976361043');
        $this->assertEquals('0011111111010011011110010001101101100111001001101111001000110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.304266787275796');
        $this->assertEquals(264, $r->Next(0, 300));
        $this->assertEquals(254, $r->Next(0, 300));
        $this->assertEquals('0011111111000101010101111001001110101000001010101010111100100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.166735131371177');
        $this->assertEquals('0011111111100011001110101010010011110111101001100111010101001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.60090874070344');
        $this->assertEquals(189, $r->Next(0, 300));
        $this->assertEquals(136, $r->Next(0, 300));
        $this->assertEquals('0011111111100100100010111010101101101101001010010001011101010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.642049515918852');
        $this->assertEquals('0011111111010100000011011000011110100111001010000001101100001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.313325799216202');
        $this->assertEquals(121, $r->Next(0, 300));
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals('0011111111100010101000000101100100111001111001010100000010110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.582073796345887');
        $this->assertEquals('0011111111101011000100101000010101011100101101100010010100001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.846010857655672');
        $this->assertEquals('0011111111100111010110101111011111011011111011101011010111110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.729854516559213');
        $this->assertEquals('0011111111100000101010101000101000010101101000010101010100010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.520817796942227');
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals('0011111111100001111100110101001001110000011000111110011010100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.560952395927604');
        $this->assertEquals('0011111111010101010010000100100000001111101010101001000010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.332536711978045');
        $this->assertEquals(219, $r->Next(0, 300));
        $this->assertEquals(117, $r->Next(0, 300));
        $this->assertEquals('0011111111100111001110001010101101001101101011100111000101010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.725667621346967');
        $this->assertEquals('0011111111101110110100111001100100110100001111011010011100110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.963329889328838');
        $this->assertEquals('0011111111001011101010111010111011001011001101110101011101011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.216176842905663');
        $this->assertEquals('0011111111101110011000100000111001001101001111001100010000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.949469710211023');
        $this->assertEquals('0011111111100100100011110111110101110011011010010001111011111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.642515874301324');
        $this->assertEquals('0011111111100010111000101001010101111001001001011100010100101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.59015916501645');
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101001101111111100110100101110110100110111111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.92663536357071');
        $this->assertEquals('0011111101110111111011011010000001000000001011111101101101000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00584185216847893');
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals(202, $r->Next(0, 300));
        $this->assertEquals('0011111110100001011010111100101000001100001000101101011110010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0340254916967943');
        $this->assertEquals('0011111111010111000010111100011111011010101011100001011110010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.360094035677656');
        $this->assertEquals(259, $r->Next(0, 300));
        $this->assertEquals(237, $r->Next(0, 300));
        $this->assertEquals('0011111111000000001010100110010000011001001000000101010011001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.126293670910547');
        $this->assertEquals('0011111110111101011100010100010010100010001110101110001010001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.115009584052027');
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals(150, $r->Next(0, 300));
        $this->assertEquals('0011111111010111111001000000010101001010101011111100100000001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.373292277275255');
        $this->assertEquals('0011111111100110110011100110101101111100111011011001110011010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.712697738647786');
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111100010110111010101100010011001111001011011101010110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.58951978738863');
        $this->assertEquals('0011111111001011011111101010001101001100001101101111110101000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.21480218144823');
        $this->assertEquals(242, $r->Next(0, 300));
        $this->assertEquals(284, $r->Next(0, 300));
        $this->assertEquals('0011111110011010001011001100000001001000001101000101100110000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0255613369054912');
        $this->assertEquals('0011111111101101001001110100001000110101001110100100111010000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.911042312584371');
        $this->assertEquals('0011111110110111000010000001001010010110001011100001000000100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0899669281625966');
        $this->assertEquals('0011111111000000000111000011001011011000001000000011100001100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.125860553293424');
        $this->assertEquals(104, $r->Next(0, 300));
        $this->assertEquals(161, $r->Next(0, 300));
        $this->assertEquals('0011111111100010100000111110001001100101111001010000011111000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.578599165928829');
        $this->assertEquals('0011111111101101011001101111010111111010101110101100110111101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.918818463999228');
        $this->assertEquals('0011111111100100010000111001001001010101101010001000011100100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.633248488713637');
        $this->assertEquals('0011111111001011110011110101101001110011001101111001111010110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.217265421160155');
        $this->assertEquals(287, $r->Next(0, 300));
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals('0011111111011111111111100110001101110000001111111111110011000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.499901637667744');
        $this->assertEquals('0011111101010110000110101100010100000000001011000011010110001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00134915579173209');
        $this->assertEquals(116, $r->Next(0, 300));
        $this->assertEquals(119, $r->Next(0, 300));
        $this->assertEquals('0011111111001101100000001010000011000110001110110000000101000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.230487915794592');
        $this->assertEquals('0011111111101101000010111011110110100100011110100001011101111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.907683202022539');
        $this->assertEquals('0011111111101001111110111100100010111011111100111111011110010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.811985365958877');
        $this->assertEquals('0011111111010111101010100010011111011101001011110101010001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.369760480881557');
        $this->assertEquals(196, $r->Next(0, 300));
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals('0011111111101011100110000010001011001000001101110011000001000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.862321272893958');
        $this->assertEquals('0011111111011100100010100101001110111000001110010001010010100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.445942811875577');
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals(68, $r->Next(0, 300));
        $this->assertEquals('0011111110010100001000001100011000110000001010000100000110001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0196562735455373');
        $this->assertEquals('0011111110001010100011111111010000110000001101010001111111101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0129698826991813');
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111010111000010010110101101100110101011100001001011010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.359949922822393');
        $this->assertEquals('0011111111011011010111111010100101000000101101101011111101010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.427713692853094');
        $this->assertEquals(235, $r->Next(0, 300));
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals('0011111111100011101011110011100000001000011001110101111001110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.615139023221628');
        $this->assertEquals('0011111110001111111011110011111111100000001111111101111010000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0155930509863389');
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals('0011111111010100111100111110011011101000101010011110011111001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.327386595926893');
        $this->assertEquals('0011111111011111101110000110111110001110101111110111000011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.495632066156544');
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals(283, $r->Next(0, 300));
        $this->assertEquals('0011111111000100001000000000110011101101001010000100000000011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.157228103446415');
        $this->assertEquals('0011111111101101000101101100001001101001011110100010110110000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.909028249750393');
        $this->assertEquals('0011111111000100000011000000010001000000001010000001100000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.156616717649911');
        $this->assertEquals('0011111110001000100010110100100011010000001100010001011010010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0119844139609413');
        $this->assertEquals(0, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111010100110111010100110110111100001010011011101010011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.326007303002294');
        $this->assertEquals('0011111111101010010000001100011001001010011101001000000110001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.820407052440758');
        $this->assertEquals('0011111111000001111011101001011111000110001000111101110100110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.140093776462643');
        $this->assertEquals('0011111111100101110100011001101011110101011010111010001100110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.681836585366091');
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals(131, $r->Next(0, 300));
        $this->assertEquals('0011111111010010101010101011101100111100001001010101010101110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.291670616851966');
        $this->assertEquals('0011111111011100011011001000101000111001001110001101100100010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.444124751931114');
        $this->assertEquals(14, $r->Next(0, 300));
        $this->assertEquals(193, $r->Next(0, 300));
        $this->assertEquals('0011111111101011000101011011111011000001101101100010101101111110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.846404436438533');
        $this->assertEquals('0011111110111110011010110101110010101110001111001101011010111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.118825714624871');
        $this->assertEquals(155, $r->Next(0, 300));
        $this->assertEquals(169, $r->Next(0, 300));
        $this->assertEquals('0011111111000110010000111110111111010010001011001000011111100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.173948266624449');
        $this->assertEquals('0011111111101001001101000111010011000101111100100110100011101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.78765333806521');
        $this->assertEquals(257, $r->Next(0, 300));
        $this->assertEquals(159, $r->Next(0, 300));
        $this->assertEquals('0011111111010000011111100000100010000101001000001111110000010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.257692461022033');
        $this->assertEquals('0011111111011111100011000000000010010000001111110001100000000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.492920056214985');
        $this->assertEquals(115, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111011110110110111111111111101011101111011011100000000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.482177715507419');
        $this->assertEquals('0011111111010100111111010010100110001110101010011111101001010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.327951802559175');
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals(94, $r->Next(0, 300));
        $this->assertEquals('0011111111100010110100110001001001100111001001011010011000100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.588265611132731');
        $this->assertEquals('0011111111100110110000010111000011010111111011011000001011100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.711113378271048');
        $this->assertEquals(127, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111010010100001000101000110011000001001010000100010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.289326094225667');
        $this->assertEquals('0011111111010001000111100100000110100010001000100011110010000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.26747170289395');
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals(194, $r->Next(0, 300));
        $this->assertEquals('0011111111100101111110111001100011110010101010111111011100110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.686962579696887');
        $this->assertEquals('0011111111101101100101010011001110111011101110110010101001100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.92446314493402');
        $this->assertEquals('0011111111100110100100110111011110011110001011010010011011101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.705501374185784');
        $this->assertEquals('0011111111100101101100110001101010111101111010110110011000110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.678113337456301');
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals('0011111111100110111000111101001111010001111011011100011110101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.715310964600794');
        $this->assertEquals('0011111111000101111000111100101110101111001010111100011110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.171014271290514');
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals('0011111110101100101111010100101010001000001110010111101010010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0561316767968851');
        $this->assertEquals('0011111111001010101100100001111101111010001101010110010000111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.208560881302022');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals('0011111111101000101100000001010110101100111100010110000000101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.771494710711527');
        $this->assertEquals('0011111111010111101001110001110011101010101011110100111000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.369574765381205');
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals('0011111111101000001000110010100011100000101100000100011001010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.754291952938909');
        $this->assertEquals('0011111111100000010100101011100111010010011000001010010101110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.510098372357943');
        $this->assertEquals(295, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111111010101101001011000110010101001001010110100101100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.33822933693334');
        $this->assertEquals('0011111111101001111111010001000100101010001100111111101000100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.812141973903469');
        $this->assertEquals('0011111110111001111111101000011000101010001100111111110100001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.101539979270445');
        $this->assertEquals('0011111110110110001000100111100100010100001011000100010011110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0864635156870184');
        $this->assertEquals(254, $r->Next(0, 300));
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals('0011111110010100011001001110111001001000001010001100100111011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0199162704031525');
        $this->assertEquals('0011111110111000011011011111100001110010001100001101101111110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0954280165468473');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(173, $r->Next(0, 300));
        $this->assertEquals('0011111111101100100110001110100100100100111110010011000111010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.893665859426216');
        $this->assertEquals('0011111111101011110111110110110110111001001101111011111011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.871023999932699');
        $this->assertEquals('0011111111101100000111100000100110100010011110000011110000010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.87866670353276');
        $this->assertEquals('0011111111001111111011110010000011100011001111111101111001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.249485121690428');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001011110101111001011010101000000101111010111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.50578229618528');
        $this->assertEquals('0011111111101101001010010011110001110001101110100101001001111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.911283704876566');
        $this->assertEquals('0011111111101000111000100010110001110110001100011100010001011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.777609091614191');
        $this->assertEquals('0011111111001011100010111000100110111001001101110001011100010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.21519586127959');
        $this->assertEquals(121, $r->Next(0, 300));
        $this->assertEquals(63, $r->Next(0, 300));
        $this->assertEquals('0011111111010001011001011000000000111101101000101100101100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.271820125762289');
        $this->assertEquals('0011111111010111110010101000010010100011001011111001010100001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.371735724793624');
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals(111, $r->Next(0, 300));
        $this->assertEquals('0011111111101110000100010101101100101010111111000010001010110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.939618667559521');
        $this->assertEquals('0011111110101011111110001111001101010000001101111111000111100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0546337161467568');
        $this->assertEquals(270, $r->Next(0, 300));
        $this->assertEquals(199, $r->Next(0, 300));
        $this->assertEquals('0011111111100000011010111111011111110000011000001101011111110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.513179749955041');
        $this->assertEquals('0011111111100110111000011100100010011110011011011100001110010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.715061482840712');
        $this->assertEquals(198, $r->Next(0, 300));
        $this->assertEquals(219, $r->Next(0, 300));
        $this->assertEquals('0011111111100010110000100110110101100111001001011000010011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.586233808000681');
        $this->assertEquals('0011111111101100100101100110011001110011111110010010110011001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.893359400282316');
        $this->assertEquals('0011111111100010011100110100100111111000101001001110011010010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.576573358185856');
        $this->assertEquals('0011111111101110000001111010010101100110101111000000111101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.938433361676723');
        $this->assertEquals('0011111111011111110110011111101010110110001111111011001111110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.497679403283484');
        $this->assertEquals('0011111111000001001111111001110000101111001000100111111100111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.134753726019875');
        $this->assertEquals(45, $r->Next(0, 300));
        $this->assertEquals(261, $r->Next(0, 300));
        $this->assertEquals('0011111111101101010110010101000011001100011110101011001010100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.917152785657511');
        $this->assertEquals('0011111111011110100010100110110101101111101111010001010011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.477198943252302');
        $this->assertEquals(94, $r->Next(0, 300));
        $this->assertEquals(31, $r->Next(0, 300));
        $this->assertEquals('0011111111010101100101001010101010011111101010110010100101010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.337198882986418');
        $this->assertEquals('0011111111100000101101000100110101110100001000010110100010011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.522009589021099');
        $this->assertEquals(86, $r->Next(0, 300));
        $this->assertEquals(261, $r->Next(0, 300));
        $this->assertEquals('0011111110111110110000100111111010001100001111011000010011111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.120155247915608');
        $this->assertEquals('0011111111101010111110011110110001101110111101011111001111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.843008248062343');
        $this->assertEquals('0011111111100111011100001000110101011100001011101110000100011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.732489280743752');
        $this->assertEquals('0011111111101000101010000011110101111010011100010101000001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.770537127633829');
        $this->assertEquals(165, $r->Next(0, 300));
        $this->assertEquals(38, $r->Next(0, 300));
        $this->assertEquals('0011111111100001010010100101000100001011011000101001010010100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.540321848141179');
        $this->assertEquals('0011111111100111010110101000111001110011101011101011010100011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.729804254476821');
        $this->assertEquals(224, $r->Next(0, 300));
        $this->assertEquals(142, $r->Next(0, 300));
        $this->assertEquals('0011111111100100100000101001000110011011001010010000010100100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.640938571021398');
        $this->assertEquals('0011111111101110111000111001100000111101001111011100011100110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.965282554256396');
        $this->assertEquals('0011111111001000110100000000000010111110001100011010000000000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.193847744815912');
        $this->assertEquals('0011111111100110000111110011010100001010101011000011111001101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.691309471936575');
        $this->assertEquals(19, $r->Next(0, 300));
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals('0011111111001010110000011111001011001101001101011000001111100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.209043836784104');
        $this->assertEquals('0011111111000010110001000011111110111010001001011000100001111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.146614042179014');
        $this->assertEquals(198, $r->Next(0, 300));
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals('0011111111100011010010001011110000110010111001101001000101111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.602628802695604');
        $this->assertEquals('0011111111100010001001111011100011110011111001000100111101110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.567348934508557');
        $this->assertEquals(124, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111110110000011010001011011110100110001000001101000101101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0640978603922286');
        $this->assertEquals('0011111111100001000011001000101110001000101000100001100100010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.532781378614149');
        $this->assertEquals(87, $r->Next(0, 300));
        $this->assertEquals(238, $r->Next(0, 300));
        $this->assertEquals('0011111110101101000110100011100110000000001110100011010001110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0568407029178183');
        $this->assertEquals('0011111111001101111001100011000110111011001110111100110001100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.233587471411371');
        $this->assertEquals(10, $r->Next(0, 300));
        $this->assertEquals(125, $r->Next(0, 300));
        $this->assertEquals('0011111111101000100011001111110111100111011100010001100111111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.767210914644977');
        $this->assertEquals('0011111110011101110001000111000101001000001110111000100011100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0290696811997656');
        $this->assertEquals(162, $r->Next(0, 300));
        $this->assertEquals(201, $r->Next(0, 300));
        $this->assertEquals('0011111111101111011100010011101101000010001111101110001001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.98257220209696');
        $this->assertEquals('0011111111101100100001101011001110001011011110010000110101100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.891443035514766');
        $this->assertEquals('0011111111000111001101110001001000001000001011100110111000100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.181368116373833');
        $this->assertEquals('0011111111011101010101010100110100100010101110101010101010011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.458331378855897');
        $this->assertEquals(105, $r->Next(0, 300));
        $this->assertEquals(254, $r->Next(0, 300));
        $this->assertEquals('0011111111001000100000001011100001100101001100010000000101110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.191428231630208');
        $this->assertEquals('0011111110010101110111001100101101001000001010111011100110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0213500750350533');
        $this->assertEquals(148, $r->Next(0, 300));
        $this->assertEquals(55, $r->Next(0, 300));
        $this->assertEquals('0011111111100101101011101101111001010100101010110101110110111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.677596249933167');
        $this->assertEquals('0011111111001100111010000110111100000111001110011101000011011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.225843313720936');
        $this->assertEquals(123, $r->Next(0, 300));
        $this->assertEquals(40, $r->Next(0, 300));
        $this->assertEquals('0011111111101100101100101100111010110010111110010110010110011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.896827077445028');
        $this->assertEquals('0011111111001000011001010001010110000101001100001100101000101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.190584840807405');
        $this->assertEquals(257, $r->Next(0, 300));
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals('0011111111010001010001011011111001000011001000101000101101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.269881787835565');
        $this->assertEquals('0011111111100001101100001001011011011101101000110110000100101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.552806313407052');
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals(26, $r->Next(0, 300));
        $this->assertEquals('0011111111100110100110110010011010000101101011010011011001001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.706439267241601');
        $this->assertEquals('0011111110010010010101010011010100101000001001001010101001101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0179031663657646');
        $this->assertEquals(250, $r->Next(0, 300));
        $this->assertEquals(223, $r->Next(0, 300));
        $this->assertEquals('0011111111100101100010001110101011011011101010110001000111010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.672963551559003');
        $this->assertEquals('0011111111100000011011011110101011011110101000001101101111010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.513417658635144');
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals(66, $r->Next(0, 300));
        $this->assertEquals('0011111111001001010110100110100101010111001100101011010011010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.198071639611419');
        $this->assertEquals('0011111111000101000101110111001010010101001010100010111011100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.164778063616146');
        $this->assertEquals(44, $r->Next(0, 300));
        $this->assertEquals(118, $r->Next(0, 300));
        $this->assertEquals('0011111111001001000101111001010100010001001100100010111100101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.196032174488545');
        $this->assertEquals('0011111111010100010100111001001001001111101010001010011100100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.317600801269338');
        $this->assertEquals(289, $r->Next(0, 300));
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals('0011111111101010101111101000000101001011001101010111110100000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.835755011455973');
        $this->assertEquals('0011111111101000001100000000000010101101111100000110000000000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.755859698986569');
        $this->assertEquals(112, $r->Next(0, 300));
        $this->assertEquals(117, $r->Next(0, 300));
        $this->assertEquals('0011111111000011000100111011111111100111001001100010011110000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.149040210595839');
        $this->assertEquals('0011111111101100000110101110001110111000011110000011010111000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.878282413761263');
        $this->assertEquals('0011111111101011010111011010110100110011111101101011101101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.855185128680982');
        $this->assertEquals('0011111110110001001111001001011110000100001000100111100100101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0673308084101094');
        $this->assertEquals(114, $r->Next(0, 300));
        $this->assertEquals(276, $r->Next(0, 300));
        $this->assertEquals('0011111111010101100011010111101101110111101010110001101011110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.336760393966343');
        $this->assertEquals('0011111111101011000001110001100011000011101101100000111000110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.844616300819729');
        $this->assertEquals('0011111111100001111000100001101100010100011000111100010000110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.558850803207071');
        $this->assertEquals('0011111111100101011001010000001101001101101010101100101000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.668580676740306');
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals(297, $r->Next(0, 300));
        $this->assertEquals('0011111111001110110100010111100010100100001111011010001011110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.240767555423438');
        $this->assertEquals('0011111111101100100100101111001101010000011110010010010111100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.892938286947523');
        $this->assertEquals('0011111111000111101011100011010000010111001011110101110001101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.185003768273165');
        $this->assertEquals('0011111111000100111011000110101101100011001010011101100011010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.163464950008069');
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals(182, $r->Next(0, 300));
        $this->assertEquals('0011111111000110001111110100001010100101001011000111111010000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.173805552150032');
        $this->assertEquals('0011111111100101101100100100001100111010101010110110010010000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.678010572995064');
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals('0011111111101111100110111001100011100110011111110011011100110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.987743807019547');
        $this->assertEquals('0011111111100000011010010000000110101111011000001101001000000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.51281818631702');
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals(4, $r->Next(0, 300));
        $this->assertEquals('0011111111101110000101101001100011101110101111000010110100110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.940258470801757');
        $this->assertEquals('0011111111100010100010010000010110001011001001010001001000001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.57922627617569');
        $this->assertEquals(67, $r->Next(0, 300));
        $this->assertEquals(196, $r->Next(0, 300));
        $this->assertEquals('0011111111010000110100101111001010011101001000011010010111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.262875226448698');
        $this->assertEquals('0011111111100000011100101101111001110011101000001110010110111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.514022088848996');
        $this->assertEquals(53, $r->Next(0, 300));
        $this->assertEquals(11, $r->Next(0, 300));
        $this->assertEquals('0011111111101110000110010101011111110111111111000011001010110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.940593704553597');
        $this->assertEquals('0011111111101010100000000100001011001101001101010000000010000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.828156853480338');
        $this->assertEquals('0011111111000100110100111111000111010101001010011010011111100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.162718037684782');
        $this->assertEquals('0011111111101000100011101000010100110010111100010001110100001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.76739749860363');
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals(225, $r->Next(0, 300));
        $this->assertEquals('0011111111000110100111001011010010001011001011010011100101101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.176657264668801');
        $this->assertEquals('0011111111100011000101101010000000011000001001100010110101000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.596511885801569');
        $this->assertEquals(199, $r->Next(0, 300));
        $this->assertEquals(158, $r->Next(0, 300));
        $this->assertEquals('0011111111011001111101010011000001111001001100111110101001100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.405590170251946');
        $this->assertEquals('0011111111000100001011011101100100101110001010000101101110110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.157649180925288');
        $this->assertEquals(46, $r->Next(0, 300));
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals('0011111111000000111110001111000010001000001000011111000111100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.132597032996173');
        $this->assertEquals('0011111111101001101010000011000010010011101100110101000001100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.801780975797112');
        $this->assertEquals('0011111111100010100110100010010111010010011001010011010001001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.581316862991693');
        $this->assertEquals('0011111111001101001111001100111000011100001110100111100110011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.228418124946029');
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals(209, $r->Next(0, 300));
        $this->assertEquals('0011111111101001111111000010101100111101111100111111100001010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.812032338144273');
        $this->assertEquals('0011111111101100000111010001111001101101011110000011101000111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.878554548080338');
        $this->assertEquals('0011111111101100011111110100101011010001111110001111111010010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.890538606741716');
        $this->assertEquals('0011111111010101111010010101011100001001001010111101001010101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.342366942363962');
        $this->assertEquals(296, $r->Next(0, 300));
        $this->assertEquals(110, $r->Next(0, 300));
        $this->assertEquals('0011111111101111010111101000110001110110001111101011110100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.98029158682576');
        $this->assertEquals('0011111111101000001111011011100000110000101100000111101101110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.757534117790653');
        $this->assertEquals(185, $r->Next(0, 300));
        $this->assertEquals(271, $r->Next(0, 300));
        $this->assertEquals('0011111111011001111101110001001111111110001100111110111000101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.405705450291608');
        $this->assertEquals('0011111111001111011000011001011111010100001111101100001100110000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.245165804515204');
        $this->assertEquals(244, $r->Next(0, 300));
        $this->assertEquals(61, $r->Next(0, 300));
        $this->assertEquals('0011111111101110011110011001101101011000011111001111001100110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.952344582393926');
        $this->assertEquals('0011111111010110110101101001010001110001001011011010110100101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.356846914792828');
        $this->assertEquals(0, $r->Next(0, 300));
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals('0011111111001111010101011111101100111100001111101010101111110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.244811443725979');
        $this->assertEquals('0011111111011010111110000001011001100101001101011111000000101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.421392058218546');
        $this->assertEquals(150, $r->Next(0, 300));
        $this->assertEquals(295, $r->Next(0, 300));
        $this->assertEquals('0011111111100011011001000110100010111100011001101100100011010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.606006973239596');
        $this->assertEquals('0011111111011101010101000000001110111100101110101010100000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.458252844148433');
        $this->assertEquals(32, $r->Next(0, 300));
        $this->assertEquals(276, $r->Next(0, 300));
        $this->assertEquals('0011111111101011100011011011100111100010111101110001101101110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.861050551692513');
        $this->assertEquals('0011111111100100011000111010011011111010111010001100011101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.637164583260736');
        $this->assertEquals(133, $r->Next(0, 300));
        $this->assertEquals(127, $r->Next(0, 300));
        $this->assertEquals('0011111110110010100100001100010001111110001001010010000110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0725214775058075');
        $this->assertEquals('0011111110100001101001000101110001111000001000110100100010111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0344571015026686');
        $this->assertEquals(279, $r->Next(0, 300));
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals('0011111111001100110100001010010101111000001110011010000101001011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.225117381766959');
        $this->assertEquals('0011111110101111110000111001100010101000001111111000011100110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.06203915647326');
        $this->assertEquals(281, $r->Next(0, 300));
        $this->assertEquals(246, $r->Next(0, 300));
        $this->assertEquals('0011111111101000111001000000001111000111111100011100100000001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.77783383418705');
        $this->assertEquals('0011111111101111110110001100110001111110011111111011000110011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.995214697902656');
        $this->assertEquals('0011111111101000101101010011100100000000011100010110101001110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.772121907105726');
        $this->assertEquals('0011111111011010110100101110100111100100001101011010010111010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.419123146878147');
        $this->assertEquals(293, $r->Next(0, 300));
        $this->assertEquals(227, $r->Next(0, 300));
        $this->assertEquals('0011111110111111101100000110100001001000001111110110000011010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.123785512579505');
        $this->assertEquals('0011111111000100100010001100100100011110001010010001000110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.160424365736742');
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals(285, $r->Next(0, 300));
        $this->assertEquals('0011111111010110011100101010110100110110101011001110010101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.350749305147095');
        $this->assertEquals('0011111111101000110100101111000111101001011100011010010111100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.775750118203345');
        $this->assertEquals(240, $r->Next(0, 300));
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals('0011111111101111011110011011010010110111111111101111001101101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.98360668122005');
        $this->assertEquals('0011111111000100100100001001001101001000001010010010000100100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.160662088617991');
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals(248, $r->Next(0, 300));
        $this->assertEquals('0011111111010001011100010110101101100010001000101110001011010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.272547574840741');
        $this->assertEquals('0011111111011011101010101001000111100111001101110101010100100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.432285762593283');
        $this->assertEquals(70, $r->Next(0, 300));
        $this->assertEquals(20, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001100110100100010010011101000000110011010010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.506260193188796');
        $this->assertEquals('0011111111010101111101011100101011110110101010111110101110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.343127003565024');
        $this->assertEquals(93, $r->Next(0, 300));
        $this->assertEquals(58, $r->Next(0, 300));
        $this->assertEquals('0011111111101010101000111100010000100010011101010100011110001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.832490985203763');
        $this->assertEquals('0011111111010111110000101000100001101111001011111000010100010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.37124834878894');
        $this->assertEquals(93, $r->Next(0, 300));
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals('0011111111101111010011111110000000101110111111101001111111000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.978500453745248');
        $this->assertEquals('0011111111101100011111010110000111001101111110001111101011000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.890305425920666');
        $this->assertEquals('0011111111011010110101001010010001111010101101011010100101001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.419228668054207');
        $this->assertEquals('0011111111000111000101110011010111001011001011100010111001101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.180395817002466');
        $this->assertEquals(23, $r->Next(0, 300));
        $this->assertEquals(74, $r->Next(0, 300));
        $this->assertEquals('0011111111100100110001101101001000110010001010011000110110100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.64927015111282');
        $this->assertEquals('0011111110110101000011010000100100101110001010100001101000010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0822301614481165');
        $this->assertEquals(1, $r->Next(0, 300));
        $this->assertEquals(253, $r->Next(0, 300));
        $this->assertEquals('0011111111010101011001111110100110101010101010101100111111010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.334467331568928');
        $this->assertEquals('0011111111101110010011000011011100101011001111001001100001101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.946803650328332');
        $this->assertEquals('0011111111100010011011101010110011011100001001001101110101011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.576010160416369');
        $this->assertEquals('0011111111101101000111011000011100011010001110100011101100001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.909854460931315');
        $this->assertEquals('0011111111010010010101001010000010111111001001001010100101000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.28641527811364');
        $this->assertEquals('0011111111100101011101111101011101111111101010101110111110101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.670879124976173');
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals(104, $r->Next(0, 300));
        $this->assertEquals('0011111110101010000010010001000011111000001101000001001000100010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0508504202826183');
        $this->assertEquals('0011111111101000101011101000100110011100111100010101110100010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.771305853394468');
        $this->assertEquals(84, $r->Next(0, 300));
        $this->assertEquals(119, $r->Next(0, 300));
        $this->assertEquals('0011111111101001010000111000001111011001011100101000011100001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.789491581632519');
        $this->assertEquals('0011111111100000001010111010111100000111101000000101011101011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.505332484145338');
        $this->assertEquals(175, $r->Next(0, 300));
        $this->assertEquals(212, $r->Next(0, 300));
        $this->assertEquals('0011111111011111010010110000011111010101101111101001011000010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.488954504713861');
        $this->assertEquals('0011111111011011011101001010011100001010001101101110100101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.428994903540702');
        $this->assertEquals(32, $r->Next(0, 300));
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals('0011111111101101101010011100011111111011001110110101001110010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.926975241362571');
        $this->assertEquals('0011111111101000000101001100100011010001011100000010100110010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.752537163790566');
        $this->assertEquals(254, $r->Next(0, 300));
        $this->assertEquals(2, $r->Next(0, 300));
        $this->assertEquals('0011111111101111001000000101001010011001101111100100000010100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.97269563701595');
        $this->assertEquals('0011111111011101011101111110100110011010101110101110111111010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.460443879226429');
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111100100101100100001011100100100011010010110010000101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.646739550701687');
        $this->assertEquals('0011111111100111011111010000001001100111011011101111101000000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.734009935396728');
        $this->assertEquals(153, $r->Next(0, 300));
        $this->assertEquals(34, $r->Next(0, 300));
        $this->assertEquals('0011111111101010010011001001000110111010101101001001100100100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.821846832903962');
        $this->assertEquals('0011111111011011010000111011001000100100101101101000011101100100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.426006828167479');
        $this->assertEquals(29, $r->Next(0, 300));
        $this->assertEquals(86, $r->Next(0, 300));
        $this->assertEquals('0011111111011111100101000111001010101001101111110010100011100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.493435540931968');
        $this->assertEquals('0011111111100011000101011100000101111001011001100010101110000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.596405732257481');
        $this->assertEquals(17, $r->Next(0, 300));
        $this->assertEquals(192, $r->Next(0, 300));
        $this->assertEquals('0011111111100010010101111001111000111100111001001010111100111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.573195570881104');
        $this->assertEquals('0011111111011111000010111001000001010100001111100001011100100001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.48508079745112');
        $this->assertEquals(96, $r->Next(0, 300));
        $this->assertEquals(162, $r->Next(0, 300));
        $this->assertEquals('0011111110101010101100110000101011111000001101010110011000010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0521472385396004');
        $this->assertEquals('0011111111100010100111010101010010101000101001010011101010101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.581705407510374');
        $this->assertEquals(30, $r->Next(0, 300));
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals('0011111111100011000010111011111010010011111001100001011101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.595183647980533');
        $this->assertEquals('0011111111010111101011011100111110111000001011110101101110011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.369983606212765');
        $this->assertEquals(228, $r->Next(0, 300));
        $this->assertEquals(66, $r->Next(0, 300));
        $this->assertEquals('0011111111101111001010110001101011111011001111100101011000110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.974011889181105');
        $this->assertEquals('0011111111001100110010111000000100000110001110011001011100000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.22496044925645');
        $this->assertEquals(275, $r->Next(0, 300));
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals('0011111110111001011111011110001101001110001100101111101111000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0995771470943359');
        $this->assertEquals('0011111111100010001000001000001000001000111001000100000100000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.566468255392494');
        $this->assertEquals(281, $r->Next(0, 300));
        $this->assertEquals(247, $r->Next(0, 300));
        $this->assertEquals('0011111111010100000111100110111110100111001010000011110011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.314357674827034');
        $this->assertEquals('0011111101011110111001001110011100000000001111011100100111001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00188562925992796');
        $this->assertEquals(210, $r->Next(0, 300));
        $this->assertEquals(95, $r->Next(0, 300));
        $this->assertEquals('0011111111010000101000100110110111111010001000010100010011011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.259913915889298');
        $this->assertEquals('0011111111000101100001000000100111100011001010110000100000010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.168091998979492');
        $this->assertEquals(172, $r->Next(0, 300));
        $this->assertEquals(109, $r->Next(0, 300));
        $this->assertEquals('0011111111011010000101001011010111010010101101000010100101101100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.407514053120983');
        $this->assertEquals('0011111111010011000000000000011111110000101001100000000000010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.296876893051377');
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals(267, $r->Next(0, 300));
        $this->assertEquals('0011111111010111110100110111110011010010101011111010011011111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.372283178089318');
        $this->assertEquals('0011111111011101111101101101110111000101001110111110110110111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.468192522632048');
        $this->assertEquals(62, $r->Next(0, 300));
        $this->assertEquals(132, $r->Next(0, 300));
        $this->assertEquals('0011111111011011101010000010101101010010101101110101000001010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.432139235284244');
        $this->assertEquals('0011111111010011100010101001100110110000101001110001010100110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.305334494125719');
        $this->assertEquals(287, $r->Next(0, 300));
        $this->assertEquals(117, $r->Next(0, 300));
        $this->assertEquals('0011111111010111000001000010110110110001101011100000100001011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.359630034938282');
        $this->assertEquals('0011111111011100010100111111100011101100101110001010011111110010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.44262526624027');
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals(83, $r->Next(0, 300));
        $this->assertEquals('0011111111101111001001011101010000000001101111100100101110101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.973367694287266');
        $this->assertEquals('0011111111010010101000011010011111100101101001010100001101010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.291116689933053');
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals(179, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001101001100010001101110111000000110100110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.506441322856788');
        $this->assertEquals('0011111111100000100000100010100000011010011000010000010001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.515888263245992');
        $this->assertEquals(56, $r->Next(0, 300));
        $this->assertEquals(278, $r->Next(0, 300));
        $this->assertEquals('0011111111100101000110001000110011111000111010100011000100011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.659246908342115');
        $this->assertEquals('0011111111001101100010001110011000100110001110110001000111001100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.230740326564172');
        $this->assertEquals(97, $r->Next(0, 300));
        $this->assertEquals(171, $r->Next(0, 300));
        $this->assertEquals('0011111111101001000110011110001101010110001100100011001111000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.784410160400164');
        $this->assertEquals('0011111101101101001001001000000000000000001110100100100100000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00355744362043098');
        $this->assertEquals(84, $r->Next(0, 300));
        $this->assertEquals(265, $r->Next(0, 300));
        $this->assertEquals('0011111101111011101011010110111010000000001101110101101011011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.00675719417946283');
        $this->assertEquals('0011111111100111100110000011001100101101011011110011000001100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.737329090823107');
        $this->assertEquals(151, $r->Next(0, 300));
        $this->assertEquals(89, $r->Next(0, 300));
        $this->assertEquals('0011111111000011110110000000111001101000001001111011000000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.15503101430602');
        $this->assertEquals('0011111111101011110001110110101111110100001101111000111011011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.868093468653082');
        $this->assertEquals('0011111111101011001000101100000001000011101101100100010110000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.8479920694828');
        $this->assertEquals('0011111111100000001011111010110000011000101000000101111101011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.505819366549058');
        $this->assertEquals(4, $r->Next(0, 300));
        $this->assertEquals(143, $r->Next(0, 300));
        $this->assertEquals('0011111111000011001011000101100101101010001001100101100010110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.149790932494118');
        $this->assertEquals('0011111111101001011010100110111110010001011100101101010011011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.794242652968617');
        $this->assertEquals(182, $r->Next(0, 300));
        $this->assertEquals(163, $r->Next(0, 300));
        $this->assertEquals('0011111111011101110110001000100101110010101110111011000100010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.466341363948929');
        $this->assertEquals('0011111111101011111001010011101101011101001101111100101001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.871732408586765');
        $this->assertEquals('0011111111101111001111101110110001001001111111100111110111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.976431030769102');
        $this->assertEquals('0011111111011011001000010110101100010111001101100100001011010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.423914692562034');
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals(290, $r->Next(0, 300));
        $this->assertEquals('0011111110011100011100011010001000111000001110001110001101000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0277772280516928');
        $this->assertEquals('0011111111101111010011000100100001010010011111101001100010010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.9780618296834');
        $this->assertEquals('0011111111101011011011001110011001011000001101101101100111001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.857043430608252');
        $this->assertEquals('0011111111101100100010000011001011001110111110010001000001100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.89162578987499');
        $this->assertEquals('0011111110111011101011011010101111011100001101110101101101011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.108118764175157');
        $this->assertEquals('0011111111010010011011100101100111101100001001001101110010110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.287985306367271');
        $this->assertEquals(69, $r->Next(0, 300));
        $this->assertEquals(42, $r->Next(0, 300));
        $this->assertEquals('0011111111000010001111100011110110111001001001000111110001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.142524447824119');
        $this->assertEquals('0011111111100100011000100110000111010101001010001100010011000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.637009540869393');
        $this->assertEquals(197, $r->Next(0, 300));
        $this->assertEquals(128, $r->Next(0, 300));
        $this->assertEquals('0011111110010111111010101011110110001000001011111101010101111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0233564009067399');
        $this->assertEquals('0011111110110010110001100101111101101000001001011000110010111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0733394269241669');
        $this->assertEquals(115, $r->Next(0, 300));
        $this->assertEquals(186, $r->Next(0, 300));
        $this->assertEquals('0011111111101101111101011011010000101001111110111110101101101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.936243135452384');
        $this->assertEquals('0011111111100111010001001100101110001101111011101000100110010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.72714784356167');
        $this->assertEquals(36, $r->Next(0, 300));
        $this->assertEquals(31, $r->Next(0, 300));
        $this->assertEquals('0011111111011100010111000010011101011110001110001011100001001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.443124620450253');
        $this->assertEquals('0011111111100100010011011100100101001110011010001001101110010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.634495404378742');
        $this->assertEquals(174, $r->Next(0, 300));
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals('0011111111010111011011100010001101111111101011101101110001000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.366097330751874');
        $this->assertEquals('0011111111011001001111111011110111010110101100100111111101111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.394515475907603');
        $this->assertEquals(95, $r->Next(0, 300));
        $this->assertEquals(33, $r->Next(0, 300));
        $this->assertEquals('0011111111101000011101011111010011010000001100001110101111101010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.764398962615244');
        $this->assertEquals('0011111111011101000011010100100000101110001110100001101010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.453935666221164');
        $this->assertEquals(178, $r->Next(0, 300));
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals('0011111111100101000111110110100111011001101010100011111011010100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.660084653021807');
        $this->assertEquals('0011111111010100000010110010011111000011101010000001011001010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.313180867262735');
        $this->assertEquals(256, $r->Next(0, 300));
        $this->assertEquals(8, $r->Next(0, 300));
        $this->assertEquals('0011111111101100001010110100110011010101001110000101011010011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.880285660214855');
        $this->assertEquals('0011111111100011101011000001010101111101011001110101100000101011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.614756340912895');
        $this->assertEquals(57, $r->Next(0, 300));
        $this->assertEquals(260, $r->Next(0, 300));
        $this->assertEquals('0011111111100100010100000011011001111011101010001010000001101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.634791604538817');
        $this->assertEquals('0011111111100110100110110011101101100011111011010011011001110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.706449217957654');
        $this->assertEquals(108, $r->Next(0, 300));
        $this->assertEquals(113, $r->Next(0, 300));
        $this->assertEquals('0011111111101010001111101111100001010111011101000111110111110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.820186777887953');
        $this->assertEquals('0011111111100111000101000010010100110001001011100010100001001010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.721209140830305');
        $this->assertEquals(231, $r->Next(0, 300));
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals('0011111111000100101110100100110111101101001010010111010010011100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.161935559083678');
        $this->assertEquals('0011111111101011000000100110000100001101111101100000010011000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.844040419833753');
        $this->assertEquals('0011111111101101111011111000011100110011001110111101111100001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.935489273134381');
        $this->assertEquals('0011111111001111111010001000001011110000001111111101000100000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.249283187207432');
        $this->assertEquals(90, $r->Next(0, 300));
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals('0011111111100000110100100100111101011011001000011010010010011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.525672605505992');
        $this->assertEquals('0011111111011001001010111000011110000110101100100101011100001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.393281823672951');
        $this->assertEquals(119, $r->Next(0, 300));
        $this->assertEquals(248, $r->Next(0, 300));
        $this->assertEquals('0011111111100000110100010010000100001111001000011010001001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.525528459123116');
        $this->assertEquals('0011111111100110110101011101011010010000001011011010101110101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.713603288267554');
        $this->assertEquals(291, $r->Next(0, 300));
        $this->assertEquals(36, $r->Next(0, 300));
        $this->assertEquals('0011111111011000001000110010000000011111001100000100011001000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.377143888909902');
        $this->assertEquals('0011111111100110000010001110101101010111001011000001000111010111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.688588781602955');
        $this->assertEquals(12, $r->Next(0, 300));
        $this->assertEquals(89, $r->Next(0, 300));
        $this->assertEquals('0011111111101000100101111000011101001111101100010010111100001111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.768497138642006');
        $this->assertEquals('0011111111100110101110011100001000001010011011010111001110000100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.710175533644005');
        $this->assertEquals(65, $r->Next(0, 300));
        $this->assertEquals(106, $r->Next(0, 300));
        $this->assertEquals('0011111111100111101111101001011011010110001011110111110100101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.74201528390032');
        $this->assertEquals('0011111111010100100100110011110101011001001010010010011001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.321486794539488');
        $this->assertEquals(161, $r->Next(0, 300));
        $this->assertEquals(76, $r->Next(0, 300));
        $this->assertEquals('0011111111011110000111000110001100100011101111000011100011000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.470482621095368');
        $this->assertEquals('0011111111100111100100101101100001001011001011110010010110110001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.736675402492599');
        $this->assertEquals(81, $r->Next(0, 300));
        $this->assertEquals(60, $r->Next(0, 300));
        $this->assertEquals('0011111111001010101100101101110100010100001101010110010110111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.208583483569596');
        $this->assertEquals('0011111111100100101000101110110010001110101010010100010111011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.644888189921569');
        $this->assertEquals(187, $r->Next(0, 300));
        $this->assertEquals(234, $r->Next(0, 300));
        $this->assertEquals('0011111111101110011011111100001011101110001111001101111110000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.951142754848647');
        $this->assertEquals('0011111111101101011100111001001111000010001110101110011100101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.92035854278149');
        $this->assertEquals('0011111111100000100101110001110011100011111000010010111000111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.518446393086783');
        $this->assertEquals('0011111111010110000111100011110110000110101011000011110001111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.345595723644642');
        $this->assertEquals(17, $r->Next(0, 300));
        $this->assertEquals(126, $r->Next(0, 300));
        $this->assertEquals('0011111111101001001100110100010010000110101100100110011010001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.787508261756742');
        $this->assertEquals('0011111111011101101000011011101011000011001110110100001101110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.462996187835464');
        $this->assertEquals(189, $r->Next(0, 300));
        $this->assertEquals(15, $r->Next(0, 300));
        $this->assertEquals('0011111110110110110101111010001101110010001011011010111101000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0892278817897792');
        $this->assertEquals('0011111111011110100000000101110100011111101111010000000010111010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.476584702486445');
        $this->assertEquals(269, $r->Next(0, 300));
        $this->assertEquals(154, $r->Next(0, 300));
        $this->assertEquals('0011111111010101000100110101011010101000101010100010011010101101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.329305329047751');
        $this->assertEquals('0011111111100101100101110011000101010011001010110010111001100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.674706137121984');
        $this->assertEquals(101, $r->Next(0, 300));
        $this->assertEquals(156, $r->Next(0, 300));
        $this->assertEquals('0011111111101110011111001001110111100001011111001111100100111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.952712002188299');
        $this->assertEquals('0011111110101111000101010111100110101100001111100010101011110011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0607107184178711');
        $this->assertEquals(95, $r->Next(0, 300));
        $this->assertEquals(241, $r->Next(0, 300));
        $this->assertEquals('0011111110111010000111100101000110111110001101000011110010100011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.102025135933433');
        $this->assertEquals('0011111111100011101001011110100010000110101001110100101111010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.614002478594893');
        $this->assertEquals(213, $r->Next(0, 300));
        $this->assertEquals(14, $r->Next(0, 300));
        $this->assertEquals('0011111111101000100100010010000100000110111100010010001001000010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.767715943869071');
        $this->assertEquals('0011111111101001001111110111011100001111111100100111111011101110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.788997203013393');
        $this->assertEquals(36, $r->Next(0, 300));
        $this->assertEquals(59, $r->Next(0, 300));
        $this->assertEquals('0011111111100011110101000111111101110110101001111010100011111111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.619689685581107');
        $this->assertEquals('0011111111101100001011100011010010000000011110000101110001101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.880640269201547');
        $this->assertEquals('0011111110110111000010001000101001010000001011100001000100010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0899740644218279');
        $this->assertEquals('0011111111001000000011100010100010000010001100000001110001010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.187932075088812');
        $this->assertEquals(50, $r->Next(0, 300));
        $this->assertEquals(137, $r->Next(0, 300));
        $this->assertEquals('0011111111000101110001110011100111001101001010111000111001110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.170142388516172');
        $this->assertEquals('0011111111100110010010100000001110010010011011001001010000000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.696534906372677');
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals('0011111111101101100001100111110110000011101110110000110011111011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.922667271887263');
        $this->assertEquals('0011111111101000001000010100110101100110011100000100001010011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.754065227580287');
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals(207, $r->Next(0, 300));
        $this->assertEquals('0011111111001101101110101010100011111001001110110111010101010010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.232258912749709');
        $this->assertEquals('0011111110101110111010010111110111100000001111011101001011111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0603751503212262');
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals(286, $r->Next(0, 300));
        $this->assertEquals('0011111111011010000100100101100111101101101101000010010010110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.407370073444848');
        $this->assertEquals('0011111111100011000101100111101101010000111001100010110011110111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.596494348531819');
        $this->assertEquals(258, $r->Next(0, 300));
        $this->assertEquals(205, $r->Next(0, 300));
        $this->assertEquals('0011111111100110001001100100111010101101001011000100110010011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.69217618773327');
        $this->assertEquals('0011111111100010000000110110110110101011011001000000011011011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.562918505427855');
        $this->assertEquals(139, $r->Next(0, 300));
        $this->assertEquals(43, $r->Next(0, 300));
        $this->assertEquals('0011111111101010001011111100100110001010011101000101111110010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.818333406848057');
        $this->assertEquals('0011111111101100111100010011010001011101001110011110001001101001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.90444391449189');
        $this->assertEquals('0011111111100100010000111100010001110101001010001000011110001001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.633272389244881');
        $this->assertEquals('0011111110000110000110111100011010010000001011000011011110001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0107951653240226');
        $this->assertEquals(196, $r->Next(0, 300));
        $this->assertEquals(299, $r->Next(0, 300));
        $this->assertEquals('0011111111010101110100011000110010000100101010111010001100011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.340914849816316');
        $this->assertEquals('0011111111011011110000010101101100110100001101111000001010110110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.433676529877668');
        $this->assertEquals(129, $r->Next(0, 300));
        $this->assertEquals(62, $r->Next(0, 300));
        $this->assertEquals('0011111111011000101111100011101010001011101100010111110001110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.386610638064617');
        $this->assertEquals('0011111111100110101100000100111011110100001011010110000010011110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.70902202311392');
        $this->assertEquals(103, $r->Next(0, 300));
        $this->assertEquals(261, $r->Next(0, 300));
        $this->assertEquals('0011111111100000001001010110001011011111111000000100101011000110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.504563748605812');
        $this->assertEquals('0011111111100100100000101100101011100101101010010000010110010110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.640965889506492');
        $this->assertEquals(85, $r->Next(0, 300));
        $this->assertEquals(181, $r->Next(0, 300));
        $this->assertEquals('0011111111000001101010110110100001011100001000110101011011010001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.138043446530608');
        $this->assertEquals('0011111111100010000100010100001111001001101001000010001010001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.564607518988013');
        $this->assertEquals(24, $r->Next(0, 300));
        $this->assertEquals(123, $r->Next(0, 300));
        $this->assertEquals('0011111111011000011011100111110010010000101100001101110011111001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.381743565845184');
        $this->assertEquals('0011111111100100110111001100001001110000001010011011100110000101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.651948184078535');
        $this->assertEquals(206, $r->Next(0, 300));
        $this->assertEquals(243, $r->Next(0, 300));
        $this->assertEquals('0011111111011000011011001001010000110010001100001101100100101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.381627129568545');
        $this->assertEquals('0011111111100000110100011001101111001110011000011010001100111000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.525586989487329');
        $this->assertEquals(100, $r->Next(0, 300));
        $this->assertEquals(280, $r->Next(0, 300));
        $this->assertEquals('0011111111001000000111111001011101001101001100000011111100101111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.188464081468277');
        $this->assertEquals('0011111111100000110111011010001110011110101000011011101101000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.527055558993973');
        $this->assertEquals(217, $r->Next(0, 300));
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals('0011111111100100011011100011001011000010111010001101110001100110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.638451939280355');
        $this->assertEquals('0011111111010001000000010011010000101100001000100000001001101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.265698474024282');
        $this->assertEquals(18, $r->Next(0, 300));
        $this->assertEquals(68, $r->Next(0, 300));
        $this->assertEquals('0011111111100110001010000111100111010100111011000101000011110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.692440906396341');
        $this->assertEquals('0011111111101101100100101011000000001100111110110010010101100000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.924156213143913');
        $this->assertEquals('0011111111011010011100010000111001001000001101001110001000011101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.413150377763971');
        $this->assertEquals('0011111111010010100111110111001111000010101001010011111011101000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.290982189258087');
        $this->assertEquals(77, $r->Next(0, 300));
        $this->assertEquals(7, $r->Next(0, 300));
        $this->assertEquals('0011111111100101100011110111101010011000001010110001111011110101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.673764512256609');
        $this->assertEquals('0011111111100100110000100010110100000001011010011000010001011010', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.648703100927502');
        $this->assertEquals(183, $r->Next(0, 300));
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals('0011111110110111100010001100001110001000001011110001000110000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0919305999260073');
        $this->assertEquals('0011111111001100011011110101001010101010001110001101111010100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.222147305599482');
        $this->assertEquals(120, $r->Next(0, 300));
        $this->assertEquals(25, $r->Next(0, 300));
        $this->assertEquals('0011111111011011001100010010011100101000101101100110001001001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.424875058897247');
        $this->assertEquals('0011111111101100110000111001111001110100111110011000011100111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.898879269090891');
        $this->assertEquals('0011111110110000001000010010010000110010001000000100001001001000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0630056974771459');
        $this->assertEquals('0011111111011010000000010000000000011110101101000000001000000000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.406311063750792');
        $this->assertEquals(156, $r->Next(0, 300));
        $this->assertEquals(294, $r->Next(0, 300));
        $this->assertEquals('0011111111010100100010110110110001111001101010010001011011011001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.321009749230468');
        $this->assertEquals('0011111111101010111101001010111101011000001101011110100101011111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.842368767057717');
        $this->assertEquals('0011111111100011101111011000001101011101101001110111101100000111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.616883929174805');
        $this->assertEquals('0011111111101010000101110010101001110011111101000010111001010101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.815327860328987');
        $this->assertEquals('0011111110111001011111101000110110110010001100101111110100011011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0995873031670168');
        $this->assertEquals('0011111111011111110111111000100110010100001111111011111100010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.498018641256736');
        $this->assertEquals(6, $r->Next(0, 300));
        $this->assertEquals(257, $r->Next(0, 300));
        $this->assertEquals('0011111111101111100000011010011100010010001111110000001101001110', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.984576736104012');
        $this->assertEquals('0011111111010100100011011011111001001111001010010001101101111101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.32115133028531');
        $this->assertEquals(70, $r->Next(0, 300));
        $this->assertEquals(71, $r->Next(0, 300));
        $this->assertEquals('0011111111100010011111001000101111001000011001001111100100011000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.577703372378696');
        $this->assertEquals('0011111110101100111111100011001110110100001110011111110001100111', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0566269071105062');
        $this->assertEquals(274, $r->Next(0, 300));
        $this->assertEquals(64, $r->Next(0, 300));
        $this->assertEquals('0011111111000011011000101111001010010110001001101100010111100101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.151457141224042');
        $this->assertEquals('0011111111101001010011011110000110010100111100101001101111000011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.790756979859787');
        $this->assertEquals(46, $r->Next(0, 300));
        $this->assertEquals(107, $r->Next(0, 300));
        $this->assertEquals('0011111111101111010011010100011111010111111111101001101010010000', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.978183671821926');
        $this->assertEquals('0011111110100101000010001011110111000000001010100001000101111100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.0410823151660535');
        $this->assertEquals(60, $r->Next(0, 300));
        $this->assertEquals(254, $r->Next(0, 300));
        $this->assertEquals('0011111111011011110000010000011010111010101101111000001000001101', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.433656389561322');
        $this->assertEquals('0011111110111100101010000011100111001010001110010101000001110100', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.111941921111169');
        $this->assertEquals(160, $r->Next(0, 300));
        $this->assertEquals(30, $r->Next(0, 300));
        $this->assertEquals('0011111110111010001010001000000001010010001101000101000100000001', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.102180500096726');
        $this->assertEquals('0011111111101010011010110000100101101100111101001101011000010011', Helper::FloatToBinStr($r->NextDouble()), 'Number: 0.825566017919018');
    }
}

